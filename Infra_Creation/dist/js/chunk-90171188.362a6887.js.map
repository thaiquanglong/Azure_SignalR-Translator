{"version":3,"sources":["webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationErrorCodes.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechContext.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognizer.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationStatus.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Queue.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionMessage.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Error.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/Enums.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationReason.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Translations.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConnectionEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/OpusRecorder.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationSynthesisResult.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/OutputFormat.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognizer.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceTelemetryListener.Internal.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/CognitiveTokenAuthentication.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Guid.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/RecognitionEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RecognizerConfig.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioStreamFormat.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognitionResult.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/AddedLmIntent.js","webpack:///./node_modules/core-js/library/fn/object/define-property.js","webpack:///./node_modules/core-js/library/fn/get-iterator.js","webpack:///./node_modules/core-js/library/modules/es6.object.define-property.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionOpenResponse.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechServiceRecognizer.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Events.js","webpack:///./src/views/CaptionHost.vue?5f4f","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./src/lib/translator.js","webpack:///src/views/CaptionHost.vue","webpack:///./src/views/CaptionHost.vue?26b5","webpack:///./src/views/CaptionHost.vue?862a","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DynamicGrammarBuilder.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RecognitionEvents.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/FileAudioSource.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceRecognizerBase.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognitionCanceledEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SimpleSpeechPhrase.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/PCMRecorder.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/IntentResponse.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IConnection.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/EventSource.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationConnectionFactory.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechConnectionFactory.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognitionEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/RawWebsocketMessage.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationDetails.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/ReplayableAudioNode.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/NoMatchDetails.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PhraseListGrammar.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/List.js","webpack:///./node_modules/ws/browser.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PropertyCollection.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/RiffPcmEncoder.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TranslationSynthesisEnd.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeechHypothesis.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/LanguageUnderstandingModel.js","webpack:///./src/views/CaptionHost.vue?77df","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionResult.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechTranslationConfig.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionEvents.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechConfig.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/NoMatchReason.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/RecognitionResult.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechConnectionMessage.Internal.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Stream.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/WebsocketMessageFormatter.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/MicAudioSource.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IntentConnectionFactory.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/PullAudioInputStreamCallback.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognitionEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RequestSession.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioConfig.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/PlatformEvent.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/KeywordRecognitionModel.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TranslationPhrase.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognitionCanceledEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/WebsocketMessageAdapter.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/CognitiveSubscriptionKeyAuthentication.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationServiceRecognizer.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/AudioSourceEvents.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IAuthentication.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ResultReason.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/ConsoleLoggingListener.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PropertyId.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IntentServiceRecognizer.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognizer.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SessionEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeechDetected.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/EnumTranslation.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationSynthesisEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognitionResult.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Promise.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Recognizer.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/DetailedSpeechPhrase.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Connection.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TranslationHypothesis.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionCanceledEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioInputStream.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/QueryParameterNames.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/WebsocketConnection.js"],"names":["Object","defineProperty","exports","value","CancellationErrorCode","SpeechContext","dynamicGrammar","this","privContext","privDynamicGrammar","prototype","setSection","sectionName","toJSON","dgi","generateGrammarObject","ret","JSON","stringify","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","create","Exports_1","__webpack_require__","SpeechConnectionFactory_1","Contracts_1","Exports_2","SpeechRecognizer","_super","speechConfig","audioConfig","_this","speechConfigImpl","Contracts","throwIfNull","throwIfNullOrWhitespace","properties","getProperty","PropertyId","SpeechServiceConnection_RecoLanguage","call","SpeechConnectionFactory","privDisposedSpeechRecognizer","get","throwIfDisposed","SpeechServiceConnection_EndpointId","enumerable","configurable","SpeechServiceAuthorization_Token","set","token","setProperty","OutputFormatPropertyName","OutputFormat","Simple","Detailed","privProperties","recognizeOnceAsync","cb","err","implRecognizerStop","implRecognizerStart","RecognitionMode","Interactive","e","error","Error","typedError","name","message","startContinuousRecognitionAsync","Conversation","undefined","stopContinuousRecognitionAsync","startKeywordRecognitionAsync","model","stopKeywordRecognitionAsync","close","dispose","disposing","createRecognizerConfig","RecognizerConfig","createServiceRecognizer","authentication","connectionFactory","recognizerConfig","configImpl","SpeechServiceRecognizer","Recognizer","TranslationStatus","__export","m","TranslationStatus_1","SubscriberType","Error_1","List_1","Promise_1","Queue","list","privPromiseStore","List","privIsDrainInProgress","privIsDisposing","privDisposeReason","enqueue","item","throwIfDispose","enqueueFromPromise","PromiseHelper","fromResult","promise","add","finally","length","first","result","isCompleted","removeFirst","isError","privList","dequeue","deferredSubscriber","Deferred","privSubscribers","deferral","type","Dequeue","drain","peek","subs","Peek","isDisposed","drainAndDispose","pendingItemProcessor","reason","subscriber","resolve","_i","_a","privDetachables","detachable","detach","whenAll","toArray","continueWith","forEach","index","lists","dequeuedItem","InvalidOperationError","ObjectDisposedError","push","onAdded","MessageType","Guid_1","ConnectionMessage","messageType","body","headers","id","privBody","Text","Binary","ArrayBuffer","privMessageType","privHeaders","privId","createNoDashGuid","ArgumentNullError","argumentName","objectName","SynthesisStatus","RecognitionStatus","CancellationReason","Translations","privMap","PropertyCollection","key","def","ConnectionEventArgs","apply","arguments","SessionEventArgs","OpusRecorder","options","record","context","mediaStream","outputStream","mediaRecorder","MediaRecorder","privMediaRecorderOptions","timeslice","ondataavailable","dataAvailableEvent","reader_1","FileReader","readAsArrayBuffer","data","onloadend","event","write","privMediaResources","recorder","stream","start","releaseMediaResources","state","stop","getTracks","track","TranslationSynthesisResult","audio","privReason","privAudio","IntentRecognizer","throwIfNullOrUndefined","IntentConnectionFactory","privAddedIntents","privAddedLmIntents","privDisposedIntentRecognizer","keys","privUmbrellaIntent","buildSpeechContext","privReco","speechContext","Intent","addReferenceGrammar","ReferenceGrammars","intentReco","setIntents","addIntent","simplePhrase","intentId","addIntentWithLanguageModel","intentName","modelImpl","appId","AddedLmIntent","addAllIntents","audioImpl","IntentServiceRecognizer","region","subscriptionKey","refGrammers","addedLmIntent","grammer","SpeechServiceConnection_Key","provider","RecognitionEvents_1","ServiceTelemetryListener","requestId","audioSourceId","audioNodeId","privIsDisposed","privListeningTriggerMetric","privMicMetric","privConnectionEstablishMetric","onEvent","RecognitionTriggeredEvent","privRequestId","End","eventTime","Name","Start","AudioStreamNodeAttachingEvent","privAudioSourceId","privAudioNodeId","privMicStartTime","AudioStreamNodeAttachedEvent","AudioSourceErrorEvent","AudioStreamNodeErrorEvent","AudioStreamNodeDetachedEvent","ConnectingToServiceEvent","privConnectionId","sessionId","ConnectionStartEvent","connectionId","privConnectionStartTime","ConnectionEstablishedEvent","Id","ConnectionEstablishErrorEvent","getConnectionError","statusCode","ConnectionMessageReceivedEvent","path","privReceivedMessages","networkReceivedTime","getTelemetry","metrics","telemetry","Metrics","ReceivedMessages","json","toString","IAuthentication_1","AuthHeader","CognitiveTokenAuthentication","fetchCallback","fetchOnExpiryCallback","fetch","authFetchEventId","privFetchCallback","onSuccessContinueWith","AuthInfo","fetchOnExpiry","privFetchOnExpiryCallback","createGuid","Date","getTime","guid","replace","c","r","Math","random","floor","RegExp","toUpperCase","RecognitionEventArgs","offset","privOffset","SpeechResultFormat","speechServiceConfig","parameters","privRecognitionMode","privSpeechServiceConfig","SpeechServiceConfig","Context","privParameters","privRecognitionActivityTimeout","Recognition","serialize","replacement","k","charAt","toLowerCase","substring","recognition","os","system","System","SPEECHSDK_CLIENTSDK_VERSION","version","build","lang","OS","platform","Device","manufacturer","AudioStreamFormat","getDefaultInputFormat","AudioStreamFormatImpl","getWaveFormatPCM","samplesPerSecond","bitsPerSample","channels","samplesPerSec","formatTag","avgBytesPerSec","blockAlign","max","SpeechRecognitionResult","resultId","text","duration","errorDetails","RecognitionResult","$Object","module","it","desc","$export","S","F","f","ConnectionOpenResponse","privStatusCode","audioSource","speechRecognizer","privSpeechRecognizer","processTypeSpecificMessages","connectionMessage","successCallback","errorCallBack","resultProps","SpeechServiceResponse_JsonResult","textBody","hypothesis","SpeechHypothesis","fromJSON","privRequestSession","ResultReason","RecognizingSpeech","Duration","Offset","currentTurnAudioOffset","ev","SpeechRecognitionEventArgs","recognizing","sendTelemetryData","simple","SimpleSpeechPhrase","resultReason","EnumTranslation","implTranslateRecognitionResult","onServiceRecognized","Canceled","cancelReason","implTranslateCancelResult","canceled","cancelEvent","SpeechRecognitionCanceledEventArgs","ServiceError","NoError","isSpeechEnded","NoMatch","InitialSilenceTimeout","privRecognizerConfig","DisplayText","detailed","DetailedSpeechPhrase","Success","NBest","Display","event_1","recognized","cancelRecognition","cancellationReason","errorCode","cancelRecoCallback","CancellationErrorCodePropertyName","_b","ServiceRecognizerBase","EventSource_1","Events","privInstance","EventSource","setEventSource","eventSource","render","_vm","_h","$createElement","_c","_self","staticClass","started","on","click","_v","attrs","_s","currentSentence","directives","rawName","expression","placeholder","domProps","input","$event","target","composing","change","$$selectedVal","filter","o","selected","map","val","_value","fromLanguage","multiple","_l","staticRenderFns","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","i","descriptor","writable","define_property_default","_createClass","protoProps","staticProps","_defineProperty","obj","Translator","callback","_callback","alreadyStarted","_recognizer","AudioConfig","fromDefaultMicrophoneInput","SpeechTranslationConfig","fromSubscription","speechRecognitionLanguage","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","get_iterator_default","toLanguages","next","done","addTargetLanguage","return","TranslationRecognizer","recognizerCallback","bind","s","captions","languages","getLanguageCode","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","langCode","caption","translations","original","stopRecognizer","console","log","speechApiKeyLocalStorageKey","CaptionHostvue_type_script_lang_js_","mixins","language_list_mixin","window","localStorage","getItem","concat","constants","watch","newKey","setItem","created","translator","axios_default","a","post","apiBaseUrl","withCredentials","methods","beforeDestroy","views_CaptionHostvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","DynamicGrammarBuilder","addPhrase","phrase","privPhrases","clearPhrases","grammar","privGrammars","clearGrammars","retObj","retPhrases_1","array","Groups","Type","Items","SpeechRecognitionEvent","eventName","eventType","EventType","Info","privSessionId","PlatformEvent","ListeningStartedEvent","authFetchEventid","privAuthFetchEventid","RecognitionCompletionStatus","RecognitionStartedEvent","privAuthFetchEventId","RecognitionEndedEvent","serviceTag","status","privStatus","privError","privServiceTag","AudioStreamFormat_1","FileAudioSource","file","privStreams","turnOn","errorMsg","fromError","privFile","lastIndexOf","size","MAX_SIZE","AudioSourceInitializingEvent","AudioSourceReadyEvent","attach","upload","streamReader","turnOff","read","streamId","isClosed","AudioSourceOffEvent","_","Stream","reader","startOffset","endOffset","CHUNK_SIZE","processNextChunk","min","chunk_1","slice","onload","onerror","chunk","getReader","privEvents","FILEFORMAT","SAMPLE_RATE","UPLOAD_INTERVAL","AudioConfig_1","AudioInputStream_1","AudioInputStream","PullAudioInputStream","PushAudioInputStream","CancellationReason_1","PullAudioInputStreamCallback_1","PullAudioInputStreamCallback","KeywordRecognitionModel_1","KeywordRecognitionModel","SessionEventArgs_1","RecognitionEventArgs_1","OutputFormat_1","IntentRecognitionEventArgs_1","IntentRecognitionEventArgs","RecognitionResult_1","SpeechRecognitionResult_1","IntentRecognitionResult_1","IntentRecognitionResult","LanguageUnderstandingModel_1","LanguageUnderstandingModel","SpeechRecognitionEventArgs_1","SpeechRecognitionCanceledEventArgs_1","TranslationRecognitionEventArgs_1","TranslationRecognitionEventArgs","TranslationSynthesisEventArgs_1","TranslationSynthesisEventArgs","TranslationRecognitionResult_1","TranslationRecognitionResult","TranslationSynthesisResult_1","ResultReason_1","SpeechConfig_1","SpeechConfig","SpeechTranslationConfig_1","PropertyCollection_1","PropertyId_1","Recognizer_1","SpeechRecognizer_1","IntentRecognizer_1","TranslationRecognizer_1","Translations_1","NoMatchReason_1","NoMatchReason","NoMatchDetails_1","NoMatchDetails","TranslationRecognitionCanceledEventArgs_1","TranslationRecognitionCanceledEventArgs","IntentRecognitionCanceledEventArgs_1","IntentRecognitionCanceledEventArgs","CancellationDetails_1","CancellationDetails","CancellationErrorCodes_1","ConnectionEventArgs_1","Connection_1","Connection","PhraseListGrammar_1","PhraseListGrammar","Exports_3","Exports_4","SpeechConnectionMessage_Internal_1","recognizer","telemetryData","telemetryDataEnabled","fetchConnection","connection","send","SpeechConnectionMessage","configureConnection","receiveMessage","onSuccessContinueWithPromise","isRecognizing","fromConnectionMessage","privMustReportEndOfStream","speechStartDetected","SpeechDetected","speechStartEventArgs","privRecognizer","speechStopDetected","speechStopEventArgs","speechEndDetected","cancelRecognitionLocal","EndOfStream","sessionStopEventArgs","onServiceTurnEndResponse","isContinuousRecognition","sessionStopped","sendSpeechContext","sendSpeechServiceConfig","requestSession","SpeechServiceConfigJson","withTelemetry","parse","privSpeechServiceConfigConnectionId","speechContextJson","sendAudio","audioStreamNode","deferred","lastSendTime","now","audioFormat","privAudioSource","format","readAndUploadCycle","audioStreamChunk","payload","buffer","uploaded","isEnd","onSpeechEnded","minSendTime","byteLength","delay_1","setTimeout","reject","privAuthentication","privConnectionFactory","RequestSession","privConnectionEvents","privSpeechContext","privConnectionConfigurationPromise","recognitionMode","recognize","recoMode","startNewRecognition","listenForServiceTelemetry","events","continueWithPromise","audioNode","ConnectionFailure","ReplayableAudioNode","onAudioSourceAttachCompleted","sessionStartEventArgs","sessionStarted","messageRetrievalPromise","audioSendPromise","RuntimeError","completionPromise","stopRecognizing","onStopRecognizing","sendFinalAudio","connect","connectImpl","disconnect","privConnectionPromise","isUnAuthorized","ConnectionState","Disconnected","onPreConnectionStart","authPromise","onAuthCompleted","connectionEvents","open","response","onConnectionEstablishCompleted","SpeechServiceConnection_Endpoint","privErrorDetails","privErrorCode","privSimpleSpeechPhrase","PcmRecorder","desiredSampleRate","scriptNode","bufferSize","createScriptProcessor","audioSampleRate","sampleRate","waveStreamEncoder","RiffPcmEncoder","needHeader","onaudioprocess","inputFrame","inputBuffer","getChannelData","waveFrame","encode","micInput","createMediaStreamSource","scriptProcessorNode","source","destination","privResult","IntentResponse","privIntentResponse","query","topScoringIntent","entities","metadata","privEventListeners","paramName","eventId","onEventCallback","attachListener","listener","privMetadata","ConnectionIdHeader","TranslationConnectionFactory","config","authInfo","endpoint","SpeechServiceConnection_Region","queryParams","from","to","SpeechServiceConnection_TranslationToLanguages","voiceName","featureName","SpeechServiceConnection_TranslationVoice","headerName","WebsocketConnection","WebsocketMessageFormatter","QueryParameterNames_1","interactiveRelativeUri","conversationRelativeUri","dictationRelativeUri","endpointId","language","search","QueryParameterNames","DeploymentIdParamName","LanguageParamName","FormatParamName","host","Dictation","ConnectionMessage_1","RawWebsocketMessage","privPayload","simpleSpeech","privBuffers","privReplayOffset","privLastShrinkOffset","privBufferStartOffset","privBufferSerial","privBufferedBytes","privReplay","privAudioNode","privFormat","offsetToSeek","bytesToSeek","round","retVal","BufferEntry","replay","shrinkBuffers","serial","byteOffset","NotRecognized","BabbleTimeout","InitialBabbleTimeout","anObject","getIterator","iterFn","recogBase","privGrammerBuilder","fromRecognizer","recoBase","internalData","addPhrases","phrases","clear","privSubscriptionIdCounter","privAddSubscriptions","privRemoveSubscriptions","privDisposedSubscriptions","itemIndex","last","insertAt","unshift","splice","triggerSubscriptions","removeAt","removeLast","remove","count","removedElements","addedCallback","subscriptionId","onRemoved","removedCallback","onDisposed","disposedCallback","join","seperator","cloneCopy","any","where","all","select","selectList","filteredList","orderBy","compareFn","clonedArray","orderedArray","sort","orderByDesc","clone","concatArray","subscriptions","list_1","privKeys","privValues","keyToUse","n","clonedMap","actualSampleRate","privChannelCount","actualAudioFrame","audioFrame","downSampleAudioFrame","privActualSampleRate","privDesiredSampleRate","audioLength","buffer_1","view_1","DataView","floatTo16BitPCM","bytesPerSample","fileLength","view","setString","setUint32","setUint16","str","setUint8","charCodeAt","setInt16","srcFrame","srcRate","dstRate","ratio","dstLength","dstFrame","Float32Array","srcOffset","dstOffset","nextSrcOffset","accum","TranslationSynthesisEnd","privSynthesisEnd","FailureReason","privSpeechHypothesis","fromEndpoint","uri","hostname","langModelImp","LanguageUnderstandingModelImpl","firstDot","indexOf","substr","lastSegment","pathname","searchParams","fromAppId","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CaptionHost_vue_vue_type_style_index_0_id_9004f914_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CaptionHost_vue_vue_type_style_index_0_id_9004f914_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","privTranslations","SpeechTranslationConfigImpl","fromAuthorizationToken","authorizationToken","href","privSpeechProperties","outputFormat","targetLanguages","split","PlatformEvent_1","ConnectionEvent","privUri","ConnectionClosedEvent","Debug","privRreason","statuscode","networkReceivedTimeISO","privNetworkReceivedTime","privMessage","ConnectionMessageSentEvent","networkSentTimeISO","privNetworkSentTime","speechImpl","SpeechConfigImpl","SpeechServiceConnection_IntentRegion","URL","privResultId","privText","privDuration","privJson","PathHeaderName","ContentTypeHeaderName","RequestIdHeaderName","RequestTimestampHeaderName","contentType","additionalHeaders","toISOString","privPath","privContentType","privAdditionalHeaders","Queue_1","privReaderIdCounter","privIsEnded","buffer2","throwIfClosed","writeStreamChunk","readerId","readerQueue","currentLength","privStreambuffer","privReaderQueues","StreamReader","streamChunk","onClose","privIsClosed","privReaderQueue","privOnClose","privStreamId","CRLF","toConnectionMessage","textMessage","textContent","headerBodySplit","parseHeaders","binaryMessage","binaryContent","dataView","headerLength","getInt16","headersString","String","fromCharCode","getInt8","makeHeaders","content","binaryBody","headerInt8Array","Int8Array","stringToArrayBuffer","setInt8","bodyInt8Array","header","headerMatches","match","headerMatches_1","separatorIndex","trim","headerValue","MicAudioSource","privInitializeDeferral","createAudioContext","nav","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","constraints","errorCallback","then","catch","video","privMediaStream","tmp","resume","listen","destroyAudioContext","privRecorder","AudioContext","hasClose","suspend","AUDIOFORMAT","getSpeechRegionFromIntentRegion","intentRegion","ServiceTelemetryListener_Internal_1","privIsAudioNodeDetached","privIsRecognizing","privIsSpeechEnded","privTurnStartAudioOffset","privLastRecoOffset","onComplete","continuousRecognition","privServiceTelemetryListener","detachAudioNode","privRequestCompletionDeferral","pcmRecorder","AudioConfigImpl","fromWavFileInput","fromStreamInput","audioStream","PullAudioInputStreamImpl","privSource","privName","privEventId","privEventTime","privEventType","privDisposed","fromFile","fileName","throwIfFileDoesNotExist","fromStream","param","throwIfArrayEmptyOrWhitespace","array_1","TranslationPhrase","privTranslationPhrase","Translation","ws","WebsocketMessageAdapter","messageFormatter","privConnectionState","privConnectionEstablishDeferral","Connecting","WebSocket","forceNpmWebSocket","privWebsocketClient","binaryType","privReceivingMessageQueue","privDisconnectDeferral","privSendMessageQueue","processSendQueue","onopen","Connected","onclose","code","onmessage","deferred_1","rawMessage","privMessageFormatter","messageSendStatusDeferral","messageSendDeferral","Message","sendStatusDeferral","sendRawMessage","sendItem","closeReason","pendingReceiveItem","pendingSendItem","sendError","None","CognitiveSubscriptionKeyAuthentication","privAuthInfo","TranslationServiceRecognizer","translationRecognizer","privTranslationRecognizer","fireEventForResult","TranslationHypothesis","translatedPhrase","result_1","result_2","sendSynthesisAudio","synthEnd","synthesizing","result_3","retEvent","canceledResult","serviceResult","translation","Language","TranslatedSpeech","RecognizedSpeech","TranslatingSpeech","SynthesizingAudioCompleted","SynthesizingAudio","AudioSourceEvent","AudioStreamNodeEvent","privHeaderName","privToken","ConsoleLoggingListener","logLevelFilter","Warning","privLogLevelFilter","debug","info","warn","logFragments","EventTime","prop","valueToLog","privIntentRecognizer","privIntentDataSent","addedIntents","umbrellaIntent","speechHypothesis","RecognizingIntent","sendEvent","privPendingIntentArgs","intentResponse","addedIntent","intent","RecognizedIntent","LanguageUnderstandingServiceResponse_JsonResult","privDisposedTranslationRecognizer","privSpeechStartDetected","recognitionStatus","EndOfDictation","privIntentId","PromiseState","PromiseResult","promiseResultEventSource","throwIfError","privIsCompleted","privIsError","PromiseResultEventSource","setResult","privOnSetResult","setError","privOnSetError","onSetResult","onSetError","promises","errors","completedPromises","checkForCompletion","promises_1","Promise","sink","privSink","continuationCallback","continuationDeferral","continuationResult","continuationPromise","callbackWrapper","privPromise","Sink","privState","privPromiseResult","privPromiseResultEvents","privSuccessHandlers","privErrorHandlers","Resolved","executeSuccessCallback","detachHandlers","Rejected","errorHandler","executeErrorCallback","implCommonRecognizerSetup","enableTelemetry","enabled","osPlatform","osName","osVersion","userAgent","appVersion","privDetailedSpeechPhrase","privServiceRecognizer","privEventListener","connectionEvent","connected","disconnected","openConnection","closeConnection","privTranslationHypothesis","sessionid","privCancelReason","createPushStream","createPullStream","PushAudioInputStreamImpl","privStream","dataBuffer","privCallback","readBuff","pulledBytes","WebsocketMessageAdapter_1","queryParameters","privConnectionMessageAdapter","encodeURIComponent"],"mappings":"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","file":"js/chunk-90171188.362a6887.js","sourcesContent":["\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n *  Defines error code in case that CancellationReason is Error.\n *  Added in version 1.1.0.\n */\nvar CancellationErrorCode;\n(function (CancellationErrorCode) {\n    /**\n     * Indicates that no error occurred during speech recognition.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"NoError\"] = 0] = \"NoError\";\n    /**\n     * Indicates an authentication error.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"AuthenticationFailure\"] = 1] = \"AuthenticationFailure\";\n    /**\n     * Indicates that one or more recognition parameters are invalid.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"BadRequestParameters\"] = 2] = \"BadRequestParameters\";\n    /**\n     * Indicates that the number of parallel requests exceeded the number of allowed\n     * concurrent transcriptions for the subscription.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"TooManyRequests\"] = 3] = \"TooManyRequests\";\n    /**\n     * Indicates a connection error.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"ConnectionFailure\"] = 4] = \"ConnectionFailure\";\n    /**\n     * Indicates a time-out error when waiting for response from service.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"ServiceTimeout\"] = 5] = \"ServiceTimeout\";\n    /**\n     * Indicates that an error is returned by the service.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"ServiceError\"] = 6] = \"ServiceError\";\n    /**\n     * Indicates an unexpected runtime error.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"RuntimeError\"] = 7] = \"RuntimeError\";\n})(CancellationErrorCode = exports.CancellationErrorCode || (exports.CancellationErrorCode = {}));\n\n//# sourceMappingURL=CancellationErrorCodes.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Represents the JSON used in the speech.context message sent to the speech service.\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\n */\nvar SpeechContext = /** @class */ (function () {\n    function SpeechContext(dynamicGrammar) {\n        this.privContext = {};\n        this.privDynamicGrammar = dynamicGrammar;\n    }\n    /**\n     * Adds a section to the speech.context object.\n     * @param sectionName Name of the section to add.\n     * @param value JSON serializeable object that represents the value.\n     */\n    SpeechContext.prototype.setSection = function (sectionName, value) {\n        this.privContext[sectionName] = value;\n    };\n    SpeechContext.prototype.toJSON = function () {\n        var dgi = this.privDynamicGrammar.generateGrammarObject();\n        this.setSection(\"dgi\", dgi);\n        var ret = JSON.stringify(this.privContext);\n        return ret;\n    };\n    return SpeechContext;\n}());\nexports.SpeechContext = SpeechContext;\n\n//# sourceMappingURL=SpeechContext.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common.speech/Exports\");\nvar SpeechConnectionFactory_1 = require(\"../common.speech/SpeechConnectionFactory\");\nvar Contracts_1 = require(\"./Contracts\");\nvar Exports_2 = require(\"./Exports\");\n/**\n * Performs speech recognition from microphone, file, or other audio input streams, and gets transcribed text as result.\n * @class SpeechRecognizer\n */\nvar SpeechRecognizer = /** @class */ (function (_super) {\n    __extends(SpeechRecognizer, _super);\n    /**\n     * SpeechRecognizer constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this recognizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    function SpeechRecognizer(speechConfig, audioConfig) {\n        var _this = this;\n        var speechConfigImpl = speechConfig;\n        Contracts_1.Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\n        Contracts_1.Contracts.throwIfNullOrWhitespace(speechConfigImpl.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage), Exports_2.PropertyId[Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        _this = _super.call(this, audioConfig, speechConfigImpl.properties, new SpeechConnectionFactory_1.SpeechConnectionFactory()) || this;\n        _this.privDisposedSpeechRecognizer = false;\n        return _this;\n    }\n    Object.defineProperty(SpeechRecognizer.prototype, \"endpointId\", {\n        /**\n         * Gets the endpoint id of a customized speech model that is used for speech recognition.\n         * @member SpeechRecognizer.prototype.endpointId\n         * @function\n         * @public\n         * @returns {string} the endpoint id of a customized speech model that is used for speech recognition.\n         */\n        get: function () {\n            Contracts_1.Contracts.throwIfDisposed(this.privDisposedSpeechRecognizer);\n            return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_EndpointId, \"00000000-0000-0000-0000-000000000000\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechRecognizer.prototype, \"authorizationToken\", {\n        /**\n         * Gets the authorization token used to communicate with the service.\n         * @member SpeechRecognizer.prototype.authorizationToken\n         * @function\n         * @public\n         * @returns {string} Authorization token.\n         */\n        get: function () {\n            return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token);\n        },\n        /**\n         * Gets/Sets the authorization token used to communicate with the service.\n         * @member SpeechRecognizer.prototype.authorizationToken\n         * @function\n         * @public\n         * @param {string} token - Authorization token.\n         */\n        set: function (token) {\n            Contracts_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n            this.properties.setProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token, token);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechRecognizer.prototype, \"speechRecognitionLanguage\", {\n        /**\n         * Gets the spoken language of recognition.\n         * @member SpeechRecognizer.prototype.speechRecognitionLanguage\n         * @function\n         * @public\n         * @returns {string} The spoken language of recognition.\n         */\n        get: function () {\n            Contracts_1.Contracts.throwIfDisposed(this.privDisposedSpeechRecognizer);\n            return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechRecognizer.prototype, \"outputFormat\", {\n        /**\n         * Gets the output format of recognition.\n         * @member SpeechRecognizer.prototype.outputFormat\n         * @function\n         * @public\n         * @returns {OutputFormat} The output format of recognition.\n         */\n        get: function () {\n            Contracts_1.Contracts.throwIfDisposed(this.privDisposedSpeechRecognizer);\n            if (this.properties.getProperty(Exports_1.OutputFormatPropertyName, Exports_2.OutputFormat[Exports_2.OutputFormat.Simple]) === Exports_2.OutputFormat[Exports_2.OutputFormat.Simple]) {\n                return Exports_2.OutputFormat.Simple;\n            }\n            else {\n                return Exports_2.OutputFormat.Detailed;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechRecognizer.prototype, \"properties\", {\n        /**\n         * The collection of properties and their values defined for this SpeechRecognizer.\n         * @member SpeechRecognizer.prototype.properties\n         * @function\n         * @public\n         * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechRecognizer.\n         */\n        get: function () {\n            return this.privProperties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Starts speech recognition, and stops after the first utterance is recognized.\n     * The task returns the recognition text as result.\n     * Note: RecognizeOnceAsync() returns when the first utterance has been recognized,\n     *       so it is suitable only for single shot recognition\n     *       like command or query. For long-running recognition, use StartContinuousRecognitionAsync() instead.\n     * @member SpeechRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the SpeechRecognitionResult.\n     * @param err - Callback invoked in case of an error.\n     */\n    SpeechRecognizer.prototype.recognizeOnceAsync = function (cb, err) {\n        var _this = this;\n        try {\n            Contracts_1.Contracts.throwIfDisposed(this.privDisposedSpeechRecognizer);\n            this.implRecognizerStop();\n            this.implRecognizerStart(Exports_1.RecognitionMode.Interactive, function (e) {\n                _this.implRecognizerStop();\n                if (!!cb) {\n                    cb(e);\n                }\n            }, function (e) {\n                _this.implRecognizerStop();\n                if (!!err) {\n                    err(e);\n                }\n            });\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    var typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n        }\n    };\n    /**\n     * Starts speech recognition, until stopContinuousRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * @member SpeechRecognizer.prototype.startContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    SpeechRecognizer.prototype.startContinuousRecognitionAsync = function (cb, err) {\n        try {\n            Contracts_1.Contracts.throwIfDisposed(this.privDisposedSpeechRecognizer);\n            this.implRecognizerStop();\n            this.implRecognizerStart(Exports_1.RecognitionMode.Conversation, undefined, undefined);\n            // report result to promise.\n            if (!!cb) {\n                try {\n                    cb();\n                }\n                catch (e) {\n                    if (!!err) {\n                        err(e);\n                    }\n                }\n                cb = undefined;\n            }\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    var typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n        }\n    };\n    /**\n     * Stops continuous speech recognition.\n     * @member SpeechRecognizer.prototype.stopContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    SpeechRecognizer.prototype.stopContinuousRecognitionAsync = function (cb, err) {\n        try {\n            Contracts_1.Contracts.throwIfDisposed(this.privDisposedSpeechRecognizer);\n            this.implRecognizerStop();\n            if (!!cb) {\n                try {\n                    cb();\n                }\n                catch (e) {\n                    if (!!err) {\n                        err(e);\n                    }\n                }\n            }\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    var typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n        }\n    };\n    /**\n     * Starts speech recognition with keyword spotting, until\n     * stopKeywordRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * Note: Key word spotting functionality is only available on the\n     *      Speech Devices SDK. This functionality is currently not included in the SDK itself.\n     * @member SpeechRecognizer.prototype.startKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param {KeywordRecognitionModel} model The keyword recognition model that\n     *        specifies the keyword to be recognized.\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    SpeechRecognizer.prototype.startKeywordRecognitionAsync = function (model, cb, err) {\n        Contracts_1.Contracts.throwIfNull(model, \"model\");\n        if (!!err) {\n            err(\"Not yet implemented.\");\n        }\n    };\n    /**\n     * Stops continuous speech recognition.\n     * Note: Key word spotting functionality is only available on the\n     *       Speech Devices SDK. This functionality is currently not included in the SDK itself.\n     * @member SpeechRecognizer.prototype.stopKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    SpeechRecognizer.prototype.stopKeywordRecognitionAsync = function (cb, err) {\n        if (!!cb) {\n            cb();\n        }\n    };\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member SpeechRecognizer.prototype.close\n     * @function\n     * @public\n     */\n    SpeechRecognizer.prototype.close = function () {\n        Contracts_1.Contracts.throwIfDisposed(this.privDisposedSpeechRecognizer);\n        this.dispose(true);\n    };\n    /**\n     * Disposes any resources held by the object.\n     * @member SpeechRecognizer.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - true if disposing the object.\n     */\n    SpeechRecognizer.prototype.dispose = function (disposing) {\n        if (this.privDisposedSpeechRecognizer) {\n            return;\n        }\n        if (disposing) {\n            this.implRecognizerStop();\n            this.privDisposedSpeechRecognizer = true;\n        }\n        _super.prototype.dispose.call(this, disposing);\n    };\n    SpeechRecognizer.prototype.createRecognizerConfig = function (speechConfig) {\n        return new Exports_1.RecognizerConfig(speechConfig, this.properties);\n    };\n    SpeechRecognizer.prototype.createServiceRecognizer = function (authentication, connectionFactory, audioConfig, recognizerConfig) {\n        var configImpl = audioConfig;\n        return new Exports_1.SpeechServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\n    };\n    return SpeechRecognizer;\n}(Exports_2.Recognizer));\nexports.SpeechRecognizer = SpeechRecognizer;\n\n//# sourceMappingURL=SpeechRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Defines translation status.\n * @class TranslationStatus\n */\nvar TranslationStatus;\n(function (TranslationStatus) {\n    /**\n     * @member TranslationStatus.Success\n     */\n    TranslationStatus[TranslationStatus[\"Success\"] = 0] = \"Success\";\n    /**\n     * @member TranslationStatus.Error\n     */\n    TranslationStatus[TranslationStatus[\"Error\"] = 1] = \"Error\";\n})(TranslationStatus = exports.TranslationStatus || (exports.TranslationStatus = {}));\n\n//# sourceMappingURL=TranslationStatus.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./AudioSourceEvents\"));\n__export(require(\"./ConnectionEvents\"));\n__export(require(\"./ConnectionMessage\"));\n__export(require(\"./ConnectionOpenResponse\"));\n__export(require(\"./Error\"));\n__export(require(\"./Events\"));\n__export(require(\"./EventSource\"));\n__export(require(\"./Guid\"));\n__export(require(\"./IConnection\"));\n__export(require(\"./List\"));\n__export(require(\"./PlatformEvent\"));\n__export(require(\"./Promise\"));\n__export(require(\"./Queue\"));\n__export(require(\"./RawWebsocketMessage\"));\n__export(require(\"./RiffPcmEncoder\"));\n__export(require(\"./Stream\"));\nvar TranslationStatus_1 = require(\"../common.speech/TranslationStatus\");\nexports.TranslationStatus = TranslationStatus_1.TranslationStatus;\n\n//# sourceMappingURL=Exports.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Error_1 = require(\"./Error\");\nvar List_1 = require(\"./List\");\nvar Promise_1 = require(\"./Promise\");\nvar SubscriberType;\n(function (SubscriberType) {\n    SubscriberType[SubscriberType[\"Dequeue\"] = 0] = \"Dequeue\";\n    SubscriberType[SubscriberType[\"Peek\"] = 1] = \"Peek\";\n})(SubscriberType || (SubscriberType = {}));\nvar Queue = /** @class */ (function () {\n    function Queue(list) {\n        var _this = this;\n        this.privPromiseStore = new List_1.List();\n        this.privIsDrainInProgress = false;\n        this.privIsDisposing = false;\n        this.privDisposeReason = null;\n        this.enqueue = function (item) {\n            _this.throwIfDispose();\n            _this.enqueueFromPromise(Promise_1.PromiseHelper.fromResult(item));\n        };\n        this.enqueueFromPromise = function (promise) {\n            _this.throwIfDispose();\n            _this.privPromiseStore.add(promise);\n            promise.finally(function () {\n                while (_this.privPromiseStore.length() > 0) {\n                    if (!_this.privPromiseStore.first().result().isCompleted) {\n                        break;\n                    }\n                    else {\n                        var p = _this.privPromiseStore.removeFirst();\n                        if (!p.result().isError) {\n                            _this.privList.add(p.result().result);\n                        }\n                        else {\n                            // TODO: Log as warning.\n                        }\n                    }\n                }\n            });\n        };\n        this.dequeue = function () {\n            _this.throwIfDispose();\n            var deferredSubscriber = new Promise_1.Deferred();\n            if (_this.privSubscribers) {\n                _this.privSubscribers.add({ deferral: deferredSubscriber, type: SubscriberType.Dequeue });\n                _this.drain();\n            }\n            return deferredSubscriber.promise();\n        };\n        this.peek = function () {\n            _this.throwIfDispose();\n            var deferredSubscriber = new Promise_1.Deferred();\n            var subs = _this.privSubscribers;\n            if (subs) {\n                _this.privSubscribers.add({ deferral: deferredSubscriber, type: SubscriberType.Peek });\n                _this.drain();\n            }\n            return deferredSubscriber.promise();\n        };\n        this.length = function () {\n            _this.throwIfDispose();\n            return _this.privList.length();\n        };\n        this.isDisposed = function () {\n            return _this.privSubscribers == null;\n        };\n        this.drainAndDispose = function (pendingItemProcessor, reason) {\n            if (!_this.isDisposed() && !_this.privIsDisposing) {\n                _this.privDisposeReason = reason;\n                _this.privIsDisposing = true;\n                var subs = _this.privSubscribers;\n                if (subs) {\n                    while (subs.length() > 0) {\n                        var subscriber = subs.removeFirst();\n                        // TODO: this needs work (Resolve(null) instead?).\n                        subscriber.deferral.resolve(undefined);\n                        // subscriber.deferral.reject(\"Disposed\");\n                    }\n                    // note: this block assumes cooperative multitasking, i.e.,\n                    // between the if-statement and the assignment there are no\n                    // thread switches.\n                    // Reason is that between the initial const = this.; and this\n                    // point there is the derral.resolve() operation that might have\n                    // caused recursive calls to the Queue, especially, calling\n                    // Dispose() on the queue alredy (which would reset the var\n                    // here to null!).\n                    // That should generally hold true for javascript...\n                    if (_this.privSubscribers === subs) {\n                        _this.privSubscribers = subs;\n                    }\n                }\n                for (var _i = 0, _a = _this.privDetachables; _i < _a.length; _i++) {\n                    var detachable = _a[_i];\n                    detachable.detach();\n                }\n                if (_this.privPromiseStore.length() > 0 && pendingItemProcessor) {\n                    return Promise_1.PromiseHelper\n                        .whenAll(_this.privPromiseStore.toArray())\n                        .continueWith(function () {\n                        _this.privSubscribers = null;\n                        _this.privList.forEach(function (item, index) {\n                            pendingItemProcessor(item);\n                        });\n                        _this.privList = null;\n                        return true;\n                    });\n                }\n                else {\n                    _this.privSubscribers = null;\n                    _this.privList = null;\n                }\n            }\n            return Promise_1.PromiseHelper.fromResult(true);\n        };\n        this.dispose = function (reason) {\n            _this.drainAndDispose(null, reason);\n        };\n        this.drain = function () {\n            if (!_this.privIsDrainInProgress && !_this.privIsDisposing) {\n                _this.privIsDrainInProgress = true;\n                var subs = _this.privSubscribers;\n                var lists = _this.privList;\n                if (subs && lists) {\n                    while (lists.length() > 0 && subs.length() > 0 && !_this.privIsDisposing) {\n                        var subscriber = subs.removeFirst();\n                        if (subscriber.type === SubscriberType.Peek) {\n                            subscriber.deferral.resolve(lists.first());\n                        }\n                        else {\n                            var dequeuedItem = lists.removeFirst();\n                            subscriber.deferral.resolve(dequeuedItem);\n                        }\n                    }\n                    // note: this block assumes cooperative multitasking, i.e.,\n                    // between the if-statement and the assignment there are no\n                    // thread switches.\n                    // Reason is that between the initial const = this.; and this\n                    // point there is the derral.resolve() operation that might have\n                    // caused recursive calls to the Queue, especially, calling\n                    // Dispose() on the queue alredy (which would reset the var\n                    // here to null!).\n                    // That should generally hold true for javascript...\n                    if (_this.privSubscribers === subs) {\n                        _this.privSubscribers = subs;\n                    }\n                    // note: this block assumes cooperative multitasking, i.e.,\n                    // between the if-statement and the assignment there are no\n                    // thread switches.\n                    // Reason is that between the initial const = this.; and this\n                    // point there is the derral.resolve() operation that might have\n                    // caused recursive calls to the Queue, especially, calling\n                    // Dispose() on the queue alredy (which would reset the var\n                    // here to null!).\n                    // That should generally hold true for javascript...\n                    if (_this.privList === lists) {\n                        _this.privList = lists;\n                    }\n                }\n                _this.privIsDrainInProgress = false;\n            }\n        };\n        this.throwIfDispose = function () {\n            if (_this.isDisposed()) {\n                if (_this.privDisposeReason) {\n                    throw new Error_1.InvalidOperationError(_this.privDisposeReason);\n                }\n                throw new Error_1.ObjectDisposedError(\"Queue\");\n            }\n            else if (_this.privIsDisposing) {\n                throw new Error_1.InvalidOperationError(\"Queue disposing\");\n            }\n        };\n        this.privList = list ? list : new List_1.List();\n        this.privDetachables = [];\n        this.privSubscribers = new List_1.List();\n        this.privDetachables.push(this.privList.onAdded(this.drain));\n    }\n    return Queue;\n}());\nexports.Queue = Queue;\n\n//# sourceMappingURL=Queue.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Error_1 = require(\"./Error\");\nvar Guid_1 = require(\"./Guid\");\nvar MessageType;\n(function (MessageType) {\n    MessageType[MessageType[\"Text\"] = 0] = \"Text\";\n    MessageType[MessageType[\"Binary\"] = 1] = \"Binary\";\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\nvar ConnectionMessage = /** @class */ (function () {\n    function ConnectionMessage(messageType, body, headers, id) {\n        this.privBody = null;\n        if (messageType === MessageType.Text && body && !(typeof (body) === \"string\")) {\n            throw new Error_1.InvalidOperationError(\"Payload must be a string\");\n        }\n        if (messageType === MessageType.Binary && body && !(body instanceof ArrayBuffer)) {\n            throw new Error_1.InvalidOperationError(\"Payload must be ArrayBuffer\");\n        }\n        this.privMessageType = messageType;\n        this.privBody = body;\n        this.privHeaders = headers ? headers : {};\n        this.privId = id ? id : Guid_1.createNoDashGuid();\n    }\n    Object.defineProperty(ConnectionMessage.prototype, \"messageType\", {\n        get: function () {\n            return this.privMessageType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectionMessage.prototype, \"headers\", {\n        get: function () {\n            return this.privHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectionMessage.prototype, \"body\", {\n        get: function () {\n            return this.privBody;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectionMessage.prototype, \"textBody\", {\n        get: function () {\n            if (this.privMessageType === MessageType.Binary) {\n                throw new Error_1.InvalidOperationError(\"Not supported for binary message\");\n            }\n            return this.privBody;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectionMessage.prototype, \"binaryBody\", {\n        get: function () {\n            if (this.privMessageType === MessageType.Text) {\n                throw new Error_1.InvalidOperationError(\"Not supported for text message\");\n            }\n            return this.privBody;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectionMessage.prototype, \"id\", {\n        get: function () {\n            return this.privId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ConnectionMessage;\n}());\nexports.ConnectionMessage = ConnectionMessage;\n\n//# sourceMappingURL=ConnectionMessage.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * The error that is thrown when an argument passed in is null.\n *\n * @export\n * @class ArgumentNullError\n * @extends {Error}\n */\nvar ArgumentNullError = /** @class */ (function (_super) {\n    __extends(ArgumentNullError, _super);\n    /**\n     * Creates an instance of ArgumentNullError.\n     *\n     * @param {string} argumentName - Name of the argument that is null\n     *\n     * @memberOf ArgumentNullError\n     */\n    function ArgumentNullError(argumentName) {\n        var _this = _super.call(this, argumentName) || this;\n        _this.name = \"ArgumentNull\";\n        _this.message = argumentName;\n        return _this;\n    }\n    return ArgumentNullError;\n}(Error));\nexports.ArgumentNullError = ArgumentNullError;\n/**\n * The error that is thrown when an invalid operation is performed in the code.\n *\n * @export\n * @class InvalidOperationError\n * @extends {Error}\n */\n// tslint:disable-next-line:max-classes-per-file\nvar InvalidOperationError = /** @class */ (function (_super) {\n    __extends(InvalidOperationError, _super);\n    /**\n     * Creates an instance of InvalidOperationError.\n     *\n     * @param {string} error - The error\n     *\n     * @memberOf InvalidOperationError\n     */\n    function InvalidOperationError(error) {\n        var _this = _super.call(this, error) || this;\n        _this.name = \"InvalidOperation\";\n        _this.message = error;\n        return _this;\n    }\n    return InvalidOperationError;\n}(Error));\nexports.InvalidOperationError = InvalidOperationError;\n/**\n * The error that is thrown when an object is disposed.\n *\n * @export\n * @class ObjectDisposedError\n * @extends {Error}\n */\n// tslint:disable-next-line:max-classes-per-file\nvar ObjectDisposedError = /** @class */ (function (_super) {\n    __extends(ObjectDisposedError, _super);\n    /**\n     * Creates an instance of ObjectDisposedError.\n     *\n     * @param {string} objectName - The object that is disposed\n     * @param {string} error - The error\n     *\n     * @memberOf ObjectDisposedError\n     */\n    function ObjectDisposedError(objectName, error) {\n        var _this = _super.call(this, error) || this;\n        _this.name = objectName + \"ObjectDisposed\";\n        _this.message = error;\n        return _this;\n    }\n    return ObjectDisposedError;\n}(Error));\nexports.ObjectDisposedError = ObjectDisposedError;\n\n//# sourceMappingURL=Error.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @class SynthesisStatus\n * @private\n */\nvar SynthesisStatus;\n(function (SynthesisStatus) {\n    /**\n     * The response contains valid audio data.\n     * @member SynthesisStatus.Success\n     */\n    SynthesisStatus[SynthesisStatus[\"Success\"] = 0] = \"Success\";\n    /**\n     * Indicates the end of audio data. No valid audio data is included in the message.\n     * @member SynthesisStatus.SynthesisEnd\n     */\n    SynthesisStatus[SynthesisStatus[\"SynthesisEnd\"] = 1] = \"SynthesisEnd\";\n    /**\n     * Indicates an error occurred during synthesis data processing.\n     * @member SynthesisStatus.Error\n     */\n    SynthesisStatus[SynthesisStatus[\"Error\"] = 2] = \"Error\";\n})(SynthesisStatus = exports.SynthesisStatus || (exports.SynthesisStatus = {}));\nvar RecognitionStatus;\n(function (RecognitionStatus) {\n    RecognitionStatus[RecognitionStatus[\"Success\"] = 0] = \"Success\";\n    RecognitionStatus[RecognitionStatus[\"NoMatch\"] = 1] = \"NoMatch\";\n    RecognitionStatus[RecognitionStatus[\"InitialSilenceTimeout\"] = 2] = \"InitialSilenceTimeout\";\n    RecognitionStatus[RecognitionStatus[\"BabbleTimeout\"] = 3] = \"BabbleTimeout\";\n    RecognitionStatus[RecognitionStatus[\"Error\"] = 4] = \"Error\";\n    RecognitionStatus[RecognitionStatus[\"EndOfDictation\"] = 5] = \"EndOfDictation\";\n})(RecognitionStatus = exports.RecognitionStatus || (exports.RecognitionStatus = {}));\n\n//# sourceMappingURL=Enums.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Defines the possible reasons a recognition result might be canceled.\n * @class CancellationReason\n */\nvar CancellationReason;\n(function (CancellationReason) {\n    /**\n     * Indicates that an error occurred during speech recognition.\n     * @member CancellationReason.Error\n     */\n    CancellationReason[CancellationReason[\"Error\"] = 0] = \"Error\";\n    /**\n     * Indicates that the end of the audio stream was reached.\n     * @member CancellationReason.EndOfStream\n     */\n    CancellationReason[CancellationReason[\"EndOfStream\"] = 1] = \"EndOfStream\";\n})(CancellationReason = exports.CancellationReason || (exports.CancellationReason = {}));\n\n//# sourceMappingURL=CancellationReason.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"./Exports\");\n/**\n * Represents collection of parameters and their values.\n * @class Translation\n */\nvar Translations = /** @class */ (function () {\n    function Translations() {\n        // Use an PropertyCollection internally, just wrapping it to hide the | enum syntax it has.\n        this.privMap = new Exports_1.PropertyCollection();\n    }\n    /**\n     * Returns the parameter value in type String. The parameter must have the same type as String.\n     * Currently only String, int and bool are allowed.\n     * If the name is not available, the specified defaultValue is returned.\n     * @member Translation.prototype.get\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string} def - The default value which is returned if the parameter is not available in the collection.\n     * @returns {string} value of the parameter.\n     */\n    Translations.prototype.get = function (key, def) {\n        return this.privMap.getProperty(key, def);\n    };\n    /**\n     * Sets the String value of the parameter specified by name.\n     * @member Translation.prototype.set\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string} value - The value of the parameter.\n     */\n    Translations.prototype.set = function (key, value) {\n        this.privMap.setProperty(key, value);\n    };\n    return Translations;\n}());\nexports.Translations = Translations;\n\n//# sourceMappingURL=Translations.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"./Exports\");\n/**\n * Defines payload for connection events like Connected/Disconnected.\n * Added in version 1.2.0\n */\nvar ConnectionEventArgs = /** @class */ (function (_super) {\n    __extends(ConnectionEventArgs, _super);\n    function ConnectionEventArgs() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ConnectionEventArgs;\n}(Exports_1.SessionEventArgs));\nexports.ConnectionEventArgs = ConnectionEventArgs;\n\n//# sourceMappingURL=ConnectionEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar OpusRecorder = /** @class */ (function () {\n    function OpusRecorder(options) {\n        var _this = this;\n        this.record = function (context, mediaStream, outputStream) {\n            var mediaRecorder = new MediaRecorder(mediaStream, _this.privMediaRecorderOptions);\n            var timeslice = 100; // this is in ms - 100 ensures that the chunk doesn't exceed the max size of chunk allowed in WS connection\n            mediaRecorder.ondataavailable = function (dataAvailableEvent) {\n                if (outputStream) {\n                    var reader_1 = new FileReader();\n                    reader_1.readAsArrayBuffer(dataAvailableEvent.data);\n                    reader_1.onloadend = function (event) {\n                        outputStream.write(reader_1.result);\n                    };\n                }\n            };\n            _this.privMediaResources = {\n                recorder: mediaRecorder,\n                stream: mediaStream,\n            };\n            mediaRecorder.start(timeslice);\n        };\n        this.releaseMediaResources = function (context) {\n            if (_this.privMediaResources.recorder.state !== \"inactive\") {\n                _this.privMediaResources.recorder.stop();\n            }\n            _this.privMediaResources.stream.getTracks().forEach(function (track) { return track.stop(); });\n        };\n        this.privMediaRecorderOptions = options;\n    }\n    return OpusRecorder;\n}());\nexports.OpusRecorder = OpusRecorder;\n/* Declaring this inline to avoid compiler warnings\ndeclare class MediaRecorder {\n    constructor(mediaStream: MediaStream, options: any);\n\r\n    public state: string;\n\r\n    public ondataavailable(dataAvailableEvent: any): void;\n    public stop(): void;\n}*/\n\n//# sourceMappingURL=OpusRecorder.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Defines translation synthesis result, i.e. the voice output of the translated\n * text in the target language.\n * @class TranslationSynthesisResult\n */\nvar TranslationSynthesisResult = /** @class */ (function () {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {ResultReason} reason - The synthesis reason.\n     * @param {ArrayBuffer} audio - The audio data.\n     */\n    function TranslationSynthesisResult(reason, audio) {\n        this.privReason = reason;\n        this.privAudio = audio;\n    }\n    Object.defineProperty(TranslationSynthesisResult.prototype, \"audio\", {\n        /**\n         * Translated text in the target language.\n         * @member TranslationSynthesisResult.prototype.audio\n         * @function\n         * @public\n         * @returns {ArrayBuffer} Translated audio in the target language.\n         */\n        get: function () {\n            return this.privAudio;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TranslationSynthesisResult.prototype, \"reason\", {\n        /**\n         * The synthesis status.\n         * @member TranslationSynthesisResult.prototype.reason\n         * @function\n         * @public\n         * @returns {ResultReason} The synthesis status.\n         */\n        get: function () {\n            return this.privReason;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TranslationSynthesisResult;\n}());\nexports.TranslationSynthesisResult = TranslationSynthesisResult;\n\n//# sourceMappingURL=TranslationSynthesisResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Define Speech Recognizer output formats.\n * @class OutputFormat\n */\nvar OutputFormat;\n(function (OutputFormat) {\n    /**\n     * @member OutputFormat.Simple\n     */\n    OutputFormat[OutputFormat[\"Simple\"] = 0] = \"Simple\";\n    /**\n     * @member OutputFormat.Detailed\n     */\n    OutputFormat[OutputFormat[\"Detailed\"] = 1] = \"Detailed\";\n})(OutputFormat = exports.OutputFormat || (exports.OutputFormat = {}));\n\n//# sourceMappingURL=OutputFormat.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common.speech/Exports\");\nvar Contracts_1 = require(\"./Contracts\");\nvar Exports_2 = require(\"./Exports\");\n/**\n * Intent recognizer.\n * @class\n */\nvar IntentRecognizer = /** @class */ (function (_super) {\n    __extends(IntentRecognizer, _super);\n    /**\n     * Initializes an instance of the IntentRecognizer.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - The set of configuration properties.\n     * @param {AudioConfig} audioConfig - An optional audio input config associated with the recognizer\n     */\n    function IntentRecognizer(speechConfig, audioConfig) {\n        var _this = this;\n        Contracts_1.Contracts.throwIfNullOrUndefined(speechConfig, \"speechConfig\");\n        var configImpl = speechConfig;\n        Contracts_1.Contracts.throwIfNullOrUndefined(configImpl, \"speechConfig\");\n        _this = _super.call(this, audioConfig, configImpl.properties, new Exports_1.IntentConnectionFactory()) || this;\n        _this.privAddedIntents = [];\n        _this.privAddedLmIntents = {};\n        _this.privDisposedIntentRecognizer = false;\n        _this.privProperties = configImpl.properties;\n        Contracts_1.Contracts.throwIfNullOrWhitespace(_this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage), Exports_2.PropertyId[Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        return _this;\n    }\n    Object.defineProperty(IntentRecognizer.prototype, \"speechRecognitionLanguage\", {\n        /**\n         * Gets the spoken language of recognition.\n         * @member IntentRecognizer.prototype.speechRecognitionLanguage\n         * @function\n         * @public\n         * @returns {string} the spoken language of recognition.\n         */\n        get: function () {\n            Contracts_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n            return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IntentRecognizer.prototype, \"authorizationToken\", {\n        /**\n         * Gets the authorization token used to communicate with the service.\n         * @member IntentRecognizer.prototype.authorizationToken\n         * @function\n         * @public\n         * @returns {string} Authorization token.\n         */\n        get: function () {\n            return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token);\n        },\n        /**\n         * Gets/Sets the authorization token used to communicate with the service.\n         * Note: Please use a token derived from your LanguageUnderstanding subscription key for the Intent recognizer.\n         * @member IntentRecognizer.prototype.authorizationToken\n         * @function\n         * @public\n         * @param {string} value - Authorization token.\n         */\n        set: function (value) {\n            this.properties.setProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IntentRecognizer.prototype, \"properties\", {\n        /**\n         * The collection of properties and their values defined for this IntentRecognizer.\n         * @member IntentRecognizer.prototype.properties\n         * @function\n         * @public\n         * @returns {PropertyCollection} The collection of properties and their\n         *          values defined for this IntentRecognizer.\n         */\n        get: function () {\n            return this.privProperties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Starts intent recognition, and stops after the first utterance is recognized.\n     * The task returns the recognition text and intent as result.\n     * Note: RecognizeOnceAsync() returns when the first utterance has been recognized,\n     *       so it is suitable only for single shot recognition like command or query.\n     *       For long-running recognition, use StartContinuousRecognitionAsync() instead.\n     * @member IntentRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the recognition has finished with an IntentRecognitionResult.\n     * @param err - Callback invoked in case of an error.\n     */\n    IntentRecognizer.prototype.recognizeOnceAsync = function (cb, err) {\n        var _this = this;\n        try {\n            Contracts_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n            this.implRecognizerStop();\n            if (Object.keys(this.privAddedLmIntents).length !== 0 || undefined !== this.privUmbrellaIntent) {\n                var context = this.buildSpeechContext();\n                this.privReco.speechContext.setSection(\"intent\", context.Intent);\n                this.privReco.dynamicGrammar.addReferenceGrammar(context.ReferenceGrammars);\n                var intentReco = this.privReco;\n                intentReco.setIntents(this.privAddedLmIntents, this.privUmbrellaIntent);\n            }\n            this.implRecognizerStart(Exports_1.RecognitionMode.Interactive, function (e) {\n                _this.implRecognizerStop();\n                if (!!cb) {\n                    cb(e);\n                }\n            }, function (e) {\n                _this.implRecognizerStop();\n                if (!!err) {\n                    err(e);\n                }\n            });\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    var typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n        }\n    };\n    /**\n     * Starts speech recognition, until stopContinuousRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * @member IntentRecognizer.prototype.startContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    IntentRecognizer.prototype.startContinuousRecognitionAsync = function (cb, err) {\n        try {\n            Contracts_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n            this.implRecognizerStop();\n            if (Object.keys(this.privAddedLmIntents).length !== 0) {\n                var context = this.buildSpeechContext();\n                this.privReco.speechContext.setSection(\"intent\", context.Intent);\n                this.privReco.dynamicGrammar.addReferenceGrammar(context.ReferenceGrammars);\n                var intentReco = this.privReco;\n                intentReco.setIntents(this.privAddedLmIntents, this.privUmbrellaIntent);\n            }\n            this.implRecognizerStart(Exports_1.RecognitionMode.Conversation, undefined, undefined);\n            // report result to promise.\n            if (!!cb) {\n                try {\n                    cb();\n                }\n                catch (e) {\n                    if (!!err) {\n                        err(e);\n                    }\n                }\n                cb = undefined;\n            }\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    var typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n        }\n    };\n    /**\n     * Stops continuous intent recognition.\n     * @member IntentRecognizer.prototype.stopContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    IntentRecognizer.prototype.stopContinuousRecognitionAsync = function (cb, err) {\n        try {\n            Contracts_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n            this.implRecognizerStop();\n            if (!!cb) {\n                try {\n                    cb();\n                }\n                catch (e) {\n                    if (!!err) {\n                        err(e);\n                    }\n                }\n            }\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    var typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n        }\n    };\n    /**\n     * Starts speech recognition with keyword spotting, until stopKeywordRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK.\n     *       This functionality is currently not included in the SDK itself.\n     * @member IntentRecognizer.prototype.startKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param {KeywordRecognitionModel} model - The keyword recognition model that specifies the keyword to be recognized.\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    IntentRecognizer.prototype.startKeywordRecognitionAsync = function (model, cb, err) {\n        Contracts_1.Contracts.throwIfNull(model, \"model\");\n        if (!!err) {\n            err(\"Not yet implemented.\");\n        }\n    };\n    /**\n     * Stops continuous speech recognition.\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK.\n     *       This functionality is currently not included in the SDK itself.\n     * @member IntentRecognizer.prototype.stopKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    IntentRecognizer.prototype.stopKeywordRecognitionAsync = function (cb, err) {\n        if (!!cb) {\n            cb();\n        }\n    };\n    /**\n     * Adds a phrase that should be recognized as intent.\n     * @member IntentRecognizer.prototype.addIntent\n     * @function\n     * @public\n     * @param {string} intentId - A String that represents the identifier of the intent to be recognized.\n     * @param {string} phrase - A String that specifies the phrase representing the intent.\n     */\n    IntentRecognizer.prototype.addIntent = function (simplePhrase, intentId) {\n        Contracts_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        Contracts_1.Contracts.throwIfNullOrWhitespace(intentId, \"intentId\");\n        Contracts_1.Contracts.throwIfNullOrWhitespace(simplePhrase, \"simplePhrase\");\n        this.privAddedIntents.push([intentId, simplePhrase]);\n    };\n    /**\n     * Adds an intent from Language Understanding service for recognition.\n     * @member IntentRecognizer.prototype.addIntentWithLanguageModel\n     * @function\n     * @public\n     * @param {string} intentId - A String that represents the identifier of the intent\n     *        to be recognized. Ignored if intentName is empty.\n     * @param {string} model - The intent model from Language Understanding service.\n     * @param {string} intentName - The intent name defined in the intent model. If it\n     *        is empty, all intent names defined in the model will be added.\n     */\n    IntentRecognizer.prototype.addIntentWithLanguageModel = function (intentId, model, intentName) {\n        Contracts_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        Contracts_1.Contracts.throwIfNullOrWhitespace(intentId, \"intentId\");\n        Contracts_1.Contracts.throwIfNull(model, \"model\");\n        var modelImpl = model;\n        Contracts_1.Contracts.throwIfNullOrWhitespace(modelImpl.appId, \"model.appId\");\n        this.privAddedLmIntents[intentId] = new Exports_1.AddedLmIntent(modelImpl, intentName);\n    };\n    /**\n     * @summary Adds all intents from the specified Language Understanding Model.\n     * @member IntentRecognizer.prototype.addAllIntents\n     * @function\n     * @public\n     * @function\n     * @public\n     * @param {LanguageUnderstandingModel} model - The language understanding model containing the intents.\n     * @param {string} intentId - A custom id String to be returned in the IntentRecognitionResult's getIntentId() method.\n     */\n    IntentRecognizer.prototype.addAllIntents = function (model, intentId) {\n        Contracts_1.Contracts.throwIfNull(model, \"model\");\n        var modelImpl = model;\n        Contracts_1.Contracts.throwIfNullOrWhitespace(modelImpl.appId, \"model.appId\");\n        this.privUmbrellaIntent = new Exports_1.AddedLmIntent(modelImpl, intentId);\n    };\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member IntentRecognizer.prototype.close\n     * @function\n     * @public\n     */\n    IntentRecognizer.prototype.close = function () {\n        Contracts_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        this.dispose(true);\n    };\n    IntentRecognizer.prototype.createRecognizerConfig = function (speechConfig) {\n        return new Exports_1.RecognizerConfig(speechConfig, this.properties);\n    };\n    IntentRecognizer.prototype.createServiceRecognizer = function (authentication, connectionFactory, audioConfig, recognizerConfig) {\n        var audioImpl = audioConfig;\n        return new Exports_1.IntentServiceRecognizer(authentication, connectionFactory, audioImpl, recognizerConfig, this);\n    };\n    IntentRecognizer.prototype.dispose = function (disposing) {\n        if (this.privDisposedIntentRecognizer) {\n            return;\n        }\n        if (disposing) {\n            this.privDisposedIntentRecognizer = true;\n            _super.prototype.dispose.call(this, disposing);\n        }\n    };\n    IntentRecognizer.prototype.buildSpeechContext = function () {\n        var appId;\n        var region;\n        var subscriptionKey;\n        var refGrammers = [];\n        if (undefined !== this.privUmbrellaIntent) {\n            appId = this.privUmbrellaIntent.modelImpl.appId;\n            region = this.privUmbrellaIntent.modelImpl.region;\n            subscriptionKey = this.privUmbrellaIntent.modelImpl.subscriptionKey;\n        }\n        // Build the reference grammer array.\n        for (var _i = 0, _a = Object.keys(this.privAddedLmIntents); _i < _a.length; _i++) {\n            var intentId = _a[_i];\n            var addedLmIntent = this.privAddedLmIntents[intentId];\n            // validate all the same model, region, and key...\n            if (appId === undefined) {\n                appId = addedLmIntent.modelImpl.appId;\n            }\n            else {\n                if (appId !== addedLmIntent.modelImpl.appId) {\n                    throw new Error(\"Intents must all be from the same LUIS model\");\n                }\n            }\n            if (region === undefined) {\n                region = addedLmIntent.modelImpl.region;\n            }\n            else {\n                if (region !== addedLmIntent.modelImpl.region) {\n                    throw new Error(\"Intents must all be from the same LUIS model in a single region\");\n                }\n            }\n            if (subscriptionKey === undefined) {\n                subscriptionKey = addedLmIntent.modelImpl.subscriptionKey;\n            }\n            else {\n                if (subscriptionKey !== addedLmIntent.modelImpl.subscriptionKey) {\n                    throw new Error(\"Intents must all use the same subscription key\");\n                }\n            }\n            var grammer = \"luis/\" + appId + \"-PRODUCTION#\" + intentId;\n            refGrammers.push(grammer);\n        }\n        return {\n            Intent: {\n                id: appId,\n                key: (subscriptionKey === undefined) ? this.privProperties.getProperty(Exports_2.PropertyId[Exports_2.PropertyId.SpeechServiceConnection_Key]) : subscriptionKey,\n                provider: \"LUIS\",\n            },\n            ReferenceGrammars: (undefined === this.privUmbrellaIntent) ? refGrammers : [\"luis/\" + appId + \"-PRODUCTION\"],\n        };\n    };\n    return IntentRecognizer;\n}(Exports_2.Recognizer));\nexports.IntentRecognizer = IntentRecognizer;\n\n//# sourceMappingURL=IntentRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common/Exports\");\nvar RecognitionEvents_1 = require(\"./RecognitionEvents\");\n// tslint:disable-next-line:max-classes-per-file\nvar ServiceTelemetryListener = /** @class */ (function () {\n    function ServiceTelemetryListener(requestId, audioSourceId, audioNodeId) {\n        var _this = this;\n        this.privIsDisposed = false;\n        this.privListeningTriggerMetric = null;\n        this.privMicMetric = null;\n        this.privConnectionEstablishMetric = null;\n        this.onEvent = function (e) {\n            if (_this.privIsDisposed) {\n                return;\n            }\n            if (e instanceof RecognitionEvents_1.RecognitionTriggeredEvent && e.requestId === _this.privRequestId) {\n                _this.privListeningTriggerMetric = {\n                    End: e.eventTime,\n                    Name: \"ListeningTrigger\",\n                    Start: e.eventTime,\n                };\n            }\n            if (e instanceof Exports_1.AudioStreamNodeAttachingEvent && e.audioSourceId === _this.privAudioSourceId && e.audioNodeId === _this.privAudioNodeId) {\n                _this.privMicStartTime = e.eventTime;\n            }\n            if (e instanceof Exports_1.AudioStreamNodeAttachedEvent && e.audioSourceId === _this.privAudioSourceId && e.audioNodeId === _this.privAudioNodeId) {\n                _this.privMicStartTime = e.eventTime;\n            }\n            if (e instanceof Exports_1.AudioSourceErrorEvent && e.audioSourceId === _this.privAudioSourceId) {\n                if (!_this.privMicMetric) {\n                    _this.privMicMetric = {\n                        End: e.eventTime,\n                        Error: e.error,\n                        Name: \"Microphone\",\n                        Start: _this.privMicStartTime,\n                    };\n                }\n            }\n            if (e instanceof Exports_1.AudioStreamNodeErrorEvent && e.audioSourceId === _this.privAudioSourceId && e.audioNodeId === _this.privAudioNodeId) {\n                if (!_this.privMicMetric) {\n                    _this.privMicMetric = {\n                        End: e.eventTime,\n                        Error: e.error,\n                        Name: \"Microphone\",\n                        Start: _this.privMicStartTime,\n                    };\n                }\n            }\n            if (e instanceof Exports_1.AudioStreamNodeDetachedEvent && e.audioSourceId === _this.privAudioSourceId && e.audioNodeId === _this.privAudioNodeId) {\n                if (!_this.privMicMetric) {\n                    _this.privMicMetric = {\n                        End: e.eventTime,\n                        Name: \"Microphone\",\n                        Start: _this.privMicStartTime,\n                    };\n                }\n            }\n            if (e instanceof RecognitionEvents_1.ConnectingToServiceEvent && e.requestId === _this.privRequestId) {\n                _this.privConnectionId = e.sessionId;\n            }\n            if (e instanceof Exports_1.ConnectionStartEvent && e.connectionId === _this.privConnectionId) {\n                _this.privConnectionStartTime = e.eventTime;\n            }\n            if (e instanceof Exports_1.ConnectionEstablishedEvent && e.connectionId === _this.privConnectionId) {\n                if (!_this.privConnectionEstablishMetric) {\n                    _this.privConnectionEstablishMetric = {\n                        End: e.eventTime,\n                        Id: _this.privConnectionId,\n                        Name: \"Connection\",\n                        Start: _this.privConnectionStartTime,\n                    };\n                }\n            }\n            if (e instanceof Exports_1.ConnectionEstablishErrorEvent && e.connectionId === _this.privConnectionId) {\n                if (!_this.privConnectionEstablishMetric) {\n                    _this.privConnectionEstablishMetric = {\n                        End: e.eventTime,\n                        Error: _this.getConnectionError(e.statusCode),\n                        Id: _this.privConnectionId,\n                        Name: \"Connection\",\n                        Start: _this.privConnectionStartTime,\n                    };\n                }\n            }\n            if (e instanceof Exports_1.ConnectionMessageReceivedEvent && e.connectionId === _this.privConnectionId) {\n                if (e.message && e.message.headers && e.message.headers.path) {\n                    if (!_this.privReceivedMessages[e.message.headers.path]) {\n                        _this.privReceivedMessages[e.message.headers.path] = new Array();\n                    }\n                    _this.privReceivedMessages[e.message.headers.path].push(e.networkReceivedTime);\n                }\n            }\n        };\n        this.getTelemetry = function () {\n            var metrics = new Array();\n            if (_this.privListeningTriggerMetric) {\n                metrics.push(_this.privListeningTriggerMetric);\n            }\n            if (_this.privMicMetric) {\n                metrics.push(_this.privMicMetric);\n            }\n            if (_this.privConnectionEstablishMetric) {\n                metrics.push(_this.privConnectionEstablishMetric);\n            }\n            var telemetry = {\n                Metrics: metrics,\n                ReceivedMessages: _this.privReceivedMessages,\n            };\n            var json = JSON.stringify(telemetry);\n            // We dont want to send the same telemetry again. So clean those out.\n            _this.privReceivedMessages = {};\n            _this.privListeningTriggerMetric = null;\n            _this.privMicMetric = null;\n            _this.privConnectionEstablishMetric = null;\n            return json;\n        };\n        this.dispose = function () {\n            _this.privIsDisposed = true;\n        };\n        this.getConnectionError = function (statusCode) {\n            /*\n            -- Websocket status codes --\n            NormalClosure = 1000,\n            EndpointUnavailable = 1001,\n            ProtocolError = 1002,\n            InvalidMessageType = 1003,\n            Empty = 1005,\n            InvalidPayloadData = 1007,\n            PolicyViolation = 1008,\n            MessageTooBig = 1009,\n            MandatoryExtension = 1010,\n            InternalServerError = 1011\n            */\n            switch (statusCode) {\n                case 400:\n                case 1002:\n                case 1003:\n                case 1005:\n                case 1007:\n                case 1008:\n                case 1009: return \"BadRequest\";\n                case 401: return \"Unauthorized\";\n                case 403: return \"Forbidden\";\n                case 503:\n                case 1001: return \"ServerUnavailable\";\n                case 500:\n                case 1011: return \"ServerError\";\n                case 408:\n                case 504: return \"Timeout\";\n                default: return \"statuscode:\" + statusCode.toString();\n            }\n        };\n        this.privRequestId = requestId;\n        this.privAudioSourceId = audioSourceId;\n        this.privAudioNodeId = audioNodeId;\n        this.privReceivedMessages = {};\n    }\n    return ServiceTelemetryListener;\n}());\nexports.ServiceTelemetryListener = ServiceTelemetryListener;\n\n//# sourceMappingURL=ServiceTelemetryListener.Internal.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common/Exports\");\nvar IAuthentication_1 = require(\"./IAuthentication\");\nvar AuthHeader = \"Authorization\";\nvar CognitiveTokenAuthentication = /** @class */ (function () {\n    function CognitiveTokenAuthentication(fetchCallback, fetchOnExpiryCallback) {\n        var _this = this;\n        this.fetch = function (authFetchEventId) {\n            return _this.privFetchCallback(authFetchEventId).onSuccessContinueWith(function (token) { return new IAuthentication_1.AuthInfo(AuthHeader, token); });\n        };\n        this.fetchOnExpiry = function (authFetchEventId) {\n            return _this.privFetchOnExpiryCallback(authFetchEventId).onSuccessContinueWith(function (token) { return new IAuthentication_1.AuthInfo(AuthHeader, token); });\n        };\n        if (!fetchCallback) {\n            throw new Exports_1.ArgumentNullError(\"fetchCallback\");\n        }\n        if (!fetchOnExpiryCallback) {\n            throw new Exports_1.ArgumentNullError(\"fetchOnExpiryCallback\");\n        }\n        this.privFetchCallback = fetchCallback;\n        this.privFetchOnExpiryCallback = fetchOnExpiryCallback;\n    }\n    return CognitiveTokenAuthentication;\n}());\nexports.CognitiveTokenAuthentication = CognitiveTokenAuthentication;\n\n//# sourceMappingURL=CognitiveTokenAuthentication.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar createGuid = function () {\n    var d = new Date().getTime();\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n    return guid;\n};\nexports.createGuid = createGuid;\nvar createNoDashGuid = function () {\n    return createGuid().replace(new RegExp(\"-\", \"g\"), \"\").toUpperCase();\n};\nexports.createNoDashGuid = createNoDashGuid;\n\n//# sourceMappingURL=Guid.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"./Exports\");\n/**\n * Defines payload for session events like Speech Start/End Detected\n * @class\n */\nvar RecognitionEventArgs = /** @class */ (function (_super) {\n    __extends(RecognitionEventArgs, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    function RecognitionEventArgs(offset, sessionId) {\n        var _this = _super.call(this, sessionId) || this;\n        _this.privOffset = offset;\n        return _this;\n    }\n    Object.defineProperty(RecognitionEventArgs.prototype, \"offset\", {\n        /**\n         * Represents the message offset\n         * @member RecognitionEventArgs.prototype.offset\n         * @function\n         * @public\n         */\n        get: function () {\n            return this.privOffset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RecognitionEventArgs;\n}(Exports_1.SessionEventArgs));\nexports.RecognitionEventArgs = RecognitionEventArgs;\n\n//# sourceMappingURL=RecognitionEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RecognitionMode;\n(function (RecognitionMode) {\n    RecognitionMode[RecognitionMode[\"Interactive\"] = 0] = \"Interactive\";\n    RecognitionMode[RecognitionMode[\"Conversation\"] = 1] = \"Conversation\";\n    RecognitionMode[RecognitionMode[\"Dictation\"] = 2] = \"Dictation\";\n})(RecognitionMode = exports.RecognitionMode || (exports.RecognitionMode = {}));\nvar SpeechResultFormat;\n(function (SpeechResultFormat) {\n    SpeechResultFormat[SpeechResultFormat[\"Simple\"] = 0] = \"Simple\";\n    SpeechResultFormat[SpeechResultFormat[\"Detailed\"] = 1] = \"Detailed\";\n})(SpeechResultFormat = exports.SpeechResultFormat || (exports.SpeechResultFormat = {}));\nvar RecognizerConfig = /** @class */ (function () {\n    function RecognizerConfig(speechServiceConfig, parameters) {\n        this.privRecognitionMode = RecognitionMode.Interactive;\n        this.privSpeechServiceConfig = speechServiceConfig ? speechServiceConfig : new SpeechServiceConfig(new Context(null));\n        this.privParameters = parameters;\n    }\n    Object.defineProperty(RecognizerConfig.prototype, \"parameters\", {\n        get: function () {\n            return this.privParameters;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RecognizerConfig.prototype, \"recognitionMode\", {\n        get: function () {\n            return this.privRecognitionMode;\n        },\n        set: function (value) {\n            this.privRecognitionMode = value;\n            this.privRecognitionActivityTimeout = value === RecognitionMode.Interactive ? 8000 : 25000;\n            this.privSpeechServiceConfig.Recognition = RecognitionMode[value];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RecognizerConfig.prototype, \"SpeechServiceConfig\", {\n        get: function () {\n            return this.privSpeechServiceConfig;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RecognizerConfig.prototype, \"recognitionActivityTimeout\", {\n        get: function () {\n            return this.privRecognitionActivityTimeout;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RecognizerConfig.prototype, \"isContinuousRecognition\", {\n        get: function () {\n            return this.privRecognitionMode !== RecognitionMode.Interactive;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RecognizerConfig;\n}());\nexports.RecognizerConfig = RecognizerConfig;\n// The config is serialized and sent as the Speech.Config\n// tslint:disable-next-line:max-classes-per-file\nvar SpeechServiceConfig = /** @class */ (function () {\n    function SpeechServiceConfig(context) {\n        var _this = this;\n        this.serialize = function () {\n            return JSON.stringify(_this, function (key, value) {\n                if (value && typeof value === \"object\") {\n                    var replacement = {};\n                    for (var k in value) {\n                        if (Object.hasOwnProperty.call(value, k)) {\n                            replacement[k && k.charAt(0).toLowerCase() + k.substring(1)] = value[k];\n                        }\n                    }\n                    return replacement;\n                }\n                return value;\n            });\n        };\n        this.context = context;\n    }\n    Object.defineProperty(SpeechServiceConfig.prototype, \"Context\", {\n        get: function () {\n            return this.context;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechServiceConfig.prototype, \"Recognition\", {\n        get: function () {\n            return this.recognition;\n        },\n        set: function (value) {\n            this.recognition = value.toLowerCase();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SpeechServiceConfig;\n}());\nexports.SpeechServiceConfig = SpeechServiceConfig;\n// tslint:disable-next-line:max-classes-per-file\nvar Context = /** @class */ (function () {\n    function Context(os) {\n        this.system = new System();\n        this.os = os;\n    }\n    return Context;\n}());\nexports.Context = Context;\n// tslint:disable-next-line:max-classes-per-file\nvar System = /** @class */ (function () {\n    function System() {\n        // Note: below will be patched for official builds.\n        var SPEECHSDK_CLIENTSDK_VERSION = \"1.3.0\";\n        this.name = \"SpeechSDK\";\n        this.version = SPEECHSDK_CLIENTSDK_VERSION;\n        this.build = \"JavaScript\";\n        this.lang = \"JavaScript\";\n    }\n    return System;\n}());\nexports.System = System;\n// tslint:disable-next-line:max-classes-per-file\nvar OS = /** @class */ (function () {\n    function OS(platform, name, version) {\n        this.platform = platform;\n        this.name = name;\n        this.version = version;\n    }\n    return OS;\n}());\nexports.OS = OS;\n// tslint:disable-next-line:max-classes-per-file\nvar Device = /** @class */ (function () {\n    function Device(manufacturer, model, version) {\n        this.manufacturer = manufacturer;\n        this.model = model;\n        this.version = version;\n    }\n    return Device;\n}());\nexports.Device = Device;\n\n//# sourceMappingURL=RecognizerConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Represents audio stream format used for custom audio input configurations.\n * @class AudioStreamFormat\n */\nvar AudioStreamFormat = /** @class */ (function () {\n    function AudioStreamFormat() {\n    }\n    /**\n     * Creates an audio stream format object representing the default audio stream\n     * format (16KHz 16bit mono PCM).\n     * @member AudioStreamFormat.getDefaultInputFormat\n     * @function\n     * @public\n     * @returns {AudioStreamFormat} The audio stream format being created.\n     */\n    AudioStreamFormat.getDefaultInputFormat = function () {\n        return AudioStreamFormatImpl.getDefaultInputFormat();\n    };\n    /**\n     * Creates an audio stream format object with the specified pcm waveformat characteristics.\n     * @member AudioStreamFormat.getWaveFormatPCM\n     * @function\n     * @public\n     * @param {number} samplesPerSecond - Sample rate, in samples per second (Hertz).\n     * @param {number} bitsPerSample - Bits per sample, typically 16.\n     * @param {number} channels - Number of channels in the waveform-audio data. Monaural data\n     *        uses one channel and stereo data uses two channels.\n     * @returns {AudioStreamFormat} The audio stream format being created.\n     */\n    AudioStreamFormat.getWaveFormatPCM = function (samplesPerSecond, bitsPerSample, channels) {\n        return new AudioStreamFormatImpl(samplesPerSecond, bitsPerSample, channels);\n    };\n    return AudioStreamFormat;\n}());\nexports.AudioStreamFormat = AudioStreamFormat;\n/**\n * @private\n * @class AudioStreamFormatImpl\n */\n// tslint:disable-next-line:max-classes-per-file\nvar AudioStreamFormatImpl = /** @class */ (function (_super) {\n    __extends(AudioStreamFormatImpl, _super);\n    /**\n     * Creates an instance with the given values.\n     * @constructor\n     * @param {number} samplesPerSec - Samples per second.\n     * @param {number} bitsPerSample - Bits per sample.\n     * @param {number} channels - Number of channels.\n     */\n    function AudioStreamFormatImpl(samplesPerSec, bitsPerSample, channels) {\n        if (samplesPerSec === void 0) { samplesPerSec = 16000; }\n        if (bitsPerSample === void 0) { bitsPerSample = 16; }\n        if (channels === void 0) { channels = 1; }\n        var _this = _super.call(this) || this;\n        _this.formatTag = 1;\n        _this.bitsPerSample = bitsPerSample;\n        _this.samplesPerSec = samplesPerSec;\n        _this.channels = channels;\n        _this.avgBytesPerSec = _this.samplesPerSec * _this.channels * (_this.bitsPerSample / 8);\n        _this.blockAlign = _this.channels * Math.max(_this.bitsPerSample, 8);\n        return _this;\n    }\n    /**\n     * Retrieves the default input format.\n     * @member AudioStreamFormatImpl.getDefaultInputFormat\n     * @function\n     * @public\n     * @returns {AudioStreamFormatImpl} The default input format.\n     */\n    AudioStreamFormatImpl.getDefaultInputFormat = function () {\n        return new AudioStreamFormatImpl();\n    };\n    /**\n     * Closes the configuration object.\n     * @member AudioStreamFormatImpl.prototype.close\n     * @function\n     * @public\n     */\n    AudioStreamFormatImpl.prototype.close = function () { return; };\n    return AudioStreamFormatImpl;\n}(AudioStreamFormat));\nexports.AudioStreamFormatImpl = AudioStreamFormatImpl;\n\n//# sourceMappingURL=AudioStreamFormat.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"./Exports\");\n/**\n * Defines result of speech recognition.\n * @class SpeechRecognitionResult\n */\nvar SpeechRecognitionResult = /** @class */ (function (_super) {\n    __extends(SpeechRecognitionResult, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @public\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    function SpeechRecognitionResult(resultId, reason, text, duration, offset, errorDetails, json, properties) {\n        return _super.call(this, resultId, reason, text, duration, offset, errorDetails, json, properties) || this;\n    }\n    return SpeechRecognitionResult;\n}(Exports_1.RecognitionResult));\nexports.SpeechRecognitionResult = SpeechRecognitionResult;\n\n//# sourceMappingURL=SpeechRecognitionResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @class AddedLmIntent\n */\n// tslint:disable-next-line:max-classes-per-file\nvar AddedLmIntent = /** @class */ (function () {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param modelImpl - The model.\n     * @param intentName - The intent name.\n     */\n    function AddedLmIntent(modelImpl, intentName) {\n        this.modelImpl = modelImpl;\n        this.intentName = intentName;\n    }\n    return AddedLmIntent;\n}());\nexports.AddedLmIntent = AddedLmIntent;\n\n//# sourceMappingURL=AddedLmIntent.js.map\n","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ConnectionOpenResponse = /** @class */ (function () {\n    function ConnectionOpenResponse(statusCode, reason) {\n        this.privStatusCode = statusCode;\n        this.privReason = reason;\n    }\n    Object.defineProperty(ConnectionOpenResponse.prototype, \"statusCode\", {\n        get: function () {\n            return this.privStatusCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectionOpenResponse.prototype, \"reason\", {\n        get: function () {\n            return this.privReason;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ConnectionOpenResponse;\n}());\nexports.ConnectionOpenResponse = ConnectionOpenResponse;\n\n//# sourceMappingURL=ConnectionOpenResponse.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../sdk/Exports\");\nvar Exports_2 = require(\"./Exports\");\n// tslint:disable-next-line:max-classes-per-file\nvar SpeechServiceRecognizer = /** @class */ (function (_super) {\n    __extends(SpeechServiceRecognizer, _super);\n    function SpeechServiceRecognizer(authentication, connectionFactory, audioSource, recognizerConfig, speechRecognizer) {\n        var _this = _super.call(this, authentication, connectionFactory, audioSource, recognizerConfig, speechRecognizer) || this;\n        _this.privSpeechRecognizer = speechRecognizer;\n        return _this;\n    }\n    SpeechServiceRecognizer.prototype.processTypeSpecificMessages = function (connectionMessage, successCallback, errorCallBack) {\n        var result;\n        var resultProps = new Exports_1.PropertyCollection();\n        resultProps.setProperty(Exports_1.PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"speech.hypothesis\":\n                var hypothesis = Exports_2.SpeechHypothesis.fromJSON(connectionMessage.textBody);\n                result = new Exports_1.SpeechRecognitionResult(this.privRequestSession.requestId, Exports_1.ResultReason.RecognizingSpeech, hypothesis.Text, hypothesis.Duration, hypothesis.Offset + this.privRequestSession.currentTurnAudioOffset, undefined, connectionMessage.textBody, resultProps);\n                var ev = new Exports_1.SpeechRecognitionEventArgs(result, hypothesis.Duration, this.privRequestSession.sessionId);\n                if (!!this.privSpeechRecognizer.recognizing) {\n                    try {\n                        this.privSpeechRecognizer.recognizing(this.privSpeechRecognizer, ev);\n                        /* tslint:disable:no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                break;\n            case \"speech.phrase\":\n                // Always send telemetry because we want it to to up for recognize once which will listening to the service\n                // after recognition happens.\n                this.sendTelemetryData();\n                var simple = Exports_2.SimpleSpeechPhrase.fromJSON(connectionMessage.textBody);\n                var resultReason = Exports_2.EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus);\n                this.privRequestSession.onServiceRecognized(this.privRequestSession.currentTurnAudioOffset + simple.Offset + simple.Duration);\n                if (Exports_1.ResultReason.Canceled === resultReason) {\n                    var cancelReason = Exports_2.EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\n                    result = new Exports_1.SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, undefined, undefined, undefined, undefined, connectionMessage.textBody, resultProps);\n                    if (!!this.privSpeechRecognizer.canceled) {\n                        var cancelEvent = new Exports_1.SpeechRecognitionCanceledEventArgs(cancelReason, undefined, cancelReason === Exports_1.CancellationReason.Error ? Exports_1.CancellationErrorCode.ServiceError : Exports_1.CancellationErrorCode.NoError, undefined, this.privRequestSession.sessionId);\n                        try {\n                            this.privSpeechRecognizer.canceled(this.privSpeechRecognizer, cancelEvent);\n                            /* tslint:disable:no-empty */\n                        }\n                        catch (_a) { }\n                    }\n                }\n                else {\n                    if (!(this.privRequestSession.isSpeechEnded && resultReason === Exports_1.ResultReason.NoMatch && simple.RecognitionStatus !== Exports_2.RecognitionStatus.InitialSilenceTimeout)) {\n                        if (this.privRecognizerConfig.parameters.getProperty(Exports_2.OutputFormatPropertyName) === Exports_1.OutputFormat[Exports_1.OutputFormat.Simple]) {\n                            result = new Exports_1.SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, simple.DisplayText, simple.Duration, simple.Offset + this.privRequestSession.currentTurnAudioOffset, undefined, connectionMessage.textBody, resultProps);\n                        }\n                        else {\n                            var detailed = Exports_2.DetailedSpeechPhrase.fromJSON(connectionMessage.textBody);\n                            result = new Exports_1.SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, detailed.RecognitionStatus === Exports_2.RecognitionStatus.Success ? detailed.NBest[0].Display : undefined, detailed.Duration, detailed.Offset + this.privRequestSession.currentTurnAudioOffset, undefined, connectionMessage.textBody, resultProps);\n                        }\n                        var event_1 = new Exports_1.SpeechRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\n                        if (!!this.privSpeechRecognizer.recognized) {\n                            try {\n                                this.privSpeechRecognizer.recognized(this.privSpeechRecognizer, event_1);\n                                /* tslint:disable:no-empty */\n                            }\n                            catch (error) {\n                                // Not going to let errors in the event handler\n                                // trip things up.\n                            }\n                        }\n                    }\n                }\n                // report result to promise.\n                if (!!successCallback) {\n                    try {\n                        successCallback(result);\n                    }\n                    catch (e) {\n                        if (!!errorCallBack) {\n                            errorCallBack(e);\n                        }\n                    }\n                    // Only invoke the call back once.\n                    // and if it's successful don't invoke the\n                    // error after that.\n                    successCallback = undefined;\n                    errorCallBack = undefined;\n                }\n                break;\n            default:\n                break;\n        }\n    };\n    // Cancels recognition.\n    SpeechServiceRecognizer.prototype.cancelRecognition = function (sessionId, requestId, cancellationReason, errorCode, error, cancelRecoCallback) {\n        var properties = new Exports_1.PropertyCollection();\n        properties.setProperty(Exports_2.CancellationErrorCodePropertyName, Exports_1.CancellationErrorCode[errorCode]);\n        if (!!this.privSpeechRecognizer.canceled) {\n            var cancelEvent = new Exports_1.SpeechRecognitionCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n            try {\n                this.privSpeechRecognizer.canceled(this.privSpeechRecognizer, cancelEvent);\n                /* tslint:disable:no-empty */\n            }\n            catch (_a) { }\n        }\n        if (!!cancelRecoCallback) {\n            var result = new Exports_1.SpeechRecognitionResult(requestId, Exports_1.ResultReason.Canceled, undefined, // Text\n            undefined, // Druation\n            undefined, // Offset\n            error, undefined, // Json\n            properties);\n            try {\n                cancelRecoCallback(result);\n                /* tslint:disable:no-empty */\n            }\n            catch (_b) { }\n        }\n    };\n    return SpeechServiceRecognizer;\n}(Exports_2.ServiceRecognizerBase));\nexports.SpeechServiceRecognizer = SpeechServiceRecognizer;\n\n//# sourceMappingURL=SpeechServiceRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Error_1 = require(\"./Error\");\nvar EventSource_1 = require(\"./EventSource\");\nvar Events = /** @class */ (function () {\n    function Events() {\n    }\n    Object.defineProperty(Events, \"instance\", {\n        get: function () {\n            return Events.privInstance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Events.privInstance = new EventSource_1.EventSource();\n    Events.setEventSource = function (eventSource) {\n        if (!eventSource) {\n            throw new Error_1.ArgumentNullError(\"eventSource\");\n        }\n        Events.privInstance = eventSource;\n    };\n    return Events;\n}());\nexports.Events = Events;\n\n//# sourceMappingURL=Events.js.map\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"caption-host\"},[(!_vm.started)?_c('div',[_c('h1',[_vm._v(\"Host a session\")]),_c('div',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.key),expression:\"key\"}],attrs:{\"type\":\"password\",\"placeholder\":\"Cognitive Services Speech API Key\"},domProps:{\"value\":(_vm.key)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.key=$event.target.value}}})]),_c('div',[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.fromLanguage),expression:\"fromLanguage\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.fromLanguage=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.fromLanguages),function(lang){return _c('option',{key:lang,domProps:{\"value\":lang}},[_vm._v(\"\\n          \"+_vm._s(lang)+\"\\n        \")])}),0),_c('button',{on:{\"click\":_vm.start}},[_vm._v(\"start\")])])]):_c('div',[_c('button',{on:{\"click\":_vm.stop}},[_vm._v(\"stop\")]),_c('div',{staticClass:\"caption\",attrs:{\"id\":\"currentSentence\"}},[_vm._v(\"\\n      \"+_vm._s(_vm.currentSentence)+\"\\n    \")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import _Object$defineProperty from \"../../core-js/object/define-property\";\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n\n    _Object$defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { \r\n  AudioConfig, SpeechTranslationConfig, TranslationRecognizer, ResultReason \r\n} from 'microsoft-cognitiveservices-speech-sdk'\r\n\r\nclass Translator {\r\n  _recognizer\r\n  _callback\r\n\r\n  constructor(callback) {\r\n    this._callback = callback\r\n  }\r\n\r\n  start(options) {\r\n    const alreadyStarted = !!this._recognizer\r\n    if (alreadyStarted) {\r\n      return\r\n    }\r\n\r\n    const audioConfig = AudioConfig.fromDefaultMicrophoneInput()\r\n    const speechConfig = SpeechTranslationConfig.fromSubscription(options.key, options.region)\r\n\r\n    speechConfig.speechRecognitionLanguage = options.fromLanguage\r\n    for (const lang of options.toLanguages) {\r\n      speechConfig.addTargetLanguage(lang)\r\n    }\r\n\r\n    this._recognizer = new TranslationRecognizer(speechConfig, audioConfig)\r\n    this._recognizer.recognizing = this._recognizer.recognized = recognizerCallback.bind(this)\r\n    this._recognizer.startContinuousRecognitionAsync()\r\n\r\n    function recognizerCallback(s, e) {\r\n      const result = e.result\r\n      const reason = ResultReason[result.reason]\r\n      if (reason !== 'TranslatingSpeech' && reason !== 'TranslatedSpeech') {\r\n        return\r\n      }\r\n\r\n      const captions = {\r\n        offset: result.offset,\r\n        languages: {}\r\n      }\r\n      captions.languages[getLanguageCode(options.fromLanguage)] = result.text\r\n\r\n      for (const lang of options.toLanguages) {\r\n        const langCode = getLanguageCode(lang)\r\n        const caption = result.translations.get(langCode)\r\n        captions.languages[langCode] = caption\r\n      }\r\n\r\n      this._callback({\r\n        original: result.text,\r\n        translations: captions\r\n      })\r\n    }\r\n\r\n    function getLanguageCode(lang) {\r\n      return lang.substring(0, 2)\r\n    }\r\n  }\r\n  \r\n  stop() {\r\n    this._recognizer.stopContinuousRecognitionAsync(\r\n      stopRecognizer.bind(this),\r\n      function (err) {\r\n        stopRecognizer().bind(this)\r\n        console.error(err)\r\n      }.bind(this)\r\n    )\r\n\r\n    function stopRecognizer() {\r\n      this._recognizer.close()\r\n      this._recognizer = undefined\r\n      console.log('stopped')\r\n    }\r\n  }\r\n}\r\n\r\nexport default Translator","<template>\r\n  <div class=\"caption-host\">\r\n    <div v-if=\"!started\">\r\n      <h1>Host a session</h1>\r\n      <div><input type=\"password\" v-model=\"key\" placeholder=\"Cognitive Services Speech API Key\" /></div>\r\n      <div>\r\n        <select v-model=\"fromLanguage\">\r\n          <option v-for=\"lang in fromLanguages\" :value=\"lang\" :key=\"lang\">\r\n            {{ lang }}\r\n          </option>\r\n        </select>\r\n        <button @click=\"start\">start</button>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <button @click=\"stop\">stop</button>\r\n      <div id=\"currentSentence\" class=\"caption\">\r\n        {{ currentSentence }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport constants from '../lib/constants'\r\nimport Translator from '../lib/translator'\r\nimport languageListMixin from '../lib/language-list-mixin'\r\n\r\nconst speechApiKeyLocalStorageKey = 'speechApiKey'\r\n\r\nexport default {\r\n  mixins: [ languageListMixin ],\r\n  data() {\r\n    return {\r\n      key: window.localStorage.getItem(speechApiKeyLocalStorageKey) || '',\r\n      region: `${constants.region}`,\r\n      currentSentence: '',\r\n      started: false,\r\n      fromLanguage: 'en-US'\r\n    }\r\n  },\r\n  watch: {\r\n    key(newKey) {\r\n      window.localStorage.setItem(speechApiKeyLocalStorageKey, newKey)\r\n    }\r\n  },\r\n  created() {\r\n    this.translator = new Translator(function(captions) {\r\n      this.currentSentence = captions.original\r\n      axios.post(`${constants.apiBaseUrl}/api/captions`,\r\n        captions.translations,\r\n        { withCredentials: true })\r\n    }.bind(this))\r\n  },\r\n  methods: {\r\n    start() {\r\n      this.translator.start({\r\n        key: this.key,\r\n        region: this.region,\r\n        fromLanguage: this.fromLanguage,\r\n        toLanguages: this.toLanguages\r\n      })\r\n      this.started = true\r\n    },\r\n    stop() {\r\n      this.started = false\r\n      this.currentSentence = ''\r\n      this.translator.stop()\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    this.translator.stop()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ninput[type=password] {\r\n  width: 600px;\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CaptionHost.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CaptionHost.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CaptionHost.vue?vue&type=template&id=9004f914&scoped=true&\"\nimport script from \"./CaptionHost.vue?vue&type=script&lang=js&\"\nexport * from \"./CaptionHost.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CaptionHost.vue?vue&type=style&index=0&id=9004f914&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9004f914\",\n  null\n  \n)\n\nexport default component.exports","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Responsible for building the object to be sent to the speech service to support dynamic grammars.\n * @class DynamicGrammarBuilder\n */\nvar DynamicGrammarBuilder = /** @class */ (function () {\n    function DynamicGrammarBuilder() {\n    }\n    // Adds one more reference phrases to the dynamic grammar to send.\n    // All added phrases are generic phrases.\n    DynamicGrammarBuilder.prototype.addPhrase = function (phrase) {\n        if (!this.privPhrases) {\n            this.privPhrases = [];\n        }\n        if (phrase instanceof Array) {\n            this.privPhrases = this.privPhrases.concat(phrase);\n        }\n        else {\n            this.privPhrases.push(phrase);\n        }\n    };\n    // Clears all phrases stored in the current object.\n    DynamicGrammarBuilder.prototype.clearPhrases = function () {\n        this.privPhrases = undefined;\n    };\n    // Adds one or more reference grammars to the current grammar.\n    DynamicGrammarBuilder.prototype.addReferenceGrammar = function (grammar) {\n        if (!this.privGrammars) {\n            this.privGrammars = [];\n        }\n        if (grammar instanceof Array) {\n            this.privGrammars = this.privGrammars.concat(grammar);\n        }\n        else {\n            this.privGrammars.push(grammar);\n        }\n    };\n    // clears all grammars stored on the recognizer.\n    DynamicGrammarBuilder.prototype.clearGrammars = function () {\n        this.privGrammars = undefined;\n    };\n    // Generates an object that represents the dynamic grammar used by the Speech Service.\n    // This is done by building an object with the correct layout based on the phrases and reference grammars added to this instance\n    // of a DynamicGrammarBuilder\n    DynamicGrammarBuilder.prototype.generateGrammarObject = function () {\n        if (this.privGrammars === undefined && this.privPhrases === undefined) {\n            return undefined;\n        }\n        var retObj = {};\n        retObj.ReferenceGrammars = this.privGrammars;\n        if (undefined !== this.privPhrases && 0 !== this.privPhrases.length) {\n            var retPhrases_1 = [];\n            this.privPhrases.forEach(function (value, index, array) {\n                retPhrases_1.push({\n                    Text: value,\n                });\n            });\n            retObj.Groups = [{ Type: \"Generic\", Items: retPhrases_1 }];\n        }\n        return retObj;\n    };\n    return DynamicGrammarBuilder;\n}());\nexports.DynamicGrammarBuilder = DynamicGrammarBuilder;\n\n//# sourceMappingURL=DynamicGrammarBuilder.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common/Exports\");\nvar SpeechRecognitionEvent = /** @class */ (function (_super) {\n    __extends(SpeechRecognitionEvent, _super);\n    function SpeechRecognitionEvent(eventName, requestId, sessionId, eventType) {\n        if (eventType === void 0) { eventType = Exports_1.EventType.Info; }\n        var _this = _super.call(this, eventName, eventType) || this;\n        _this.privRequestId = requestId;\n        _this.privSessionId = sessionId;\n        return _this;\n    }\n    Object.defineProperty(SpeechRecognitionEvent.prototype, \"requestId\", {\n        get: function () {\n            return this.privRequestId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechRecognitionEvent.prototype, \"sessionId\", {\n        get: function () {\n            return this.privSessionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SpeechRecognitionEvent;\n}(Exports_1.PlatformEvent));\nexports.SpeechRecognitionEvent = SpeechRecognitionEvent;\n// tslint:disable-next-line:max-classes-per-file\nvar RecognitionTriggeredEvent = /** @class */ (function (_super) {\n    __extends(RecognitionTriggeredEvent, _super);\n    function RecognitionTriggeredEvent(requestId, sessionId, audioSourceId, audioNodeId) {\n        var _this = _super.call(this, \"RecognitionTriggeredEvent\", requestId, sessionId) || this;\n        _this.privAudioSourceId = audioSourceId;\n        _this.privAudioNodeId = audioNodeId;\n        return _this;\n    }\n    Object.defineProperty(RecognitionTriggeredEvent.prototype, \"audioSourceId\", {\n        get: function () {\n            return this.privAudioSourceId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RecognitionTriggeredEvent.prototype, \"audioNodeId\", {\n        get: function () {\n            return this.privAudioNodeId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RecognitionTriggeredEvent;\n}(SpeechRecognitionEvent));\nexports.RecognitionTriggeredEvent = RecognitionTriggeredEvent;\n// tslint:disable-next-line:max-classes-per-file\nvar ListeningStartedEvent = /** @class */ (function (_super) {\n    __extends(ListeningStartedEvent, _super);\n    function ListeningStartedEvent(requestId, sessionId, audioSourceId, audioNodeId) {\n        var _this = _super.call(this, \"ListeningStartedEvent\", requestId, sessionId) || this;\n        _this.privAudioSourceId = audioSourceId;\n        _this.privAudioNodeId = audioNodeId;\n        return _this;\n    }\n    Object.defineProperty(ListeningStartedEvent.prototype, \"audioSourceId\", {\n        get: function () {\n            return this.privAudioSourceId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ListeningStartedEvent.prototype, \"audioNodeId\", {\n        get: function () {\n            return this.privAudioNodeId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ListeningStartedEvent;\n}(SpeechRecognitionEvent));\nexports.ListeningStartedEvent = ListeningStartedEvent;\n// tslint:disable-next-line:max-classes-per-file\nvar ConnectingToServiceEvent = /** @class */ (function (_super) {\n    __extends(ConnectingToServiceEvent, _super);\n    function ConnectingToServiceEvent(requestId, authFetchEventid, sessionId) {\n        var _this = _super.call(this, \"ConnectingToServiceEvent\", requestId, sessionId) || this;\n        _this.privAuthFetchEventid = authFetchEventid;\n        return _this;\n    }\n    Object.defineProperty(ConnectingToServiceEvent.prototype, \"authFetchEventid\", {\n        get: function () {\n            return this.privAuthFetchEventid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ConnectingToServiceEvent;\n}(SpeechRecognitionEvent));\nexports.ConnectingToServiceEvent = ConnectingToServiceEvent;\n// tslint:disable-next-line:max-classes-per-file\nvar RecognitionStartedEvent = /** @class */ (function (_super) {\n    __extends(RecognitionStartedEvent, _super);\n    function RecognitionStartedEvent(requestId, audioSourceId, audioNodeId, authFetchEventId, sessionId) {\n        var _this = _super.call(this, \"RecognitionStartedEvent\", requestId, sessionId) || this;\n        _this.privAudioSourceId = audioSourceId;\n        _this.privAudioNodeId = audioNodeId;\n        _this.privAuthFetchEventId = authFetchEventId;\n        return _this;\n    }\n    Object.defineProperty(RecognitionStartedEvent.prototype, \"audioSourceId\", {\n        get: function () {\n            return this.privAudioSourceId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RecognitionStartedEvent.prototype, \"audioNodeId\", {\n        get: function () {\n            return this.privAudioNodeId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RecognitionStartedEvent.prototype, \"authFetchEventId\", {\n        get: function () {\n            return this.privAuthFetchEventId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RecognitionStartedEvent;\n}(SpeechRecognitionEvent));\nexports.RecognitionStartedEvent = RecognitionStartedEvent;\nvar RecognitionCompletionStatus;\n(function (RecognitionCompletionStatus) {\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"Success\"] = 0] = \"Success\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AudioSourceError\"] = 1] = \"AudioSourceError\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AudioSourceTimeout\"] = 2] = \"AudioSourceTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AuthTokenFetchError\"] = 3] = \"AuthTokenFetchError\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AuthTokenFetchTimeout\"] = 4] = \"AuthTokenFetchTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"UnAuthorized\"] = 5] = \"UnAuthorized\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"ConnectTimeout\"] = 6] = \"ConnectTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"ConnectError\"] = 7] = \"ConnectError\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"ClientRecognitionActivityTimeout\"] = 8] = \"ClientRecognitionActivityTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"UnknownError\"] = 9] = \"UnknownError\";\n})(RecognitionCompletionStatus = exports.RecognitionCompletionStatus || (exports.RecognitionCompletionStatus = {}));\n// tslint:disable-next-line:max-classes-per-file\nvar RecognitionEndedEvent = /** @class */ (function (_super) {\n    __extends(RecognitionEndedEvent, _super);\n    function RecognitionEndedEvent(requestId, audioSourceId, audioNodeId, authFetchEventId, sessionId, serviceTag, status, error) {\n        var _this = _super.call(this, \"RecognitionEndedEvent\", requestId, sessionId, status === RecognitionCompletionStatus.Success ? Exports_1.EventType.Info : Exports_1.EventType.Error) || this;\n        _this.privAudioSourceId = audioSourceId;\n        _this.privAudioNodeId = audioNodeId;\n        _this.privAuthFetchEventId = authFetchEventId;\n        _this.privStatus = status;\n        _this.privError = error;\n        _this.privServiceTag = serviceTag;\n        return _this;\n    }\n    Object.defineProperty(RecognitionEndedEvent.prototype, \"audioSourceId\", {\n        get: function () {\n            return this.privAudioSourceId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RecognitionEndedEvent.prototype, \"audioNodeId\", {\n        get: function () {\n            return this.privAudioNodeId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RecognitionEndedEvent.prototype, \"authFetchEventId\", {\n        get: function () {\n            return this.privAuthFetchEventId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RecognitionEndedEvent.prototype, \"serviceTag\", {\n        get: function () {\n            return this.privServiceTag;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RecognitionEndedEvent.prototype, \"status\", {\n        get: function () {\n            return this.privStatus;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RecognitionEndedEvent.prototype, \"error\", {\n        get: function () {\n            return this.privError;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RecognitionEndedEvent;\n}(SpeechRecognitionEvent));\nexports.RecognitionEndedEvent = RecognitionEndedEvent;\n\n//# sourceMappingURL=RecognitionEvents.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AudioStreamFormat_1 = require(\"../../src/sdk/Audio/AudioStreamFormat\");\nvar Exports_1 = require(\"../common/Exports\");\nvar FileAudioSource = /** @class */ (function () {\n    function FileAudioSource(file, audioSourceId) {\n        var _this = this;\n        this.privStreams = {};\n        this.turnOn = function () {\n            if (typeof FileReader === \"undefined\") {\n                var errorMsg = \"Browser does not support FileReader.\";\n                _this.onEvent(new Exports_1.AudioSourceErrorEvent(errorMsg, \"\")); // initialization error - no streamid at this point\n                return Exports_1.PromiseHelper.fromError(errorMsg);\n            }\n            else if (_this.privFile.name.lastIndexOf(\".wav\") !== _this.privFile.name.length - 4) {\n                var errorMsg = _this.privFile.name + \" is not supported. Only WAVE files are allowed at the moment.\";\n                _this.onEvent(new Exports_1.AudioSourceErrorEvent(errorMsg, \"\"));\n                return Exports_1.PromiseHelper.fromError(errorMsg);\n            }\n            else if (_this.privFile.size > FileAudioSource.MAX_SIZE) {\n                var errorMsg = _this.privFile.name + \" exceeds the maximum allowed file size (\" + FileAudioSource.MAX_SIZE + \").\";\n                _this.onEvent(new Exports_1.AudioSourceErrorEvent(errorMsg, \"\"));\n                return Exports_1.PromiseHelper.fromError(errorMsg);\n            }\n            _this.onEvent(new Exports_1.AudioSourceInitializingEvent(_this.privId)); // no stream id\n            _this.onEvent(new Exports_1.AudioSourceReadyEvent(_this.privId));\n            return Exports_1.PromiseHelper.fromResult(true);\n        };\n        this.id = function () {\n            return _this.privId;\n        };\n        this.attach = function (audioNodeId) {\n            _this.onEvent(new Exports_1.AudioStreamNodeAttachingEvent(_this.privId, audioNodeId));\n            return _this.upload(audioNodeId).onSuccessContinueWith(function (streamReader) {\n                _this.onEvent(new Exports_1.AudioStreamNodeAttachedEvent(_this.privId, audioNodeId));\n                return {\n                    detach: function () {\n                        streamReader.close();\n                        delete _this.privStreams[audioNodeId];\n                        _this.onEvent(new Exports_1.AudioStreamNodeDetachedEvent(_this.privId, audioNodeId));\n                        _this.turnOff();\n                    },\n                    id: function () {\n                        return audioNodeId;\n                    },\n                    read: function () {\n                        return streamReader.read();\n                    },\n                };\n            });\n        };\n        this.detach = function (audioNodeId) {\n            if (audioNodeId && _this.privStreams[audioNodeId]) {\n                _this.privStreams[audioNodeId].close();\n                delete _this.privStreams[audioNodeId];\n                _this.onEvent(new Exports_1.AudioStreamNodeDetachedEvent(_this.privId, audioNodeId));\n            }\n        };\n        this.turnOff = function () {\n            for (var streamId in _this.privStreams) {\n                if (streamId) {\n                    var stream = _this.privStreams[streamId];\n                    if (stream && !stream.isClosed) {\n                        stream.close();\n                    }\n                }\n            }\n            _this.onEvent(new Exports_1.AudioSourceOffEvent(_this.privId)); // no stream now\n            return Exports_1.PromiseHelper.fromResult(true);\n        };\n        this.upload = function (audioNodeId) {\n            return _this.turnOn()\n                .onSuccessContinueWith(function (_) {\n                var stream = new Exports_1.Stream(audioNodeId);\n                _this.privStreams[audioNodeId] = stream;\n                var reader = new FileReader();\n                var startOffset = 0;\n                var endOffset = FileAudioSource.CHUNK_SIZE;\n                var processNextChunk = function (event) {\n                    if (stream.isClosed) {\n                        return; // output stream was closed (somebody called TurnOff). We're done here.\n                    }\n                    stream.write(reader.result);\n                    if (endOffset < _this.privFile.size) {\n                        startOffset = endOffset;\n                        endOffset = Math.min(endOffset + FileAudioSource.CHUNK_SIZE, _this.privFile.size);\n                        var chunk_1 = _this.privFile.slice(startOffset, endOffset);\n                        reader.readAsArrayBuffer(chunk_1);\n                    }\n                    else {\n                        // we've written the entire file to the output stream, can close it now.\n                        stream.close();\n                    }\n                };\n                reader.onload = processNextChunk;\n                reader.onerror = function (event) {\n                    var errorMsg = \"Error occurred while processing '\" + _this.privFile.name + \"'. \" + event;\n                    _this.onEvent(new Exports_1.AudioStreamNodeErrorEvent(_this.privId, audioNodeId, errorMsg));\n                    throw new Error(errorMsg);\n                };\n                var chunk = _this.privFile.slice(startOffset, endOffset);\n                reader.readAsArrayBuffer(chunk);\n                return stream.getReader();\n            });\n        };\n        this.onEvent = function (event) {\n            _this.privEvents.onEvent(event);\n            Exports_1.Events.instance.onEvent(event);\n        };\n        this.privId = audioSourceId ? audioSourceId : Exports_1.createNoDashGuid();\n        this.privEvents = new Exports_1.EventSource();\n        this.privFile = file;\n    }\n    Object.defineProperty(FileAudioSource.prototype, \"format\", {\n        get: function () {\n            return FileAudioSource.FILEFORMAT;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FileAudioSource.prototype, \"events\", {\n        get: function () {\n            return this.privEvents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Recommended sample rate (bytes/second).\n    FileAudioSource.SAMPLE_RATE = 16000 * 2; // 16 kHz * 16 bits\n    // We should stream audio at no faster than 2x real-time (i.e., send five chunks\n    // per second, with the chunk size == sample rate in bytes per second * 2 / 5).\n    FileAudioSource.CHUNK_SIZE = FileAudioSource.SAMPLE_RATE * 2 / 5;\n    FileAudioSource.UPLOAD_INTERVAL = 200; // milliseconds\n    // 10 seconds of audio in bytes =\n    // sample rate (bytes/second) * 600 (seconds) + 44 (size of the wave header).\n    FileAudioSource.MAX_SIZE = FileAudioSource.SAMPLE_RATE * 600 + 44;\n    FileAudioSource.FILEFORMAT = AudioStreamFormat_1.AudioStreamFormat.getWaveFormatPCM(16000, 16, 1);\n    return FileAudioSource;\n}());\nexports.FileAudioSource = FileAudioSource;\n\n//# sourceMappingURL=FileAudioSource.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AudioConfig_1 = require(\"./Audio/AudioConfig\");\nexports.AudioConfig = AudioConfig_1.AudioConfig;\nvar AudioStreamFormat_1 = require(\"./Audio/AudioStreamFormat\");\nexports.AudioStreamFormat = AudioStreamFormat_1.AudioStreamFormat;\nvar AudioInputStream_1 = require(\"./Audio/AudioInputStream\");\nexports.AudioInputStream = AudioInputStream_1.AudioInputStream;\nexports.PullAudioInputStream = AudioInputStream_1.PullAudioInputStream;\nexports.PushAudioInputStream = AudioInputStream_1.PushAudioInputStream;\nvar CancellationReason_1 = require(\"./CancellationReason\");\nexports.CancellationReason = CancellationReason_1.CancellationReason;\nvar PullAudioInputStreamCallback_1 = require(\"./Audio/PullAudioInputStreamCallback\");\nexports.PullAudioInputStreamCallback = PullAudioInputStreamCallback_1.PullAudioInputStreamCallback;\nvar KeywordRecognitionModel_1 = require(\"./KeywordRecognitionModel\");\nexports.KeywordRecognitionModel = KeywordRecognitionModel_1.KeywordRecognitionModel;\nvar SessionEventArgs_1 = require(\"./SessionEventArgs\");\nexports.SessionEventArgs = SessionEventArgs_1.SessionEventArgs;\nvar RecognitionEventArgs_1 = require(\"./RecognitionEventArgs\");\nexports.RecognitionEventArgs = RecognitionEventArgs_1.RecognitionEventArgs;\nvar OutputFormat_1 = require(\"./OutputFormat\");\nexports.OutputFormat = OutputFormat_1.OutputFormat;\nvar IntentRecognitionEventArgs_1 = require(\"./IntentRecognitionEventArgs\");\nexports.IntentRecognitionEventArgs = IntentRecognitionEventArgs_1.IntentRecognitionEventArgs;\nvar RecognitionResult_1 = require(\"./RecognitionResult\");\nexports.RecognitionResult = RecognitionResult_1.RecognitionResult;\nvar SpeechRecognitionResult_1 = require(\"./SpeechRecognitionResult\");\nexports.SpeechRecognitionResult = SpeechRecognitionResult_1.SpeechRecognitionResult;\nvar IntentRecognitionResult_1 = require(\"./IntentRecognitionResult\");\nexports.IntentRecognitionResult = IntentRecognitionResult_1.IntentRecognitionResult;\nvar LanguageUnderstandingModel_1 = require(\"./LanguageUnderstandingModel\");\nexports.LanguageUnderstandingModel = LanguageUnderstandingModel_1.LanguageUnderstandingModel;\nvar SpeechRecognitionEventArgs_1 = require(\"./SpeechRecognitionEventArgs\");\nexports.SpeechRecognitionEventArgs = SpeechRecognitionEventArgs_1.SpeechRecognitionEventArgs;\nvar SpeechRecognitionCanceledEventArgs_1 = require(\"./SpeechRecognitionCanceledEventArgs\");\nexports.SpeechRecognitionCanceledEventArgs = SpeechRecognitionCanceledEventArgs_1.SpeechRecognitionCanceledEventArgs;\nvar TranslationRecognitionEventArgs_1 = require(\"./TranslationRecognitionEventArgs\");\nexports.TranslationRecognitionEventArgs = TranslationRecognitionEventArgs_1.TranslationRecognitionEventArgs;\nvar TranslationSynthesisEventArgs_1 = require(\"./TranslationSynthesisEventArgs\");\nexports.TranslationSynthesisEventArgs = TranslationSynthesisEventArgs_1.TranslationSynthesisEventArgs;\nvar TranslationRecognitionResult_1 = require(\"./TranslationRecognitionResult\");\nexports.TranslationRecognitionResult = TranslationRecognitionResult_1.TranslationRecognitionResult;\nvar TranslationSynthesisResult_1 = require(\"./TranslationSynthesisResult\");\nexports.TranslationSynthesisResult = TranslationSynthesisResult_1.TranslationSynthesisResult;\nvar ResultReason_1 = require(\"./ResultReason\");\nexports.ResultReason = ResultReason_1.ResultReason;\nvar SpeechConfig_1 = require(\"./SpeechConfig\");\nexports.SpeechConfig = SpeechConfig_1.SpeechConfig;\nvar SpeechTranslationConfig_1 = require(\"./SpeechTranslationConfig\");\nexports.SpeechTranslationConfig = SpeechTranslationConfig_1.SpeechTranslationConfig;\nvar PropertyCollection_1 = require(\"./PropertyCollection\");\nexports.PropertyCollection = PropertyCollection_1.PropertyCollection;\nvar PropertyId_1 = require(\"./PropertyId\");\nexports.PropertyId = PropertyId_1.PropertyId;\nvar Recognizer_1 = require(\"./Recognizer\");\nexports.Recognizer = Recognizer_1.Recognizer;\nvar SpeechRecognizer_1 = require(\"./SpeechRecognizer\");\nexports.SpeechRecognizer = SpeechRecognizer_1.SpeechRecognizer;\nvar IntentRecognizer_1 = require(\"./IntentRecognizer\");\nexports.IntentRecognizer = IntentRecognizer_1.IntentRecognizer;\nvar TranslationRecognizer_1 = require(\"./TranslationRecognizer\");\nexports.TranslationRecognizer = TranslationRecognizer_1.TranslationRecognizer;\nvar Translations_1 = require(\"./Translations\");\nexports.Translations = Translations_1.Translations;\nvar NoMatchReason_1 = require(\"./NoMatchReason\");\nexports.NoMatchReason = NoMatchReason_1.NoMatchReason;\nvar NoMatchDetails_1 = require(\"./NoMatchDetails\");\nexports.NoMatchDetails = NoMatchDetails_1.NoMatchDetails;\nvar TranslationRecognitionCanceledEventArgs_1 = require(\"./TranslationRecognitionCanceledEventArgs\");\nexports.TranslationRecognitionCanceledEventArgs = TranslationRecognitionCanceledEventArgs_1.TranslationRecognitionCanceledEventArgs;\nvar IntentRecognitionCanceledEventArgs_1 = require(\"./IntentRecognitionCanceledEventArgs\");\nexports.IntentRecognitionCanceledEventArgs = IntentRecognitionCanceledEventArgs_1.IntentRecognitionCanceledEventArgs;\nvar CancellationDetails_1 = require(\"./CancellationDetails\");\nexports.CancellationDetails = CancellationDetails_1.CancellationDetails;\nvar CancellationErrorCodes_1 = require(\"./CancellationErrorCodes\");\nexports.CancellationErrorCode = CancellationErrorCodes_1.CancellationErrorCode;\nvar ConnectionEventArgs_1 = require(\"./ConnectionEventArgs\");\nexports.ConnectionEventArgs = ConnectionEventArgs_1.ConnectionEventArgs;\nvar Connection_1 = require(\"./Connection\");\nexports.Connection = Connection_1.Connection;\nvar PhraseListGrammar_1 = require(\"./PhraseListGrammar\");\nexports.PhraseListGrammar = PhraseListGrammar_1.PhraseListGrammar;\n\n//# sourceMappingURL=Exports.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common.browser/Exports\");\nvar Exports_2 = require(\"../common/Exports\");\nvar Exports_3 = require(\"../sdk/Exports\");\nvar Exports_4 = require(\"./Exports\");\nvar SpeechConnectionMessage_Internal_1 = require(\"./SpeechConnectionMessage.Internal\");\nvar ServiceRecognizerBase = /** @class */ (function () {\n    function ServiceRecognizerBase(authentication, connectionFactory, audioSource, recognizerConfig, recognizer) {\n        var _this = this;\n        this.sendTelemetryData = function () {\n            var telemetryData = _this.privRequestSession.getTelemetry();\n            if (ServiceRecognizerBase.telemetryDataEnabled !== true ||\n                _this.privIsDisposed) {\n                return Exports_2.PromiseHelper.fromResult(true);\n            }\n            if (!!ServiceRecognizerBase.telemetryData) {\n                try {\n                    ServiceRecognizerBase.telemetryData(telemetryData);\n                    /* tslint:disable:no-empty */\n                }\n                catch (_a) { }\n            }\n            return _this.fetchConnection().onSuccessContinueWith(function (connection) {\n                return connection.send(new SpeechConnectionMessage_Internal_1.SpeechConnectionMessage(Exports_2.MessageType.Text, \"telemetry\", _this.privRequestSession.requestId, \"application/json\", telemetryData));\n            });\n        };\n        this.fetchConnection = function () {\n            return _this.configureConnection();\n        };\n        this.receiveMessage = function (successCallback, errorCallBack) {\n            return _this.fetchConnection().on(function (connection) {\n                return connection.read()\n                    .onSuccessContinueWithPromise(function (message) {\n                    if (_this.privIsDisposed || !_this.privRequestSession.isRecognizing) {\n                        // We're done.\n                        return Exports_2.PromiseHelper.fromResult(undefined);\n                    }\n                    // indicates we are draining the queue and it came with no message;\n                    if (!message) {\n                        if (!_this.privRequestSession.isRecognizing) {\n                            return Exports_2.PromiseHelper.fromResult(true);\n                        }\n                        else {\n                            return _this.receiveMessage(successCallback, errorCallBack);\n                        }\n                    }\n                    var connectionMessage = SpeechConnectionMessage_Internal_1.SpeechConnectionMessage.fromConnectionMessage(message);\n                    if (connectionMessage.requestId.toLowerCase() === _this.privRequestSession.requestId.toLowerCase()) {\n                        switch (connectionMessage.path.toLowerCase()) {\n                            case \"turn.start\":\n                                _this.privMustReportEndOfStream = true;\n                                break;\n                            case \"speech.startdetected\":\n                                var speechStartDetected = Exports_4.SpeechDetected.fromJSON(connectionMessage.textBody);\n                                var speechStartEventArgs = new Exports_3.RecognitionEventArgs(speechStartDetected.Offset, _this.privRequestSession.sessionId);\n                                if (!!_this.privRecognizer.speechStartDetected) {\n                                    _this.privRecognizer.speechStartDetected(_this.privRecognizer, speechStartEventArgs);\n                                }\n                                break;\n                            case \"speech.enddetected\":\n                                var json = void 0;\n                                if (connectionMessage.textBody.length > 0) {\n                                    json = connectionMessage.textBody;\n                                }\n                                else {\n                                    // If the request was empty, the JSON returned is empty.\n                                    json = \"{ Offset: 0 }\";\n                                }\n                                var speechStopDetected = Exports_4.SpeechDetected.fromJSON(json);\n                                _this.privRequestSession.onServiceRecognized(speechStopDetected.Offset + _this.privRequestSession.currentTurnAudioOffset);\n                                var speechStopEventArgs = new Exports_3.RecognitionEventArgs(speechStopDetected.Offset + _this.privRequestSession.currentTurnAudioOffset, _this.privRequestSession.sessionId);\n                                if (!!_this.privRecognizer.speechEndDetected) {\n                                    _this.privRecognizer.speechEndDetected(_this.privRecognizer, speechStopEventArgs);\n                                }\n                                break;\n                            case \"turn.end\":\n                                if (_this.privRequestSession.isSpeechEnded && _this.privMustReportEndOfStream) {\n                                    _this.privMustReportEndOfStream = false;\n                                    _this.cancelRecognitionLocal(Exports_3.CancellationReason.EndOfStream, Exports_3.CancellationErrorCode.NoError, undefined, successCallback);\n                                }\n                                var sessionStopEventArgs = new Exports_3.SessionEventArgs(_this.privRequestSession.sessionId);\n                                _this.privRequestSession.onServiceTurnEndResponse(_this.privRecognizerConfig.isContinuousRecognition);\n                                if (!_this.privRecognizerConfig.isContinuousRecognition || _this.privRequestSession.isSpeechEnded) {\n                                    if (!!_this.privRecognizer.sessionStopped) {\n                                        _this.privRecognizer.sessionStopped(_this.privRecognizer, sessionStopEventArgs);\n                                    }\n                                    return Exports_2.PromiseHelper.fromResult(true);\n                                }\n                                else {\n                                    _this.fetchConnection().onSuccessContinueWith(function (connection) {\n                                        _this.sendSpeechContext(connection);\n                                    });\n                                }\n                            default:\n                                _this.processTypeSpecificMessages(connectionMessage, successCallback, errorCallBack);\n                        }\n                    }\n                    return _this.receiveMessage(successCallback, errorCallBack);\n                });\n            }, function (error) {\n            });\n        };\n        this.sendSpeechServiceConfig = function (connection, requestSession, SpeechServiceConfigJson) {\n            // filter out anything that is not required for the service to work.\n            if (ServiceRecognizerBase.telemetryDataEnabled !== true) {\n                var withTelemetry = JSON.parse(SpeechServiceConfigJson);\n                var replacement = {\n                    context: {\n                        system: withTelemetry.context.system,\n                    },\n                };\n                SpeechServiceConfigJson = JSON.stringify(replacement);\n            }\n            if (SpeechServiceConfigJson) { // && this.privConnectionId !== this.privSpeechServiceConfigConnectionId) {\n                _this.privSpeechServiceConfigConnectionId = _this.privConnectionId;\n                return connection.send(new SpeechConnectionMessage_Internal_1.SpeechConnectionMessage(Exports_2.MessageType.Text, \"speech.config\", requestSession.requestId, \"application/json\", SpeechServiceConfigJson));\n            }\n            return Exports_2.PromiseHelper.fromResult(true);\n        };\n        this.sendSpeechContext = function (connection) {\n            var speechContextJson = _this.speechContext.toJSON();\n            if (speechContextJson) {\n                return connection.send(new SpeechConnectionMessage_Internal_1.SpeechConnectionMessage(Exports_2.MessageType.Text, \"speech.context\", _this.privRequestSession.requestId, \"application/json\", speechContextJson));\n            }\n            return Exports_2.PromiseHelper.fromResult(true);\n        };\n        this.sendAudio = function (audioStreamNode) {\n            // NOTE: Home-baked promises crash ios safari during the invocation\n            // of the error callback chain (looks like the recursion is way too deep, and\n            // it blows up the stack). The following construct is a stop-gap that does not\n            // bubble the error up the callback chain and hence circumvents this problem.\n            // TODO: rewrite with ES6 promises.\n            var deferred = new Exports_2.Deferred();\n            // The time we last sent data to the service.\n            var lastSendTime = Date.now();\n            var audioFormat = _this.privAudioSource.format;\n            var readAndUploadCycle = function () {\n                // If speech is done, stop sending audio.\n                if (!_this.privIsDisposed && !_this.privRequestSession.isSpeechEnded && _this.privRequestSession.isRecognizing) {\n                    _this.fetchConnection().on(function (connection) {\n                        audioStreamNode.read().on(function (audioStreamChunk) {\n                            // we have a new audio chunk to upload.\n                            if (_this.privRequestSession.isSpeechEnded) {\n                                // If service already recognized audio end then dont send any more audio\n                                deferred.resolve(true);\n                                return;\n                            }\n                            var payload = (audioStreamChunk.isEnd) ? null : audioStreamChunk.buffer;\n                            var uploaded = connection.send(new SpeechConnectionMessage_Internal_1.SpeechConnectionMessage(Exports_2.MessageType.Binary, \"audio\", _this.privRequestSession.requestId, null, payload));\n                            if (!audioStreamChunk.isEnd) {\n                                // Caculate any delay to the audio stream needed. /2 to allow 2x real time transmit rate max.\n                                var minSendTime = ((payload.byteLength / audioFormat.avgBytesPerSec) / 2) * 1000;\n                                var delay_1 = Math.max(0, (lastSendTime - Date.now() + minSendTime));\n                                uploaded.continueWith(function (_) {\n                                    // Regardless of success or failure, schedule the next upload.\n                                    // If the underlying connection was broken, the next cycle will\n                                    // get a new connection and re-transmit missing audio automatically.\n                                    setTimeout(function () {\n                                        lastSendTime = Date.now();\n                                        readAndUploadCycle();\n                                    }, delay_1);\n                                });\n                            }\n                            else {\n                                // the audio stream has been closed, no need to schedule next\n                                // read-upload cycle.\n                                _this.privRequestSession.onSpeechEnded();\n                                deferred.resolve(true);\n                            }\n                        }, function (error) {\n                            if (_this.privRequestSession.isSpeechEnded) {\n                                // For whatever reason, Reject is used to remove queue subscribers inside\n                                // the Queue.DrainAndDispose invoked from DetachAudioNode down below, which\n                                // means that sometimes things can be rejected in normal circumstances, without\n                                // any errors.\n                                deferred.resolve(true); // TODO: remove the argument, it's is completely meaningless.\n                            }\n                            else {\n                                // Only reject, if there was a proper error.\n                                deferred.reject(error);\n                            }\n                        });\n                    }, function (error) {\n                        deferred.reject(error);\n                    });\n                }\n            };\n            readAndUploadCycle();\n            return deferred.promise();\n        };\n        if (!authentication) {\n            throw new Exports_2.ArgumentNullError(\"authentication\");\n        }\n        if (!connectionFactory) {\n            throw new Exports_2.ArgumentNullError(\"connectionFactory\");\n        }\n        if (!audioSource) {\n            throw new Exports_2.ArgumentNullError(\"audioSource\");\n        }\n        if (!recognizerConfig) {\n            throw new Exports_2.ArgumentNullError(\"recognizerConfig\");\n        }\n        this.privMustReportEndOfStream = false;\n        this.privAuthentication = authentication;\n        this.privConnectionFactory = connectionFactory;\n        this.privAudioSource = audioSource;\n        this.privRecognizerConfig = recognizerConfig;\n        this.privIsDisposed = false;\n        this.privRecognizer = recognizer;\n        this.privRequestSession = new Exports_4.RequestSession(this.privAudioSource.id());\n        this.privConnectionEvents = new Exports_2.EventSource();\n        this.privDynamicGrammar = new Exports_4.DynamicGrammarBuilder();\n        this.privSpeechContext = new Exports_4.SpeechContext(this.privDynamicGrammar);\n    }\n    Object.defineProperty(ServiceRecognizerBase.prototype, \"audioSource\", {\n        get: function () {\n            return this.privAudioSource;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ServiceRecognizerBase.prototype, \"speechContext\", {\n        get: function () {\n            return this.privSpeechContext;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ServiceRecognizerBase.prototype, \"dynamicGrammar\", {\n        get: function () {\n            return this.privDynamicGrammar;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ServiceRecognizerBase.prototype.isDisposed = function () {\n        return this.privIsDisposed;\n    };\n    ServiceRecognizerBase.prototype.dispose = function (reason) {\n        this.privIsDisposed = true;\n        if (this.privConnectionConfigurationPromise) {\n            this.privConnectionConfigurationPromise.onSuccessContinueWith(function (connection) {\n                connection.dispose(reason);\n            });\n        }\n    };\n    Object.defineProperty(ServiceRecognizerBase.prototype, \"connectionEvents\", {\n        get: function () {\n            return this.privConnectionEvents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ServiceRecognizerBase.prototype, \"recognitionMode\", {\n        get: function () {\n            return this.privRecognizerConfig.recognitionMode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ServiceRecognizerBase.prototype.recognize = function (recoMode, successCallback, errorCallBack) {\n        var _this = this;\n        // Clear the existing configuration promise to force a re-transmission of config and context.\n        this.privConnectionConfigurationPromise = null;\n        this.privRecognizerConfig.recognitionMode = recoMode;\n        this.privRequestSession.startNewRecognition();\n        this.privRequestSession.listenForServiceTelemetry(this.privAudioSource.events);\n        return this.audioSource\n            .attach(this.privRequestSession.audioNodeId)\n            .continueWithPromise(function (result) {\n            var audioNode;\n            if (result.isError) {\n                _this.cancelRecognitionLocal(Exports_3.CancellationReason.Error, Exports_3.CancellationErrorCode.ConnectionFailure, result.error, successCallback);\n                return Exports_2.PromiseHelper.fromError(result.error);\n            }\n            else {\n                audioNode = new Exports_1.ReplayableAudioNode(result.result, _this.audioSource.format);\n                _this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\n            }\n            return _this.configureConnection()\n                .on(function (_) {\n                var sessionStartEventArgs = new Exports_3.SessionEventArgs(_this.privRequestSession.sessionId);\n                if (!!_this.privRecognizer.sessionStarted) {\n                    _this.privRecognizer.sessionStarted(_this.privRecognizer, sessionStartEventArgs);\n                }\n                var messageRetrievalPromise = _this.receiveMessage(successCallback, errorCallBack);\n                var audioSendPromise = _this.sendAudio(audioNode);\n                /* tslint:disable:no-empty */\n                audioSendPromise.on(function (_) { }, function (error) {\n                    _this.cancelRecognitionLocal(Exports_3.CancellationReason.Error, Exports_3.CancellationErrorCode.RuntimeError, error, successCallback);\n                });\n                var completionPromise = Exports_2.PromiseHelper.whenAll([messageRetrievalPromise, audioSendPromise]);\n                return completionPromise.on(function (r) {\n                    _this.privRequestSession.dispose();\n                    _this.sendTelemetryData();\n                }, function (error) {\n                    _this.privRequestSession.dispose(error);\n                    _this.sendTelemetryData();\n                    _this.cancelRecognitionLocal(Exports_3.CancellationReason.Error, Exports_3.CancellationErrorCode.RuntimeError, error, successCallback);\n                });\n            }, function (error) {\n                _this.cancelRecognitionLocal(Exports_3.CancellationReason.Error, Exports_3.CancellationErrorCode.ConnectionFailure, error, successCallback);\n            }).on(function () {\n                return _this.privRequestSession.completionPromise;\n            }, function (error) {\n                _this.cancelRecognitionLocal(Exports_3.CancellationReason.Error, Exports_3.CancellationErrorCode.RuntimeError, error, successCallback);\n            }).onSuccessContinueWithPromise(function (_) {\n                return Exports_2.PromiseHelper.fromResult(true);\n            });\n        });\n    };\n    ServiceRecognizerBase.prototype.stopRecognizing = function () {\n        if (this.privRequestSession.isRecognizing) {\n            this.privRequestSession.onStopRecognizing();\n            this.audioSource.turnOff();\n            this.sendFinalAudio();\n        }\n    };\n    ServiceRecognizerBase.prototype.connect = function () {\n        this.connectImpl().result();\n    };\n    ServiceRecognizerBase.prototype.disconnect = function () {\n        this.cancelRecognitionLocal(Exports_3.CancellationReason.Error, Exports_3.CancellationErrorCode.NoError, \"Disconnecting\", undefined);\n        if (this.privConnectionPromise.result().isCompleted) {\n            if (!this.privConnectionPromise.result().isError) {\n                this.privConnectionPromise.result().result.dispose();\n                this.privConnectionPromise = null;\n            }\n        }\n        else {\n            this.privConnectionPromise.onSuccessContinueWith(function (connection) {\n                connection.dispose();\n            });\n        }\n    };\n    // Cancels recognition.\n    ServiceRecognizerBase.prototype.cancelRecognitionLocal = function (cancellationReason, errorCode, error, cancelRecoCallback) {\n        if (!!this.privRequestSession.isRecognizing) {\n            this.privRequestSession.onStopRecognizing();\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, cancellationReason, errorCode, error, cancelRecoCallback);\n        }\n    };\n    // Establishes a websocket connection to the end point.\n    ServiceRecognizerBase.prototype.connectImpl = function (isUnAuthorized) {\n        var _this = this;\n        if (isUnAuthorized === void 0) { isUnAuthorized = false; }\n        if (this.privConnectionPromise) {\n            if (this.privConnectionPromise.result().isCompleted &&\n                (this.privConnectionPromise.result().isError\n                    || this.privConnectionPromise.result().result.state() === Exports_2.ConnectionState.Disconnected)) {\n                this.privConnectionId = null;\n                this.privConnectionPromise = null;\n                return this.connectImpl();\n            }\n            else {\n                return this.privConnectionPromise;\n            }\n        }\n        this.privAuthFetchEventId = Exports_2.createNoDashGuid();\n        this.privConnectionId = Exports_2.createNoDashGuid();\n        this.privRequestSession.onPreConnectionStart(this.privAuthFetchEventId, this.privConnectionId);\n        var authPromise = isUnAuthorized ? this.privAuthentication.fetchOnExpiry(this.privAuthFetchEventId) : this.privAuthentication.fetch(this.privAuthFetchEventId);\n        this.privConnectionPromise = authPromise\n            .continueWithPromise(function (result) {\n            if (result.isError) {\n                _this.privRequestSession.onAuthCompleted(true, result.error);\n                throw new Error(result.error);\n            }\n            else {\n                _this.privRequestSession.onAuthCompleted(false);\n            }\n            var connection = _this.privConnectionFactory.create(_this.privRecognizerConfig, result.result, _this.privConnectionId);\n            _this.privRequestSession.listenForServiceTelemetry(connection.events);\n            // Attach to the underlying event. No need to hold onto the detach pointers as in the event the connection goes away,\n            // it'll stop sending events.\n            connection.events.attach(function (event) {\n                _this.connectionEvents.onEvent(event);\n            });\n            return connection.open().onSuccessContinueWithPromise(function (response) {\n                if (response.statusCode === 200) {\n                    _this.privRequestSession.onPreConnectionStart(_this.privAuthFetchEventId, _this.privConnectionId);\n                    _this.privRequestSession.onConnectionEstablishCompleted(response.statusCode);\n                    return Exports_2.PromiseHelper.fromResult(connection);\n                }\n                else if (response.statusCode === 403 && !isUnAuthorized) {\n                    return _this.connectImpl(true);\n                }\n                else {\n                    _this.privRequestSession.onConnectionEstablishCompleted(response.statusCode, response.reason);\n                    return Exports_2.PromiseHelper.fromError(\"Unable to contact server. StatusCode: \" + response.statusCode + \", \" + _this.privRecognizerConfig.parameters.getProperty(Exports_3.PropertyId.SpeechServiceConnection_Endpoint) + \" Reason: \" + response.reason);\n                }\n            });\n        });\n        return this.privConnectionPromise;\n    };\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\n    ServiceRecognizerBase.prototype.configureConnection = function () {\n        var _this = this;\n        if (this.privConnectionConfigurationPromise) {\n            if (this.privConnectionConfigurationPromise.result().isCompleted &&\n                (this.privConnectionConfigurationPromise.result().isError\n                    || this.privConnectionConfigurationPromise.result().result.state() === Exports_2.ConnectionState.Disconnected)) {\n                this.privConnectionConfigurationPromise = null;\n                return this.configureConnection();\n            }\n            else {\n                return this.privConnectionConfigurationPromise;\n            }\n        }\n        this.privConnectionConfigurationPromise = this.connectImpl().onSuccessContinueWithPromise(function (connection) {\n            return _this.sendSpeechServiceConfig(connection, _this.privRequestSession, _this.privRecognizerConfig.SpeechServiceConfig.serialize())\n                .onSuccessContinueWithPromise(function (_) {\n                return _this.sendSpeechContext(connection).onSuccessContinueWith(function (_) {\n                    return connection;\n                });\n            });\n        });\n        return this.privConnectionConfigurationPromise;\n    };\n    ServiceRecognizerBase.prototype.sendFinalAudio = function () {\n        var _this = this;\n        var deferred = new Exports_2.Deferred();\n        this.fetchConnection().on(function (connection) {\n            connection.send(new SpeechConnectionMessage_Internal_1.SpeechConnectionMessage(Exports_2.MessageType.Binary, \"audio\", _this.privRequestSession.requestId, null, null)).on(function (_) {\n                deferred.resolve(true);\n            }, function (error) {\n                deferred.reject(error);\n            });\n        }, function (error) {\n            deferred.reject(error);\n        });\n        return deferred.promise();\n    };\n    ServiceRecognizerBase.telemetryDataEnabled = true;\n    return ServiceRecognizerBase;\n}());\nexports.ServiceRecognizerBase = ServiceRecognizerBase;\n\n//# sourceMappingURL=ServiceRecognizerBase.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"./Exports\");\n/**\n * Defines content of a RecognitionErrorEvent.\n * @class SpeechRecognitionCanceledEventArgs\n */\nvar SpeechRecognitionCanceledEventArgs = /** @class */ (function (_super) {\n    __extends(SpeechRecognitionCanceledEventArgs, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {CancellationReason} reason - The cancellation reason.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    function SpeechRecognitionCanceledEventArgs(reason, errorDetails, errorCode, offset, sessionId) {\n        var _this = _super.call(this, offset, sessionId) || this;\n        _this.privReason = reason;\n        _this.privErrorDetails = errorDetails;\n        _this.privErrorCode = errorCode;\n        return _this;\n    }\n    Object.defineProperty(SpeechRecognitionCanceledEventArgs.prototype, \"reason\", {\n        /**\n         * The reason the recognition was canceled.\n         * @member SpeechRecognitionCanceledEventArgs.prototype.reason\n         * @function\n         * @public\n         * @returns {CancellationReason} Specifies the reason canceled.\n         */\n        get: function () {\n            return this.privReason;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechRecognitionCanceledEventArgs.prototype, \"errorCode\", {\n        /**\n         * The error code in case of an unsuccessful recognition.\n         * Added in version 1.1.0.\n         * @return An error code that represents the error reason.\n         */\n        get: function () {\n            return this.privErrorCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechRecognitionCanceledEventArgs.prototype, \"errorDetails\", {\n        /**\n         * In case of an unsuccessful recognition, provides details of the occurred error.\n         * @member SpeechRecognitionCanceledEventArgs.prototype.errorDetails\n         * @function\n         * @public\n         * @returns {string} A String that represents the error details.\n         */\n        get: function () {\n            return this.privErrorDetails;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SpeechRecognitionCanceledEventArgs;\n}(Exports_1.RecognitionEventArgs));\nexports.SpeechRecognitionCanceledEventArgs = SpeechRecognitionCanceledEventArgs;\n\n//# sourceMappingURL=SpeechRecognitionCanceledEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../Exports\");\nvar SimpleSpeechPhrase = /** @class */ (function () {\n    function SimpleSpeechPhrase(json) {\n        this.privSimpleSpeechPhrase = JSON.parse(json);\n        this.privSimpleSpeechPhrase.RecognitionStatus = Exports_1.RecognitionStatus[this.privSimpleSpeechPhrase.RecognitionStatus];\n    }\n    SimpleSpeechPhrase.fromJSON = function (json) {\n        return new SimpleSpeechPhrase(json);\n    };\n    Object.defineProperty(SimpleSpeechPhrase.prototype, \"RecognitionStatus\", {\n        get: function () {\n            return this.privSimpleSpeechPhrase.RecognitionStatus;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleSpeechPhrase.prototype, \"DisplayText\", {\n        get: function () {\n            return this.privSimpleSpeechPhrase.DisplayText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleSpeechPhrase.prototype, \"Offset\", {\n        get: function () {\n            return this.privSimpleSpeechPhrase.Offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SimpleSpeechPhrase.prototype, \"Duration\", {\n        get: function () {\n            return this.privSimpleSpeechPhrase.Duration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SimpleSpeechPhrase;\n}());\nexports.SimpleSpeechPhrase = SimpleSpeechPhrase;\n\n//# sourceMappingURL=SimpleSpeechPhrase.js.map\n","module.exports = require(\"core-js/library/fn/get-iterator\");","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common/Exports\");\nvar PcmRecorder = /** @class */ (function () {\n    function PcmRecorder() {\n        var _this = this;\n        this.record = function (context, mediaStream, outputStream) {\n            var desiredSampleRate = 16000;\n            var scriptNode = (function () {\n                var bufferSize = 0;\n                try {\n                    return context.createScriptProcessor(bufferSize, 1, 1);\n                }\n                catch (error) {\n                    // Webkit (<= version 31) requires a valid bufferSize.\n                    bufferSize = 2048;\n                    var audioSampleRate = context.sampleRate;\n                    while (bufferSize < 16384 && audioSampleRate >= (2 * desiredSampleRate)) {\n                        bufferSize <<= 1;\n                        audioSampleRate >>= 1;\n                    }\n                    return context.createScriptProcessor(bufferSize, 1, 1);\n                }\n            })();\n            var waveStreamEncoder = new Exports_1.RiffPcmEncoder(context.sampleRate, desiredSampleRate);\n            var needHeader = true;\n            var that = _this;\n            scriptNode.onaudioprocess = function (event) {\n                var inputFrame = event.inputBuffer.getChannelData(0);\n                if (outputStream && !outputStream.isClosed) {\n                    var waveFrame = waveStreamEncoder.encode(needHeader, inputFrame);\n                    if (!!waveFrame) {\n                        outputStream.write(waveFrame);\n                        needHeader = false;\n                    }\n                }\n            };\n            var micInput = context.createMediaStreamSource(mediaStream);\n            _this.privMediaResources = {\n                scriptProcessorNode: scriptNode,\n                source: micInput,\n                stream: mediaStream,\n            };\n            micInput.connect(scriptNode);\n            scriptNode.connect(context.destination);\n        };\n        this.releaseMediaResources = function (context) {\n            if (_this.privMediaResources) {\n                if (_this.privMediaResources.scriptProcessorNode) {\n                    _this.privMediaResources.scriptProcessorNode.disconnect(context.destination);\n                    _this.privMediaResources.scriptProcessorNode = null;\n                }\n                if (_this.privMediaResources.source) {\n                    _this.privMediaResources.source.disconnect();\n                    _this.privMediaResources.stream.getTracks().forEach(function (track) { return track.stop(); });\n                    _this.privMediaResources.source = null;\n                }\n            }\n        };\n    }\n    return PcmRecorder;\n}());\nexports.PcmRecorder = PcmRecorder;\n\n//# sourceMappingURL=PCMRecorder.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"./Exports\");\n/**\n * Translation text result event arguments.\n * @class TranslationRecognitionEventArgs\n */\nvar TranslationRecognitionEventArgs = /** @class */ (function (_super) {\n    __extends(TranslationRecognitionEventArgs, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {TranslationRecognitionResult} result - The translation recognition result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    function TranslationRecognitionEventArgs(result, offset, sessionId) {\n        var _this = _super.call(this, offset, sessionId) || this;\n        _this.privResult = result;\n        return _this;\n    }\n    Object.defineProperty(TranslationRecognitionEventArgs.prototype, \"result\", {\n        /**\n         * Specifies the recognition result.\n         * @member TranslationRecognitionEventArgs.prototype.result\n         * @function\n         * @public\n         * @returns {TranslationRecognitionResult} the recognition result.\n         */\n        get: function () {\n            return this.privResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TranslationRecognitionEventArgs;\n}(Exports_1.RecognitionEventArgs));\nexports.TranslationRecognitionEventArgs = TranslationRecognitionEventArgs;\n\n//# sourceMappingURL=TranslationRecognitionEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// response\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IntentResponse = /** @class */ (function () {\n    function IntentResponse(json) {\n        this.privIntentResponse = JSON.parse(json);\n    }\n    IntentResponse.fromJSON = function (json) {\n        return new IntentResponse(json);\n    };\n    Object.defineProperty(IntentResponse.prototype, \"query\", {\n        get: function () {\n            return this.privIntentResponse.query;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IntentResponse.prototype, \"topScoringIntent\", {\n        get: function () {\n            return this.privIntentResponse.topScoringIntent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IntentResponse.prototype, \"entities\", {\n        get: function () {\n            return this.privIntentResponse.entities;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IntentResponse;\n}());\nexports.IntentResponse = IntentResponse;\n\n//# sourceMappingURL=IntentResponse.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ConnectionState;\n(function (ConnectionState) {\n    ConnectionState[ConnectionState[\"None\"] = 0] = \"None\";\n    ConnectionState[ConnectionState[\"Connected\"] = 1] = \"Connected\";\n    ConnectionState[ConnectionState[\"Connecting\"] = 2] = \"Connecting\";\n    ConnectionState[ConnectionState[\"Disconnected\"] = 3] = \"Disconnected\";\n})(ConnectionState = exports.ConnectionState || (exports.ConnectionState = {}));\n\n//# sourceMappingURL=IConnection.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Error_1 = require(\"./Error\");\nvar Guid_1 = require(\"./Guid\");\nvar EventSource = /** @class */ (function () {\n    function EventSource(metadata) {\n        var _this = this;\n        this.privEventListeners = {};\n        this.privIsDisposed = false;\n        this.onEvent = function (event) {\n            if (_this.isDisposed()) {\n                throw (new Error_1.ObjectDisposedError(\"EventSource\"));\n            }\n            if (_this.metadata) {\n                for (var paramName in _this.metadata) {\n                    if (paramName) {\n                        if (event.metadata) {\n                            if (!event.metadata[paramName]) {\n                                event.metadata[paramName] = _this.metadata[paramName];\n                            }\n                        }\n                    }\n                }\n            }\n            for (var eventId in _this.privEventListeners) {\n                if (eventId && _this.privEventListeners[eventId]) {\n                    _this.privEventListeners[eventId](event);\n                }\n            }\n        };\n        this.attach = function (onEventCallback) {\n            var id = Guid_1.createNoDashGuid();\n            _this.privEventListeners[id] = onEventCallback;\n            return {\n                detach: function () {\n                    delete _this.privEventListeners[id];\n                },\n            };\n        };\n        this.attachListener = function (listener) {\n            return _this.attach(listener.onEvent);\n        };\n        this.isDisposed = function () {\n            return _this.privIsDisposed;\n        };\n        this.dispose = function () {\n            _this.privEventListeners = null;\n            _this.privIsDisposed = true;\n        };\n        this.privMetadata = metadata;\n    }\n    Object.defineProperty(EventSource.prototype, \"metadata\", {\n        get: function () {\n            return this.privMetadata;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EventSource;\n}());\nexports.EventSource = EventSource;\n\n//# sourceMappingURL=EventSource.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common.browser/Exports\");\nvar Exports_2 = require(\"../sdk/Exports\");\nvar Exports_3 = require(\"./Exports\");\nvar TestHooksParamName = \"testhooks\";\nvar ConnectionIdHeader = \"X-ConnectionId\";\nvar TranslationConnectionFactory = /** @class */ (function () {\n    function TranslationConnectionFactory() {\n        this.create = function (config, authInfo, connectionId) {\n            var endpoint = config.parameters.getProperty(Exports_2.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n            if (!endpoint) {\n                var region = config.parameters.getProperty(Exports_2.PropertyId.SpeechServiceConnection_Region, undefined);\n                endpoint = \"wss://\" + region + \".s2s.speech.microsoft.com/speech/translation/cognitiveservices/v1\";\n            }\n            var queryParams = {\n                from: config.parameters.getProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage),\n                to: config.parameters.getProperty(Exports_2.PropertyId.SpeechServiceConnection_TranslationToLanguages),\n            };\n            var voiceName = \"voice\";\n            var featureName = \"features\";\n            if (config.parameters.getProperty(Exports_2.PropertyId.SpeechServiceConnection_TranslationVoice, undefined) !== undefined) {\n                queryParams[voiceName] = config.parameters.getProperty(Exports_2.PropertyId.SpeechServiceConnection_TranslationVoice);\n                queryParams[featureName] = \"texttospeech\";\n            }\n            var headers = {};\n            headers[authInfo.headerName] = authInfo.token;\n            headers[ConnectionIdHeader] = connectionId;\n            return new Exports_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_3.WebsocketMessageFormatter(), connectionId);\n        };\n    }\n    return TranslationConnectionFactory;\n}());\nexports.TranslationConnectionFactory = TranslationConnectionFactory;\n\n//# sourceMappingURL=TranslationConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common.browser/Exports\");\nvar Exports_2 = require(\"../common.speech/Exports\");\nvar Exports_3 = require(\"../sdk/Exports\");\nvar Exports_4 = require(\"./Exports\");\nvar QueryParameterNames_1 = require(\"./QueryParameterNames\");\nvar SpeechConnectionFactory = /** @class */ (function () {\n    function SpeechConnectionFactory() {\n        var _this = this;\n        this.interactiveRelativeUri = \"/speech/recognition/interactive/cognitiveservices/v1\";\n        this.conversationRelativeUri = \"/speech/recognition/conversation/cognitiveservices/v1\";\n        this.dictationRelativeUri = \"/speech/recognition/dictation/cognitiveservices/v1\";\n        this.create = function (config, authInfo, connectionId) {\n            var endpoint = config.parameters.getProperty(Exports_3.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n            var queryParams = {};\n            var endpointId = config.parameters.getProperty(Exports_3.PropertyId.SpeechServiceConnection_EndpointId, undefined);\n            var language = config.parameters.getProperty(Exports_3.PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\n            if (endpointId) {\n                if (!endpoint || endpoint.search(QueryParameterNames_1.QueryParameterNames.DeploymentIdParamName) === -1) {\n                    queryParams[QueryParameterNames_1.QueryParameterNames.DeploymentIdParamName] = endpointId;\n                }\n            }\n            else if (language) {\n                if (!endpoint || endpoint.search(QueryParameterNames_1.QueryParameterNames.LanguageParamName) === -1) {\n                    queryParams[QueryParameterNames_1.QueryParameterNames.LanguageParamName] = language;\n                }\n            }\n            if (!endpoint || endpoint.search(QueryParameterNames_1.QueryParameterNames.FormatParamName) === -1) {\n                queryParams[QueryParameterNames_1.QueryParameterNames.FormatParamName] = config.parameters.getProperty(Exports_2.OutputFormatPropertyName, Exports_3.OutputFormat[Exports_3.OutputFormat.Simple]).toLowerCase();\n            }\n            if (!endpoint) {\n                var region = config.parameters.getProperty(Exports_3.PropertyId.SpeechServiceConnection_Region, undefined);\n                var host = \"wss://\" + region + \".stt.speech.microsoft.com\";\n                switch (config.recognitionMode) {\n                    case Exports_4.RecognitionMode.Conversation:\n                        endpoint = host + _this.conversationRelativeUri;\n                        break;\n                    case Exports_4.RecognitionMode.Dictation:\n                        endpoint = host + _this.dictationRelativeUri;\n                        break;\n                    default:\n                        endpoint = host + _this.interactiveRelativeUri; // default is interactive\n                        break;\n                }\n            }\n            var headers = {};\n            headers[authInfo.headerName] = authInfo.token;\n            headers[QueryParameterNames_1.QueryParameterNames.ConnectionIdHeader] = connectionId;\n            return new Exports_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_4.WebsocketMessageFormatter(), connectionId);\n        };\n    }\n    return SpeechConnectionFactory;\n}());\nexports.SpeechConnectionFactory = SpeechConnectionFactory;\n\n//# sourceMappingURL=SpeechConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"./Exports\");\n/**\n * Defines contents of speech recognizing/recognized event.\n * @class SpeechRecognitionEventArgs\n */\nvar SpeechRecognitionEventArgs = /** @class */ (function (_super) {\n    __extends(SpeechRecognitionEventArgs, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {SpeechRecognitionResult} result - The speech recognition result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    function SpeechRecognitionEventArgs(result, offset, sessionId) {\n        var _this = _super.call(this, offset, sessionId) || this;\n        _this.privResult = result;\n        return _this;\n    }\n    Object.defineProperty(SpeechRecognitionEventArgs.prototype, \"result\", {\n        /**\n         * Specifies the recognition result.\n         * @member SpeechRecognitionEventArgs.prototype.result\n         * @function\n         * @public\n         * @returns {SpeechRecognitionResult} the recognition result.\n         */\n        get: function () {\n            return this.privResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SpeechRecognitionEventArgs;\n}(Exports_1.RecognitionEventArgs));\nexports.SpeechRecognitionEventArgs = SpeechRecognitionEventArgs;\n\n//# sourceMappingURL=SpeechRecognitionEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Make sure not to export internal modules.\n//\n__export(require(\"./CognitiveSubscriptionKeyAuthentication\"));\n__export(require(\"./CognitiveTokenAuthentication\"));\n__export(require(\"./IAuthentication\"));\n__export(require(\"./IntentConnectionFactory\"));\n__export(require(\"./RecognitionEvents\"));\n__export(require(\"./ServiceRecognizerBase\"));\n__export(require(\"./RecognizerConfig\"));\n__export(require(\"./WebsocketMessageFormatter\"));\n__export(require(\"./SpeechConnectionFactory\"));\n__export(require(\"./TranslationConnectionFactory\"));\n__export(require(\"./EnumTranslation\"));\n__export(require(\"./ServiceMessages/Enums\"));\n__export(require(\"./ServiceMessages/TranslationSynthesisEnd\"));\n__export(require(\"./ServiceMessages/TranslationHypothesis\"));\n__export(require(\"./ServiceMessages/TranslationPhrase\"));\n__export(require(\"./TranslationServiceRecognizer\"));\n__export(require(\"./ServiceMessages/SpeechDetected\"));\n__export(require(\"./ServiceMessages/SpeechHypothesis\"));\n__export(require(\"./SpeechServiceRecognizer\"));\n__export(require(\"./ServiceMessages/DetailedSpeechPhrase\"));\n__export(require(\"./ServiceMessages/SimpleSpeechPhrase\"));\n__export(require(\"./AddedLmIntent\"));\n__export(require(\"./IntentServiceRecognizer\"));\n__export(require(\"./ServiceMessages/IntentResponse\"));\n__export(require(\"./RequestSession\"));\n__export(require(\"./SpeechContext\"));\n__export(require(\"./DynamicGrammarBuilder\"));\nexports.OutputFormatPropertyName = \"OutputFormat\";\nexports.CancellationErrorCodePropertyName = \"CancellationErrorCode\";\n\n//# sourceMappingURL=Exports.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ConnectionMessage_1 = require(\"./ConnectionMessage\");\nvar Error_1 = require(\"./Error\");\nvar Guid_1 = require(\"./Guid\");\nvar RawWebsocketMessage = /** @class */ (function () {\n    function RawWebsocketMessage(messageType, payload, id) {\n        this.privPayload = null;\n        if (!payload) {\n            throw new Error_1.ArgumentNullError(\"payload\");\n        }\n        if (messageType === ConnectionMessage_1.MessageType.Binary && !(payload instanceof ArrayBuffer)) {\n            throw new Error_1.InvalidOperationError(\"Payload must be ArrayBuffer\");\n        }\n        if (messageType === ConnectionMessage_1.MessageType.Text && !(typeof (payload) === \"string\")) {\n            throw new Error_1.InvalidOperationError(\"Payload must be a string\");\n        }\n        this.privMessageType = messageType;\n        this.privPayload = payload;\n        this.privId = id ? id : Guid_1.createNoDashGuid();\n    }\n    Object.defineProperty(RawWebsocketMessage.prototype, \"messageType\", {\n        get: function () {\n            return this.privMessageType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RawWebsocketMessage.prototype, \"payload\", {\n        get: function () {\n            return this.privPayload;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RawWebsocketMessage.prototype, \"textContent\", {\n        get: function () {\n            if (this.privMessageType === ConnectionMessage_1.MessageType.Binary) {\n                throw new Error_1.InvalidOperationError(\"Not supported for binary message\");\n            }\n            return this.privPayload;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RawWebsocketMessage.prototype, \"binaryContent\", {\n        get: function () {\n            if (this.privMessageType === ConnectionMessage_1.MessageType.Text) {\n                throw new Error_1.InvalidOperationError(\"Not supported for text message\");\n            }\n            return this.privPayload;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RawWebsocketMessage.prototype, \"id\", {\n        get: function () {\n            return this.privId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RawWebsocketMessage;\n}());\nexports.RawWebsocketMessage = RawWebsocketMessage;\n\n//# sourceMappingURL=RawWebsocketMessage.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common.speech/Exports\");\nvar Exports_2 = require(\"./Exports\");\n/**\n * Contains detailed information about why a result was canceled.\n * @class CancellationDetails\n */\nvar CancellationDetails = /** @class */ (function () {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {CancellationReason} reason - The cancellation reason.\n     * @param {string} errorDetails - The error details, if provided.\n     */\n    function CancellationDetails(reason, errorDetails, errorCode) {\n        this.privReason = reason;\n        this.privErrorDetails = errorDetails;\n        this.privErrorCode = errorCode;\n    }\n    /**\n     * Creates an instance of CancellationDetails object for the canceled RecognitionResult.\n     * @member CancellationDetails.fromResult\n     * @function\n     * @public\n     * @param {RecognitionResult} result - The result that was canceled.\n     * @returns {CancellationDetails} The cancellation details object being created.\n     */\n    CancellationDetails.fromResult = function (result) {\n        var reason = Exports_2.CancellationReason.Error;\n        var errorCode = Exports_2.CancellationErrorCode.NoError;\n        if (!!result.json) {\n            var simpleSpeech = Exports_1.SimpleSpeechPhrase.fromJSON(result.json);\n            reason = Exports_1.EnumTranslation.implTranslateCancelResult(simpleSpeech.RecognitionStatus);\n        }\n        if (!!result.properties) {\n            errorCode = Exports_2.CancellationErrorCode[result.properties.getProperty(Exports_1.CancellationErrorCodePropertyName, Exports_2.CancellationErrorCode[Exports_2.CancellationErrorCode.NoError])];\n        }\n        return new CancellationDetails(reason, result.errorDetails, errorCode);\n    };\n    Object.defineProperty(CancellationDetails.prototype, \"reason\", {\n        /**\n         * The reason the recognition was canceled.\n         * @member CancellationDetails.prototype.reason\n         * @function\n         * @public\n         * @returns {CancellationReason} Specifies the reason canceled.\n         */\n        get: function () {\n            return this.privReason;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CancellationDetails.prototype, \"errorDetails\", {\n        /**\n         * In case of an unsuccessful recognition, provides details of the occurred error.\n         * @member CancellationDetails.prototype.errorDetails\n         * @function\n         * @public\n         * @returns {string} A String that represents the error details.\n         */\n        get: function () {\n            return this.privErrorDetails;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CancellationDetails.prototype, \"ErrorCode\", {\n        /**\n         * The error code in case of an unsuccessful recognition.\n         * Added in version 1.1.0.\n         * @return An error code that represents the error reason.\n         */\n        get: function () {\n            return this.privErrorCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CancellationDetails;\n}());\nexports.CancellationDetails = CancellationDetails;\n\n//# sourceMappingURL=CancellationDetails.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common/Exports\");\nvar ReplayableAudioNode = /** @class */ (function () {\n    function ReplayableAudioNode(audioSource, format) {\n        var _this = this;\n        this.privBuffers = [];\n        this.privReplayOffset = 0;\n        this.privLastShrinkOffset = 0;\n        this.privBufferStartOffset = 0;\n        this.privBufferSerial = 0;\n        this.privBufferedBytes = 0;\n        this.privReplay = false;\n        this.id = function () {\n            return _this.privAudioNode.id();\n        };\n        this.privAudioNode = audioSource;\n        this.privFormat = format;\n    }\n    // Reads and returns the next chunk of audio buffer.\n    // If replay of existing buffers are needed, read() will first seek and replay\n    // existing content, and upoin completion it will read new content from the underlying\n    // audio node, saving that content into the replayable buffers.\n    ReplayableAudioNode.prototype.read = function () {\n        var _this = this;\n        // if there is a replay request to honor.\n        if (!!this.privReplay && this.privBuffers.length !== 0) {\n            // Find the start point in the buffers.\n            // Offsets are in 100ns increments.\n            // So how many bytes do we need to seek to get the right offset?\n            var offsetToSeek = this.privReplayOffset - this.privBufferStartOffset;\n            var bytesToSeek = Math.round(offsetToSeek * this.privFormat.avgBytesPerSec * 1e-7);\n            if (0 !== (bytesToSeek % 2)) {\n                bytesToSeek++;\n            }\n            var i = 0;\n            while (i < this.privBuffers.length && bytesToSeek >= this.privBuffers[i].buffer.byteLength) {\n                bytesToSeek -= this.privBuffers[i++].buffer.byteLength;\n            }\n            var retVal = this.privBuffers[i].buffer.slice(bytesToSeek);\n            this.privReplayOffset += (retVal.byteLength / this.privFormat.avgBytesPerSec) * 1e+7;\n            // If we've reached the end of the buffers, stop replaying.\n            if (i === this.privBuffers.length - 1) {\n                this.privReplay = false;\n            }\n            return Exports_1.PromiseHelper.fromResult({\n                buffer: retVal,\n                isEnd: false,\n            });\n        }\n        return this.privAudioNode.read()\n            .onSuccessContinueWith(function (result) {\n            if (result.buffer) {\n                _this.privBuffers.push(new BufferEntry(result.buffer, _this.privBufferSerial++, _this.privBufferedBytes));\n                _this.privBufferedBytes += result.buffer.byteLength;\n            }\n            return result;\n        });\n    };\n    ReplayableAudioNode.prototype.detach = function () {\n        this.privAudioNode.detach();\n        this.privBuffers = undefined;\n    };\n    ReplayableAudioNode.prototype.replay = function () {\n        if (0 !== this.privBuffers.length) {\n            this.privReplay = true;\n            this.privReplayOffset = this.privLastShrinkOffset;\n        }\n    };\n    // Shrinks the existing audio buffers to start at the new offset, or at the\n    // beginnign of the buffer closest to the requested offset.\n    // A replay request will start from the last shrink point.\n    ReplayableAudioNode.prototype.shrinkBuffers = function (offset) {\n        this.privLastShrinkOffset = offset;\n        // Find the start point in the buffers.\n        // Offsets are in 100ns increments.\n        // So how many bytes do we need to seek to get the right offset?\n        var offsetToSeek = offset - this.privBufferStartOffset;\n        var bytesToSeek = Math.round(offsetToSeek * this.privFormat.avgBytesPerSec * 1e-7);\n        var i = 0;\n        while (i < this.privBuffers.length && bytesToSeek >= this.privBuffers[i].buffer.byteLength) {\n            bytesToSeek -= this.privBuffers[i++].buffer.byteLength;\n        }\n        this.privBufferStartOffset = Math.round(offset - ((bytesToSeek / this.privFormat.avgBytesPerSec) * 1e+7));\n        this.privBuffers = this.privBuffers.slice(i);\n    };\n    return ReplayableAudioNode;\n}());\nexports.ReplayableAudioNode = ReplayableAudioNode;\n// Primary use of this class is to help debugging problems with the replay\n// code. If the memory cost of alloc / dealloc gets too much, drop it and just use\n// the ArrayBuffer directly.\n// tslint:disable-next-line:max-classes-per-file\nvar BufferEntry = /** @class */ (function () {\n    function BufferEntry(buffer, serial, byteOffset) {\n        this.buffer = buffer;\n        this.serial = serial;\n        this.byteOffset = byteOffset;\n    }\n    return BufferEntry;\n}());\n\n//# sourceMappingURL=ReplayableAudioNode.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../../src/common.speech/Exports\");\nvar Exports_2 = require(\"./Exports\");\n/**\n * Contains detailed information for NoMatch recognition results.\n * @class NoMatchDetails\n */\nvar NoMatchDetails = /** @class */ (function () {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {NoMatchReason} reason - The no-match reason.\n     */\n    function NoMatchDetails(reason) {\n        this.privReason = reason;\n    }\n    /**\n     * Creates an instance of NoMatchDetails object for the NoMatch SpeechRecognitionResults.\n     * @member NoMatchDetails.fromResult\n     * @function\n     * @public\n     * @param {SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult}\n     *        result - The recognition result that was not recognized.\n     * @returns {NoMatchDetails} The no match details object being created.\n     */\n    NoMatchDetails.fromResult = function (result) {\n        var simpleSpeech = Exports_1.SimpleSpeechPhrase.fromJSON(result.json);\n        var reason = Exports_2.NoMatchReason.NotRecognized;\n        switch (simpleSpeech.RecognitionStatus) {\n            case Exports_1.RecognitionStatus.BabbleTimeout:\n                reason = Exports_2.NoMatchReason.InitialBabbleTimeout;\n                break;\n            case Exports_1.RecognitionStatus.InitialSilenceTimeout:\n                reason = Exports_2.NoMatchReason.InitialSilenceTimeout;\n                break;\n            default:\n                reason = Exports_2.NoMatchReason.NotRecognized;\n                break;\n        }\n        return new NoMatchDetails(reason);\n    };\n    Object.defineProperty(NoMatchDetails.prototype, \"reason\", {\n        /**\n         * The reason the recognition was canceled.\n         * @member NoMatchDetails.prototype.reason\n         * @function\n         * @public\n         * @returns {NoMatchReason} Specifies the reason canceled.\n         */\n        get: function () {\n            return this.privReason;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NoMatchDetails;\n}());\nexports.NoMatchDetails = NoMatchDetails;\n\n//# sourceMappingURL=NoMatchDetails.js.map\n","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Allows additions of new phrases to improve speech recognition.\n *\n * Phrases added to the recognizer are effective at the start of the next recognition, or the next time the SpeechSDK must reconnect\n * to the speech service.\n */\nvar PhraseListGrammar = /** @class */ (function () {\n    function PhraseListGrammar(recogBase) {\n        this.privGrammerBuilder = recogBase.dynamicGrammar;\n    }\n    /**\n     * Creates a PhraseListGrammar from a given speech recognizer. Will accept any recognizer that derives from @class Recognizer.\n     * @param recognizer The recognizer to add phrase lists to.\n     */\n    PhraseListGrammar.fromRecognizer = function (recognizer) {\n        var recoBase = recognizer.internalData;\n        return new PhraseListGrammar(recoBase);\n    };\n    /**\n     * Adds a single phrase to the current recognizer.\n     * @param phrase Phrase to add.\n     */\n    PhraseListGrammar.prototype.addPhrase = function (phrase) {\n        this.privGrammerBuilder.addPhrase(phrase);\n    };\n    /**\n     * Adds multiple phrases to the current recognizer.\n     * @param phrases Array of phrases to add.\n     */\n    PhraseListGrammar.prototype.addPhrases = function (phrases) {\n        this.privGrammerBuilder.addPhrase(phrases);\n    };\n    /**\n     * Clears all phrases added to the current recognizer.\n     */\n    PhraseListGrammar.prototype.clear = function () {\n        this.privGrammerBuilder.clearPhrases();\n    };\n    return PhraseListGrammar;\n}());\nexports.PhraseListGrammar = PhraseListGrammar;\n\n//# sourceMappingURL=PhraseListGrammar.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Error_1 = require(\"./Error\");\nvar List = /** @class */ (function () {\n    function List(list) {\n        var _this = this;\n        this.privSubscriptionIdCounter = 0;\n        this.privAddSubscriptions = {};\n        this.privRemoveSubscriptions = {};\n        this.privDisposedSubscriptions = {};\n        this.privDisposeReason = null;\n        this.get = function (itemIndex) {\n            _this.throwIfDisposed();\n            return _this.privList[itemIndex];\n        };\n        this.first = function () {\n            return _this.get(0);\n        };\n        this.last = function () {\n            return _this.get(_this.length() - 1);\n        };\n        this.add = function (item) {\n            _this.throwIfDisposed();\n            _this.insertAt(_this.privList.length, item);\n        };\n        this.insertAt = function (index, item) {\n            _this.throwIfDisposed();\n            if (index === 0) {\n                _this.privList.unshift(item);\n            }\n            else if (index === _this.privList.length) {\n                _this.privList.push(item);\n            }\n            else {\n                _this.privList.splice(index, 0, item);\n            }\n            _this.triggerSubscriptions(_this.privAddSubscriptions);\n        };\n        this.removeFirst = function () {\n            _this.throwIfDisposed();\n            return _this.removeAt(0);\n        };\n        this.removeLast = function () {\n            _this.throwIfDisposed();\n            return _this.removeAt(_this.length() - 1);\n        };\n        this.removeAt = function (index) {\n            _this.throwIfDisposed();\n            return _this.remove(index, 1)[0];\n        };\n        this.remove = function (index, count) {\n            _this.throwIfDisposed();\n            var removedElements = _this.privList.splice(index, count);\n            _this.triggerSubscriptions(_this.privRemoveSubscriptions);\n            return removedElements;\n        };\n        this.clear = function () {\n            _this.throwIfDisposed();\n            _this.remove(0, _this.length());\n        };\n        this.length = function () {\n            _this.throwIfDisposed();\n            return _this.privList.length;\n        };\n        this.onAdded = function (addedCallback) {\n            _this.throwIfDisposed();\n            var subscriptionId = _this.privSubscriptionIdCounter++;\n            _this.privAddSubscriptions[subscriptionId] = addedCallback;\n            return {\n                detach: function () {\n                    delete _this.privAddSubscriptions[subscriptionId];\n                },\n            };\n        };\n        this.onRemoved = function (removedCallback) {\n            _this.throwIfDisposed();\n            var subscriptionId = _this.privSubscriptionIdCounter++;\n            _this.privRemoveSubscriptions[subscriptionId] = removedCallback;\n            return {\n                detach: function () {\n                    delete _this.privRemoveSubscriptions[subscriptionId];\n                },\n            };\n        };\n        this.onDisposed = function (disposedCallback) {\n            _this.throwIfDisposed();\n            var subscriptionId = _this.privSubscriptionIdCounter++;\n            _this.privDisposedSubscriptions[subscriptionId] = disposedCallback;\n            return {\n                detach: function () {\n                    delete _this.privDisposedSubscriptions[subscriptionId];\n                },\n            };\n        };\n        this.join = function (seperator) {\n            _this.throwIfDisposed();\n            return _this.privList.join(seperator);\n        };\n        this.toArray = function () {\n            var cloneCopy = Array();\n            _this.privList.forEach(function (val) {\n                cloneCopy.push(val);\n            });\n            return cloneCopy;\n        };\n        this.any = function (callback) {\n            _this.throwIfDisposed();\n            if (callback) {\n                return _this.where(callback).length() > 0;\n            }\n            else {\n                return _this.length() > 0;\n            }\n        };\n        this.all = function (callback) {\n            _this.throwIfDisposed();\n            return _this.where(callback).length() === _this.length();\n        };\n        this.forEach = function (callback) {\n            _this.throwIfDisposed();\n            for (var i = 0; i < _this.length(); i++) {\n                callback(_this.privList[i], i);\n            }\n        };\n        this.select = function (callback) {\n            _this.throwIfDisposed();\n            var selectList = [];\n            for (var i = 0; i < _this.privList.length; i++) {\n                selectList.push(callback(_this.privList[i], i));\n            }\n            return new List(selectList);\n        };\n        this.where = function (callback) {\n            _this.throwIfDisposed();\n            var filteredList = new List();\n            for (var i = 0; i < _this.privList.length; i++) {\n                if (callback(_this.privList[i], i)) {\n                    filteredList.add(_this.privList[i]);\n                }\n            }\n            return filteredList;\n        };\n        this.orderBy = function (compareFn) {\n            _this.throwIfDisposed();\n            var clonedArray = _this.toArray();\n            var orderedArray = clonedArray.sort(compareFn);\n            return new List(orderedArray);\n        };\n        this.orderByDesc = function (compareFn) {\n            _this.throwIfDisposed();\n            return _this.orderBy(function (a, b) { return compareFn(b, a); });\n        };\n        this.clone = function () {\n            _this.throwIfDisposed();\n            return new List(_this.toArray());\n        };\n        this.concat = function (list) {\n            _this.throwIfDisposed();\n            return new List(_this.privList.concat(list.toArray()));\n        };\n        this.concatArray = function (array) {\n            _this.throwIfDisposed();\n            return new List(_this.privList.concat(array));\n        };\n        this.isDisposed = function () {\n            return _this.privList == null;\n        };\n        this.dispose = function (reason) {\n            if (!_this.isDisposed()) {\n                _this.privDisposeReason = reason;\n                _this.privList = null;\n                _this.privAddSubscriptions = null;\n                _this.privRemoveSubscriptions = null;\n                _this.triggerSubscriptions(_this.privDisposedSubscriptions);\n            }\n        };\n        this.throwIfDisposed = function () {\n            if (_this.isDisposed()) {\n                throw new Error_1.ObjectDisposedError(\"List\", _this.privDisposeReason);\n            }\n        };\n        this.triggerSubscriptions = function (subscriptions) {\n            if (subscriptions) {\n                for (var subscriptionId in subscriptions) {\n                    if (subscriptionId) {\n                        subscriptions[subscriptionId]();\n                    }\n                }\n            }\n        };\n        this.privList = [];\n        // copy the list rather than taking as is.\n        if (list) {\n            for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {\n                var item = list_1[_i];\n                this.privList.push(item);\n            }\n        }\n    }\n    return List;\n}());\nexports.List = List;\n\n//# sourceMappingURL=List.js.map\n","'use strict';\n\nmodule.exports = function() {\n  throw new Error(\n    'ws does not work in the browser. Browser clients must use the native ' +\n      'WebSocket object'\n  );\n};\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"./Exports\");\n/**\n * Represents collection of properties and their values.\n * @class PropertyCollection\n */\nvar PropertyCollection = /** @class */ (function () {\n    function PropertyCollection() {\n        this.privKeys = [];\n        this.privValues = [];\n    }\n    /**\n     * Returns the property value in type String. The parameter must have the same type as String.\n     * Currently only String, int and bool are allowed.\n     * If the name is not available, the specified defaultValue is returned.\n     * @member PropertyCollection.prototype.getProperty\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string} def - The default value which is returned if the parameter\n     *        is not available in the collection.\n     * @returns {string} value of the parameter.\n     */\n    PropertyCollection.prototype.getProperty = function (key, def) {\n        var keyToUse;\n        if (typeof key === \"string\") {\n            keyToUse = key;\n        }\n        else {\n            keyToUse = Exports_1.PropertyId[key];\n        }\n        for (var n = 0; n < this.privKeys.length; n++) {\n            if (this.privKeys[n] === keyToUse) {\n                return this.privValues[n];\n            }\n        }\n        return def;\n    };\n    /**\n     * Sets the String value of the parameter specified by name.\n     * @member PropertyCollection.prototype.setProperty\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string} value - The value of the parameter.\n     */\n    PropertyCollection.prototype.setProperty = function (key, value) {\n        var keyToUse;\n        if (typeof key === \"string\") {\n            keyToUse = key;\n        }\n        else {\n            keyToUse = Exports_1.PropertyId[key];\n        }\n        for (var n = 0; n < this.privKeys.length; n++) {\n            if (this.privKeys[n] === keyToUse) {\n                this.privValues[n] = value;\n                return;\n            }\n        }\n        this.privKeys.push(keyToUse);\n        this.privValues.push(value);\n    };\n    /**\n     * Clones the collection.\n     * @member PropertyCollection.prototype.clone\n     * @function\n     * @public\n     * @returns {PropertyCollection} A copy of the collection.\n     */\n    PropertyCollection.prototype.clone = function () {\n        var clonedMap = new PropertyCollection();\n        for (var n = 0; n < this.privKeys.length; n++) {\n            clonedMap.privKeys.push(this.privKeys[n]);\n            clonedMap.privValues.push(this.privValues[n]);\n        }\n        return clonedMap;\n    };\n    return PropertyCollection;\n}());\nexports.PropertyCollection = PropertyCollection;\n\n//# sourceMappingURL=PropertyCollection.js.map\n","module.exports = require(\"core-js/library/fn/object/define-property\");","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RiffPcmEncoder = /** @class */ (function () {\n    function RiffPcmEncoder(actualSampleRate, desiredSampleRate) {\n        var _this = this;\n        this.privChannelCount = 1;\n        this.encode = function (needHeader, actualAudioFrame) {\n            var audioFrame = _this.downSampleAudioFrame(actualAudioFrame, _this.privActualSampleRate, _this.privDesiredSampleRate);\n            if (!audioFrame) {\n                return null;\n            }\n            var audioLength = audioFrame.length * 2;\n            if (!needHeader) {\n                var buffer_1 = new ArrayBuffer(audioLength);\n                var view_1 = new DataView(buffer_1);\n                _this.floatTo16BitPCM(view_1, 0, audioFrame);\n                return buffer_1;\n            }\n            var buffer = new ArrayBuffer(44 + audioLength);\n            var bitsPerSample = 16;\n            var bytesPerSample = bitsPerSample / 8;\n            // We dont know ahead of time about the length of audio to stream. So set to 0.\n            var fileLength = 0;\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\n            var view = new DataView(buffer);\n            /* RIFF identifier */\n            _this.setString(view, 0, \"RIFF\");\n            /* file length */\n            view.setUint32(4, fileLength, true);\n            /* RIFF type & Format */\n            _this.setString(view, 8, \"WAVEfmt \");\n            /* format chunk length */\n            view.setUint32(16, 16, true);\n            /* sample format (raw) */\n            view.setUint16(20, 1, true);\n            /* channel count */\n            view.setUint16(22, _this.privChannelCount, true);\n            /* sample rate */\n            view.setUint32(24, _this.privDesiredSampleRate, true);\n            /* byte rate (sample rate * block align) */\n            view.setUint32(28, _this.privDesiredSampleRate * _this.privChannelCount * bytesPerSample, true);\n            /* block align (channel count * bytes per sample) */\n            view.setUint16(32, _this.privChannelCount * bytesPerSample, true);\n            /* bits per sample */\n            view.setUint16(34, bitsPerSample, true);\n            /* data chunk identifier */\n            _this.setString(view, 36, \"data\");\n            /* data chunk length */\n            view.setUint32(40, fileLength, true);\n            _this.floatTo16BitPCM(view, 44, audioFrame);\n            return buffer;\n        };\n        this.setString = function (view, offset, str) {\n            for (var i = 0; i < str.length; i++) {\n                view.setUint8(offset + i, str.charCodeAt(i));\n            }\n        };\n        this.floatTo16BitPCM = function (view, offset, input) {\n            for (var i = 0; i < input.length; i++, offset += 2) {\n                var s = Math.max(-1, Math.min(1, input[i]));\n                view.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n            }\n        };\n        this.downSampleAudioFrame = function (srcFrame, srcRate, dstRate) {\n            if (dstRate === srcRate || dstRate > srcRate) {\n                return srcFrame;\n            }\n            var ratio = srcRate / dstRate;\n            var dstLength = Math.round(srcFrame.length / ratio);\n            var dstFrame = new Float32Array(dstLength);\n            var srcOffset = 0;\n            var dstOffset = 0;\n            while (dstOffset < dstLength) {\n                var nextSrcOffset = Math.round((dstOffset + 1) * ratio);\n                var accum = 0;\n                var count = 0;\n                while (srcOffset < nextSrcOffset && srcOffset < srcFrame.length) {\n                    accum += srcFrame[srcOffset++];\n                    count++;\n                }\n                dstFrame[dstOffset++] = accum / count;\n            }\n            return dstFrame;\n        };\n        this.privActualSampleRate = actualSampleRate;\n        this.privDesiredSampleRate = desiredSampleRate;\n    }\n    return RiffPcmEncoder;\n}());\nexports.RiffPcmEncoder = RiffPcmEncoder;\n\n//# sourceMappingURL=RiffPcmEncoder.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../Exports\");\nvar TranslationSynthesisEnd = /** @class */ (function () {\n    function TranslationSynthesisEnd(json) {\n        this.privSynthesisEnd = JSON.parse(json);\n        this.privSynthesisEnd.SynthesisStatus = Exports_1.SynthesisStatus[this.privSynthesisEnd.SynthesisStatus];\n    }\n    TranslationSynthesisEnd.fromJSON = function (json) {\n        return new TranslationSynthesisEnd(json);\n    };\n    Object.defineProperty(TranslationSynthesisEnd.prototype, \"SynthesisStatus\", {\n        get: function () {\n            return this.privSynthesisEnd.SynthesisStatus;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TranslationSynthesisEnd.prototype, \"FailureReason\", {\n        get: function () {\n            return this.privSynthesisEnd.FailureReason;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TranslationSynthesisEnd;\n}());\nexports.TranslationSynthesisEnd = TranslationSynthesisEnd;\n\n//# sourceMappingURL=TranslationSynthesisEnd.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SpeechHypothesis = /** @class */ (function () {\n    function SpeechHypothesis(json) {\n        this.privSpeechHypothesis = JSON.parse(json);\n    }\n    SpeechHypothesis.fromJSON = function (json) {\n        return new SpeechHypothesis(json);\n    };\n    Object.defineProperty(SpeechHypothesis.prototype, \"Text\", {\n        get: function () {\n            return this.privSpeechHypothesis.Text;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechHypothesis.prototype, \"Offset\", {\n        get: function () {\n            return this.privSpeechHypothesis.Offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechHypothesis.prototype, \"Duration\", {\n        get: function () {\n            return this.privSpeechHypothesis.Duration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SpeechHypothesis;\n}());\nexports.SpeechHypothesis = SpeechHypothesis;\n\n//# sourceMappingURL=SpeechHypothesis.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Contracts_1 = require(\"./Contracts\");\n/**\n * Language understanding model\n * @class LanguageUnderstandingModel\n */\nvar LanguageUnderstandingModel = /** @class */ (function () {\n    /**\n     * Creates and initializes a new instance\n     * @constructor\n     */\n    function LanguageUnderstandingModel() {\n    }\n    /**\n     * Creates an language understanding model using the specified endpoint.\n     * @member LanguageUnderstandingModel.fromEndpoint\n     * @function\n     * @public\n     * @param {URL} uri - A String that represents the endpoint of the language understanding model.\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\n     */\n    LanguageUnderstandingModel.fromEndpoint = function (uri) {\n        Contracts_1.Contracts.throwIfNull(uri, \"uri\");\n        Contracts_1.Contracts.throwIfNullOrWhitespace(uri.hostname, \"uri\");\n        var langModelImp = new LanguageUnderstandingModelImpl();\n        // Need to extract the app ID from the URL.\n        // URL is in the format: https://<region>.api.cognitive.microsoft.com/luis/v2.0/apps/<Guid>?subscription-key=<key>&timezoneOffset=-360\n        // Start tearing the string apart.\n        // region can be extracted from the host name.\n        var firstDot = uri.host.indexOf(\".\");\n        if (-1 === firstDot) {\n            throw new Error(\"Could not determine region from endpoint\");\n        }\n        langModelImp.region = uri.host.substr(0, firstDot);\n        // Now the app ID.\n        var lastSegment = uri.pathname.lastIndexOf(\"/\") + 1;\n        if (-1 === lastSegment) {\n            throw new Error(\"Could not determine appId from endpoint\");\n        }\n        langModelImp.appId = uri.pathname.substr(lastSegment);\n        // And finally the key.\n        langModelImp.subscriptionKey = uri.searchParams.get(\"subscription-key\");\n        if (undefined === langModelImp.subscriptionKey) {\n            throw new Error(\"Could not determine subscription key from endpoint\");\n        }\n        return langModelImp;\n    };\n    /**\n     * Creates an language understanding model using the application id of Language Understanding service.\n     * @member LanguageUnderstandingModel.fromAppId\n     * @function\n     * @public\n     * @param {string} appId - A String that represents the application id of Language Understanding service.\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\n     */\n    LanguageUnderstandingModel.fromAppId = function (appId) {\n        Contracts_1.Contracts.throwIfNullOrWhitespace(appId, \"appId\");\n        var langModelImp = new LanguageUnderstandingModelImpl();\n        langModelImp.appId = appId;\n        return langModelImp;\n    };\n    /**\n     * Creates a language understanding model using hostname, subscription key and application\n     * id of Language Understanding service.\n     * @member LanguageUnderstandingModel.fromSubscription\n     * @function\n     * @public\n     * @param {string} subscriptionKey - A String that represents the subscription key of\n     *        Language Understanding service.\n     * @param {string} appId - A String that represents the application id of Language\n     *        Understanding service.\n     * @param {LanguageUnderstandingModel} region - A String that represents the region\n     *        of the Language Understanding service (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\n     */\n    LanguageUnderstandingModel.fromSubscription = function (subscriptionKey, appId, region) {\n        Contracts_1.Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\n        Contracts_1.Contracts.throwIfNullOrWhitespace(appId, \"appId\");\n        Contracts_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        var langModelImp = new LanguageUnderstandingModelImpl();\n        langModelImp.appId = appId;\n        langModelImp.region = region;\n        langModelImp.subscriptionKey = subscriptionKey;\n        return langModelImp;\n    };\n    return LanguageUnderstandingModel;\n}());\nexports.LanguageUnderstandingModel = LanguageUnderstandingModel;\n/**\n * @private\n * @class LanguageUnderstandingModelImpl\n */\n// tslint:disable-next-line:max-classes-per-file\nvar LanguageUnderstandingModelImpl = /** @class */ (function (_super) {\n    __extends(LanguageUnderstandingModelImpl, _super);\n    function LanguageUnderstandingModelImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return LanguageUnderstandingModelImpl;\n}(LanguageUnderstandingModel));\nexports.LanguageUnderstandingModelImpl = LanguageUnderstandingModelImpl;\n\n//# sourceMappingURL=LanguageUnderstandingModel.js.map\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CaptionHost.vue?vue&type=style&index=0&id=9004f914&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CaptionHost.vue?vue&type=style&index=0&id=9004f914&scoped=true&lang=css&\"","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"./Exports\");\n/**\n * Translation text result.\n * @class TranslationRecognitionResult\n */\nvar TranslationRecognitionResult = /** @class */ (function (_super) {\n    __extends(TranslationRecognitionResult, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {Translations} translations - The translations.\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    function TranslationRecognitionResult(translations, resultId, reason, text, duration, offset, errorDetails, json, properties) {\n        var _this = _super.call(this, resultId, reason, text, duration, offset, errorDetails, json, properties) || this;\n        _this.privTranslations = translations;\n        return _this;\n    }\n    Object.defineProperty(TranslationRecognitionResult.prototype, \"translations\", {\n        /**\n         * Presents the translation results. Each item in the dictionary represents\n         * a translation result in one of target languages, where the key is the name\n         * of the target language, in BCP-47 format, and the value is the translation\n         * text in the specified language.\n         * @member TranslationRecognitionResult.prototype.translations\n         * @function\n         * @public\n         * @returns {Translations} the current translation map that holds all translations requested.\n         */\n        get: function () {\n            return this.privTranslations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TranslationRecognitionResult;\n}(Exports_1.SpeechRecognitionResult));\nexports.TranslationRecognitionResult = TranslationRecognitionResult;\n\n//# sourceMappingURL=TranslationRecognitionResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common.speech/Exports\");\nvar Contracts_1 = require(\"./Contracts\");\nvar Exports_2 = require(\"./Exports\");\n/**\n * Speech translation configuration.\n * @class SpeechTranslationConfig\n */\nvar SpeechTranslationConfig = /** @class */ (function (_super) {\n    __extends(SpeechTranslationConfig, _super);\n    /**\n     * Creates an instance of recognizer config.\n     */\n    function SpeechTranslationConfig() {\n        return _super.call(this) || this;\n    }\n    /**\n     * Static instance of SpeechTranslationConfig returned by passing a subscription key and service region.\n     * @member SpeechTranslationConfig.fromSubscription\n     * @function\n     * @public\n     * @param {string} subscriptionKey - The subscription key.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechTranslationConfig} The speech translation config.\n     */\n    SpeechTranslationConfig.fromSubscription = function (subscriptionKey, region) {\n        Contracts_1.Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\n        Contracts_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        var ret = new SpeechTranslationConfigImpl();\n        ret.properties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        ret.properties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Region, region);\n        return ret;\n    };\n    /**\n     * Static instance of SpeechTranslationConfig returned by passing authorization token and service region.\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\n     *       expires, the caller needs to refresh it by setting the property authorizationToken with a new\n     *       valid token. Otherwise, all the recognizers created by this SpeechTranslationConfig instance\n     *       will encounter errors during recognition.\n     * As configuration values are copied when creating a new recognizer, the new token value will not apply\n     * to recognizers that have already been created.\n     * For recognizers that have been created before, you need to set authorization token of the corresponding recognizer\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\n     * @member SpeechTranslationConfig.fromAuthorizationToken\n     * @function\n     * @public\n     * @param {string} authorizationToken - The authorization token.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechTranslationConfig} The speech translation config.\n     */\n    SpeechTranslationConfig.fromAuthorizationToken = function (authorizationToken, region) {\n        Contracts_1.Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\n        Contracts_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        var ret = new SpeechTranslationConfigImpl();\n        ret.properties.setProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\n        ret.properties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Region, region);\n        return ret;\n    };\n    /**\n     * Creates an instance of the speech translation config with specified endpoint and subscription key.\n     * This method is intended only for users who use a non-standard service endpoint or paramters.\n     * Note: The query properties specified in the endpoint URL are not changed, even if they are\n     *       set by any other APIs. For example, if language is defined in the uri as query parameter\n     *       \"language=de-DE\", and also set by the speechRecognitionLanguage property, the language\n     *       setting in uri takes precedence, and the effective language is \"de-DE\".\n     * Only the properties that are not specified in the endpoint URL can be set by other APIs.\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\n     *       fromEndpoint method, and then set authorizationToken=\"token\" on the created SpeechConfig instance to\n     *       use the authorization token.\n     * @member SpeechTranslationConfig.fromEndpoint\n     * @function\n     * @public\n     * @param {URL} endpoint - The service endpoint to connect to.\n     * @param {string} subscriptionKey - The subscription key.\n     * @returns {SpeechTranslationConfig} A speech config instance.\n     */\n    SpeechTranslationConfig.fromEndpoint = function (endpoint, subscriptionKey) {\n        Contracts_1.Contracts.throwIfNull(endpoint, \"endpoint\");\n        Contracts_1.Contracts.throwIfNull(subscriptionKey, \"subscriptionKey\");\n        var ret = new SpeechTranslationConfigImpl();\n        ret.properties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Endpoint, endpoint.href);\n        ret.properties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        return ret;\n    };\n    return SpeechTranslationConfig;\n}(Exports_2.SpeechConfig));\nexports.SpeechTranslationConfig = SpeechTranslationConfig;\n/**\n * @private\n * @class SpeechTranslationConfigImpl\n */\n// tslint:disable-next-line:max-classes-per-file\nvar SpeechTranslationConfigImpl = /** @class */ (function (_super) {\n    __extends(SpeechTranslationConfigImpl, _super);\n    function SpeechTranslationConfigImpl() {\n        var _this = _super.call(this) || this;\n        _this.privSpeechProperties = new Exports_2.PropertyCollection();\n        _this.outputFormat = Exports_2.OutputFormat.Simple;\n        return _this;\n    }\n    Object.defineProperty(SpeechTranslationConfigImpl.prototype, \"authorizationToken\", {\n        /**\n         * Gets/Sets the authorization token.\n         * If this is set, subscription key is ignored.\n         * User needs to make sure the provided authorization token is valid and not expired.\n         * @member SpeechTranslationConfigImpl.prototype.authorizationToken\n         * @function\n         * @public\n         * @param {string} value - The authorization token.\n         */\n        set: function (value) {\n            Contracts_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n            this.privSpeechProperties.setProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechTranslationConfigImpl.prototype, \"speechRecognitionLanguage\", {\n        /**\n         * Gets/Sets the speech recognition language.\n         * @member SpeechTranslationConfigImpl.prototype.speechRecognitionLanguage\n         * @function\n         * @public\n         * @param {string} value - The authorization token.\n         */\n        set: function (value) {\n            Contracts_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n            this.privSpeechProperties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechTranslationConfigImpl.prototype, \"subscriptionKey\", {\n        /**\n         * @member SpeechTranslationConfigImpl.prototype.subscriptionKey\n         * @function\n         * @public\n         */\n        get: function () {\n            return this.privSpeechProperties.getProperty(Exports_2.PropertyId[Exports_2.PropertyId.SpeechServiceConnection_Key]);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechTranslationConfigImpl.prototype, \"outputFormat\", {\n        /**\n         * Gets the output format\n         * @member SpeechTranslationConfigImpl.prototype.outputFormat\n         * @function\n         * @public\n         */\n        get: function () {\n            return Exports_2.OutputFormat[this.privSpeechProperties.getProperty(Exports_1.OutputFormatPropertyName, undefined)];\n        },\n        /**\n         * Gets/Sets the output format\n         * @member SpeechTranslationConfigImpl.prototype.outputFormat\n         * @function\n         * @public\n         */\n        set: function (value) {\n            this.privSpeechProperties.setProperty(Exports_1.OutputFormatPropertyName, Exports_2.OutputFormat[value]);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechTranslationConfigImpl.prototype, \"endpointId\", {\n        /**\n         * Gets the endpoint id.\n         * @member SpeechTranslationConfigImpl.prototype.endpointId\n         * @function\n         * @public\n         */\n        get: function () {\n            return this.privSpeechProperties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_EndpointId);\n        },\n        /**\n         * Gets/Sets the endpoint id.\n         * @member SpeechTranslationConfigImpl.prototype.endpointId\n         * @function\n         * @public\n         */\n        set: function (value) {\n            this.privSpeechProperties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Endpoint, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Add a (text) target language to translate into.\n     * @member SpeechTranslationConfigImpl.prototype.addTargetLanguage\n     * @function\n     * @public\n     * @param {string} value - The language such as de-DE\n     */\n    SpeechTranslationConfigImpl.prototype.addTargetLanguage = function (value) {\n        Contracts_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        var languages = this.targetLanguages;\n        languages.push(value);\n        this.privSpeechProperties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\n    };\n    Object.defineProperty(SpeechTranslationConfigImpl.prototype, \"targetLanguages\", {\n        /**\n         * Gets the (text) target language to translate into.\n         * @member SpeechTranslationConfigImpl.prototype.targetLanguages\n         * @function\n         * @public\n         * @param {string} value - The language such as de-DE\n         */\n        get: function () {\n            if (this.privSpeechProperties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\n                return this.privSpeechProperties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\n            }\n            else {\n                return [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechTranslationConfigImpl.prototype, \"voiceName\", {\n        /**\n         * Gets the voice name.\n         * @member SpeechTranslationConfigImpl.prototype.voiceName\n         * @function\n         * @public\n         */\n        get: function () {\n            return this.getProperty(Exports_2.PropertyId[Exports_2.PropertyId.SpeechServiceConnection_TranslationVoice]);\n        },\n        /**\n         * Gets/Sets the voice of the translated language, enable voice synthesis output.\n         * @member SpeechTranslationConfigImpl.prototype.voiceName\n         * @function\n         * @public\n         * @param {string} value - The name of the voice.\n         */\n        set: function (value) {\n            Contracts_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n            this.privSpeechProperties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_TranslationVoice, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechTranslationConfigImpl.prototype, \"region\", {\n        /**\n         * Provides the region.\n         * @member SpeechTranslationConfigImpl.prototype.region\n         * @function\n         * @public\n         * @returns {string} The region.\n         */\n        get: function () {\n            return this.privSpeechProperties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_Region);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets an arbitrary property value.\n     * @member SpeechTranslationConfigImpl.prototype.getProperty\n     * @function\n     * @public\n     * @param {string} name - The name of the property.\n     * @param {string} def - The default value of the property in case it is not set.\n     * @returns {string} The value of the property.\n     */\n    SpeechTranslationConfigImpl.prototype.getProperty = function (name, def) {\n        return this.privSpeechProperties.getProperty(name, def);\n    };\n    /**\n     * Gets/Sets an arbitrary property value.\n     * @member SpeechTranslationConfigImpl.prototype.setProperty\n     * @function\n     * @public\n     * @param {string} name - The name of the property.\n     * @param {string} value - The value of the property.\n     */\n    SpeechTranslationConfigImpl.prototype.setProperty = function (name, value) {\n        this.privSpeechProperties.setProperty(name, value);\n    };\n    Object.defineProperty(SpeechTranslationConfigImpl.prototype, \"properties\", {\n        /**\n         * Provides access to custom properties.\n         * @member SpeechTranslationConfigImpl.prototype.properties\n         * @function\n         * @public\n         * @returns {PropertyCollection} The properties.\n         */\n        get: function () {\n            return this.privSpeechProperties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Dispose of associated resources.\n     * @member SpeechTranslationConfigImpl.prototype.close\n     * @function\n     * @public\n     */\n    SpeechTranslationConfigImpl.prototype.close = function () {\n        return;\n    };\n    return SpeechTranslationConfigImpl;\n}(SpeechTranslationConfig));\nexports.SpeechTranslationConfigImpl = SpeechTranslationConfigImpl;\n\n//# sourceMappingURL=SpeechTranslationConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PlatformEvent_1 = require(\"./PlatformEvent\");\nvar ConnectionEvent = /** @class */ (function (_super) {\n    __extends(ConnectionEvent, _super);\n    function ConnectionEvent(eventName, connectionId, eventType) {\n        if (eventType === void 0) { eventType = PlatformEvent_1.EventType.Info; }\n        var _this = _super.call(this, eventName, eventType) || this;\n        _this.privConnectionId = connectionId;\n        return _this;\n    }\n    Object.defineProperty(ConnectionEvent.prototype, \"connectionId\", {\n        get: function () {\n            return this.privConnectionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ConnectionEvent;\n}(PlatformEvent_1.PlatformEvent));\nexports.ConnectionEvent = ConnectionEvent;\n// tslint:disable-next-line:max-classes-per-file\nvar ConnectionStartEvent = /** @class */ (function (_super) {\n    __extends(ConnectionStartEvent, _super);\n    function ConnectionStartEvent(connectionId, uri, headers) {\n        var _this = _super.call(this, \"ConnectionStartEvent\", connectionId) || this;\n        _this.privUri = uri;\n        _this.privHeaders = headers;\n        return _this;\n    }\n    Object.defineProperty(ConnectionStartEvent.prototype, \"uri\", {\n        get: function () {\n            return this.privUri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectionStartEvent.prototype, \"headers\", {\n        get: function () {\n            return this.privHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ConnectionStartEvent;\n}(ConnectionEvent));\nexports.ConnectionStartEvent = ConnectionStartEvent;\n// tslint:disable-next-line:max-classes-per-file\nvar ConnectionEstablishedEvent = /** @class */ (function (_super) {\n    __extends(ConnectionEstablishedEvent, _super);\n    function ConnectionEstablishedEvent(connectionId, metadata) {\n        return _super.call(this, \"ConnectionEstablishedEvent\", connectionId) || this;\n    }\n    return ConnectionEstablishedEvent;\n}(ConnectionEvent));\nexports.ConnectionEstablishedEvent = ConnectionEstablishedEvent;\n// tslint:disable-next-line:max-classes-per-file\nvar ConnectionClosedEvent = /** @class */ (function (_super) {\n    __extends(ConnectionClosedEvent, _super);\n    function ConnectionClosedEvent(connectionId, statusCode, reason) {\n        var _this = _super.call(this, \"ConnectionClosedEvent\", connectionId, PlatformEvent_1.EventType.Debug) || this;\n        _this.privRreason = reason;\n        _this.privStatusCode = statusCode;\n        return _this;\n    }\n    Object.defineProperty(ConnectionClosedEvent.prototype, \"reason\", {\n        get: function () {\n            return this.privRreason;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectionClosedEvent.prototype, \"statusCode\", {\n        get: function () {\n            return this.privStatusCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ConnectionClosedEvent;\n}(ConnectionEvent));\nexports.ConnectionClosedEvent = ConnectionClosedEvent;\n// tslint:disable-next-line:max-classes-per-file\nvar ConnectionEstablishErrorEvent = /** @class */ (function (_super) {\n    __extends(ConnectionEstablishErrorEvent, _super);\n    function ConnectionEstablishErrorEvent(connectionId, statuscode, reason) {\n        var _this = _super.call(this, \"ConnectionEstablishErrorEvent\", connectionId, PlatformEvent_1.EventType.Error) || this;\n        _this.privStatusCode = statuscode;\n        _this.privReason = reason;\n        return _this;\n    }\n    Object.defineProperty(ConnectionEstablishErrorEvent.prototype, \"reason\", {\n        get: function () {\n            return this.privReason;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectionEstablishErrorEvent.prototype, \"statusCode\", {\n        get: function () {\n            return this.privStatusCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ConnectionEstablishErrorEvent;\n}(ConnectionEvent));\nexports.ConnectionEstablishErrorEvent = ConnectionEstablishErrorEvent;\n// tslint:disable-next-line:max-classes-per-file\nvar ConnectionMessageReceivedEvent = /** @class */ (function (_super) {\n    __extends(ConnectionMessageReceivedEvent, _super);\n    function ConnectionMessageReceivedEvent(connectionId, networkReceivedTimeISO, message) {\n        var _this = _super.call(this, \"ConnectionMessageReceivedEvent\", connectionId) || this;\n        _this.privNetworkReceivedTime = networkReceivedTimeISO;\n        _this.privMessage = message;\n        return _this;\n    }\n    Object.defineProperty(ConnectionMessageReceivedEvent.prototype, \"networkReceivedTime\", {\n        get: function () {\n            return this.privNetworkReceivedTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectionMessageReceivedEvent.prototype, \"message\", {\n        get: function () {\n            return this.privMessage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ConnectionMessageReceivedEvent;\n}(ConnectionEvent));\nexports.ConnectionMessageReceivedEvent = ConnectionMessageReceivedEvent;\n// tslint:disable-next-line:max-classes-per-file\nvar ConnectionMessageSentEvent = /** @class */ (function (_super) {\n    __extends(ConnectionMessageSentEvent, _super);\n    function ConnectionMessageSentEvent(connectionId, networkSentTimeISO, message) {\n        var _this = _super.call(this, \"ConnectionMessageSentEvent\", connectionId) || this;\n        _this.privNetworkSentTime = networkSentTimeISO;\n        _this.privMessage = message;\n        return _this;\n    }\n    Object.defineProperty(ConnectionMessageSentEvent.prototype, \"networkSentTime\", {\n        get: function () {\n            return this.privNetworkSentTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectionMessageSentEvent.prototype, \"message\", {\n        get: function () {\n            return this.privMessage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ConnectionMessageSentEvent;\n}(ConnectionEvent));\nexports.ConnectionMessageSentEvent = ConnectionMessageSentEvent;\n\n//# sourceMappingURL=ConnectionEvents.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common.speech/Exports\");\nvar Contracts_1 = require(\"./Contracts\");\nvar Exports_2 = require(\"./Exports\");\n/**\n * Speech configuration.\n * @class SpeechConfig\n */\nvar SpeechConfig = /** @class */ (function () {\n    /**\n     * Creates and initializes an instance.\n     * @constructor\n     */\n    function SpeechConfig() {\n    }\n    /**\n     * Static instance of SpeechConfig returned by passing subscriptionKey and service region.\n     * Note: Please use your LanguageUnderstanding subscription key in case you want to use the Intent recognizer.\n     * @member SpeechConfig.fromSubscription\n     * @function\n     * @public\n     * @param {string} subscriptionKey - The subscription key.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechConfig} The speech factory\n     */\n    SpeechConfig.fromSubscription = function (subscriptionKey, region) {\n        Contracts_1.Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\n        Contracts_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        var speechImpl = new SpeechConfigImpl();\n        speechImpl.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Region, region);\n        speechImpl.setProperty(Exports_2.PropertyId.SpeechServiceConnection_IntentRegion, region);\n        speechImpl.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        return speechImpl;\n    };\n    /**\n     * Creates an instance of the speech config with specified endpoint and subscription key.\n     * This method is intended only for users who use a non-standard service endpoint or parameters.\n     * Note: Please use your LanguageUnderstanding subscription key in case you want to use the Intent recognizer.\n     * Note: The query parameters specified in the endpoint URL are not changed, even if they are set by any other APIs.\n     * For example, if language is defined in the uri as query parameter \"language=de-DE\", and also set by\n     *              SpeechConfig.speechRecognitionLanguage = \"en-US\", the language setting in uri takes precedence,\n     *              and the effective language is \"de-DE\". Only the parameters that are not specified in the\n     *              endpoint URL can be set by other APIs.\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\n     *       fromEndpoint method, and then set authorizationToken=\"token\" on the created SpeechConfig instance to\n     *       use the authorization token.\n     * @member SpeechConfig.fromEndpoint\n     * @function\n     * @public\n     * @param {URL} endpoint - The service endpoint to connect to.\n     * @param {string} subscriptionKey - The subscription key.\n     * @returns {SpeechConfig} A speech factory instance.\n     */\n    SpeechConfig.fromEndpoint = function (endpoint, subscriptionKey) {\n        Contracts_1.Contracts.throwIfNull(endpoint, \"endpoint\");\n        Contracts_1.Contracts.throwIfNull(subscriptionKey, \"subscriptionKey\");\n        var speechImpl = new SpeechConfigImpl();\n        speechImpl.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Endpoint, endpoint.href);\n        speechImpl.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        return speechImpl;\n    };\n    /**\n     * Creates an instance of the speech factory with specified initial authorization token and region.\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\n     *       expires, the caller needs to refresh it by calling this setter with a new valid token.\n     * Note: Please use a token derived from your LanguageUnderstanding subscription key in case you want\n     *       to use the Intent recognizer. As configuration values are copied when creating a new recognizer,\n     *       the new token value will not apply to recognizers that have already been created. For recognizers\n     *       that have been created before, you need to set authorization token of the corresponding recognizer\n     *       to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\n     * @member SpeechConfig.fromAuthorizationToken\n     * @function\n     * @public\n     * @param {string} authorizationToken - The initial authorization token.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechConfig} A speech factory instance.\n     */\n    SpeechConfig.fromAuthorizationToken = function (authorizationToken, region) {\n        Contracts_1.Contracts.throwIfNull(authorizationToken, \"authorizationToken\");\n        Contracts_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        var speechImpl = new SpeechConfigImpl();\n        speechImpl.setProperty(Exports_2.PropertyId.SpeechServiceConnection_Region, region);\n        speechImpl.setProperty(Exports_2.PropertyId.SpeechServiceConnection_IntentRegion, region);\n        speechImpl.authorizationToken = authorizationToken;\n        return speechImpl;\n    };\n    /**\n     * Closes the configuration.\n     * @member SpeechConfig.prototype.close\n     * @function\n     * @public\n     */\n    /* tslint:disable:no-empty */\n    SpeechConfig.prototype.close = function () { };\n    return SpeechConfig;\n}());\nexports.SpeechConfig = SpeechConfig;\n/**\n * @private\n * @class SpeechConfigImpl\n */\n// tslint:disable-next-line:max-classes-per-file\nvar SpeechConfigImpl = /** @class */ (function (_super) {\n    __extends(SpeechConfigImpl, _super);\n    function SpeechConfigImpl() {\n        var _this = _super.call(this) || this;\n        _this.privProperties = new Exports_2.PropertyCollection();\n        _this.speechRecognitionLanguage = \"en-US\"; // Should we have a default?\n        _this.outputFormat = Exports_2.OutputFormat.Simple;\n        return _this;\n    }\n    Object.defineProperty(SpeechConfigImpl.prototype, \"properties\", {\n        get: function () {\n            return this.privProperties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechConfigImpl.prototype, \"endPoint\", {\n        get: function () {\n            return new URL(this.privProperties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_Endpoint));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechConfigImpl.prototype, \"subscriptionKey\", {\n        get: function () {\n            return this.privProperties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_Key);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechConfigImpl.prototype, \"region\", {\n        get: function () {\n            return this.privProperties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_Region);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechConfigImpl.prototype, \"authorizationToken\", {\n        get: function () {\n            return this.privProperties.getProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token);\n        },\n        set: function (value) {\n            this.privProperties.setProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechConfigImpl.prototype, \"speechRecognitionLanguage\", {\n        get: function () {\n            return this.privProperties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage);\n        },\n        set: function (value) {\n            this.privProperties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechConfigImpl.prototype, \"outputFormat\", {\n        get: function () {\n            return Exports_2.OutputFormat[this.privProperties.getProperty(Exports_1.OutputFormatPropertyName, undefined)];\n        },\n        set: function (value) {\n            this.privProperties.setProperty(Exports_1.OutputFormatPropertyName, Exports_2.OutputFormat[value]);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechConfigImpl.prototype, \"endpointId\", {\n        get: function () {\n            return this.privProperties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_EndpointId);\n        },\n        set: function (value) {\n            this.privProperties.setProperty(Exports_2.PropertyId.SpeechServiceConnection_EndpointId, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SpeechConfigImpl.prototype.setProperty = function (name, value) {\n        Contracts_1.Contracts.throwIfNull(value, \"value\");\n        this.privProperties.setProperty(name, value);\n    };\n    SpeechConfigImpl.prototype.getProperty = function (name, def) {\n        return this.privProperties.getProperty(name, def);\n    };\n    SpeechConfigImpl.prototype.clone = function () {\n        var ret = new SpeechConfigImpl();\n        ret.privProperties = this.privProperties.clone();\n        return ret;\n    };\n    return SpeechConfigImpl;\n}(SpeechConfig));\nexports.SpeechConfigImpl = SpeechConfigImpl;\n\n//# sourceMappingURL=SpeechConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Defines the possible reasons a recognition result might not be recognized.\n * @class NoMatchReason\n */\nvar NoMatchReason;\n(function (NoMatchReason) {\n    /**\n     * Indicates that speech was detected, but not recognized.\n     * @member NoMatchReason.NotRecognized\n     */\n    NoMatchReason[NoMatchReason[\"NotRecognized\"] = 0] = \"NotRecognized\";\n    /**\n     * Indicates that the start of the audio stream contained only silence,\n     * and the service timed out waiting for speech.\n     * @member NoMatchReason.InitialSilenceTimeout\n     */\n    NoMatchReason[NoMatchReason[\"InitialSilenceTimeout\"] = 1] = \"InitialSilenceTimeout\";\n    /**\n     * Indicates that the start of the audio stream contained only noise,\n     * and the service timed out waiting for speech.\n     * @member NoMatchReason.InitialBabbleTimeout\n     */\n    NoMatchReason[NoMatchReason[\"InitialBabbleTimeout\"] = 2] = \"InitialBabbleTimeout\";\n})(NoMatchReason = exports.NoMatchReason || (exports.NoMatchReason = {}));\n\n//# sourceMappingURL=NoMatchReason.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Defines result of speech recognition.\n * @class RecognitionResult\n */\nvar RecognitionResult = /** @class */ (function () {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    function RecognitionResult(resultId, reason, text, duration, offset, errorDetails, json, properties) {\n        this.privResultId = resultId;\n        this.privReason = reason;\n        this.privText = text;\n        this.privDuration = duration;\n        this.privOffset = offset;\n        this.privErrorDetails = errorDetails;\n        this.privJson = json;\n        this.privProperties = properties;\n    }\n    Object.defineProperty(RecognitionResult.prototype, \"resultId\", {\n        /**\n         * Specifies the result identifier.\n         * @member RecognitionResult.prototype.resultId\n         * @function\n         * @public\n         * @returns {string} Specifies the result identifier.\n         */\n        get: function () {\n            return this.privResultId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RecognitionResult.prototype, \"reason\", {\n        /**\n         * Specifies status of the result.\n         * @member RecognitionResult.prototype.reason\n         * @function\n         * @public\n         * @returns {ResultReason} Specifies status of the result.\n         */\n        get: function () {\n            return this.privReason;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RecognitionResult.prototype, \"text\", {\n        /**\n         * Presents the recognized text in the result.\n         * @member RecognitionResult.prototype.text\n         * @function\n         * @public\n         * @returns {string} Presents the recognized text in the result.\n         */\n        get: function () {\n            return this.privText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RecognitionResult.prototype, \"duration\", {\n        /**\n         * Duration of recognized speech in 100 nano second incements.\n         * @member RecognitionResult.prototype.duration\n         * @function\n         * @public\n         * @returns {number} Duration of recognized speech in 100 nano second incements.\n         */\n        get: function () {\n            return this.privDuration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RecognitionResult.prototype, \"offset\", {\n        /**\n         * Offset of recognized speech in 100 nano second incements.\n         * @member RecognitionResult.prototype.offset\n         * @function\n         * @public\n         * @returns {number} Offset of recognized speech in 100 nano second incements.\n         */\n        get: function () {\n            return this.privOffset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RecognitionResult.prototype, \"errorDetails\", {\n        /**\n         * In case of an unsuccessful recognition, provides details of the occurred error.\n         * @member RecognitionResult.prototype.errorDetails\n         * @function\n         * @public\n         * @returns {string} a brief description of an error.\n         */\n        get: function () {\n            return this.privErrorDetails;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RecognitionResult.prototype, \"json\", {\n        /**\n         * A string containing Json serialized recognition result as it was received from the service.\n         * @member RecognitionResult.prototype.json\n         * @function\n         * @private\n         * @returns {string} Json serialized representation of the result.\n         */\n        get: function () {\n            return this.privJson;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RecognitionResult.prototype, \"properties\", {\n        /**\n         *  The set of properties exposed in the result.\n         * @member RecognitionResult.prototype.properties\n         * @function\n         * @public\n         * @returns {PropertyCollection} The set of properties exposed in the result.\n         */\n        get: function () {\n            return this.privProperties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RecognitionResult;\n}());\nexports.RecognitionResult = RecognitionResult;\n\n//# sourceMappingURL=RecognitionResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common/Exports\");\nvar PathHeaderName = \"path\";\nvar ContentTypeHeaderName = \"content-type\";\nvar RequestIdHeaderName = \"x-requestid\";\nvar RequestTimestampHeaderName = \"x-timestamp\";\nvar SpeechConnectionMessage = /** @class */ (function (_super) {\n    __extends(SpeechConnectionMessage, _super);\n    function SpeechConnectionMessage(messageType, path, requestId, contentType, body, additionalHeaders, id) {\n        var _this = this;\n        if (!path) {\n            throw new Exports_1.ArgumentNullError(\"path\");\n        }\n        if (!requestId) {\n            throw new Exports_1.ArgumentNullError(\"requestId\");\n        }\n        var headers = {};\n        headers[PathHeaderName] = path;\n        headers[RequestIdHeaderName] = requestId;\n        headers[RequestTimestampHeaderName] = new Date().toISOString();\n        if (contentType) {\n            headers[ContentTypeHeaderName] = contentType;\n        }\n        if (additionalHeaders) {\n            for (var headerName in additionalHeaders) {\n                if (headerName) {\n                    headers[headerName] = additionalHeaders[headerName];\n                }\n            }\n        }\n        if (id) {\n            _this = _super.call(this, messageType, body, headers, id) || this;\n        }\n        else {\n            _this = _super.call(this, messageType, body, headers) || this;\n        }\n        _this.privPath = path;\n        _this.privRequestId = requestId;\n        _this.privContentType = contentType;\n        _this.privAdditionalHeaders = additionalHeaders;\n        return _this;\n    }\n    Object.defineProperty(SpeechConnectionMessage.prototype, \"path\", {\n        get: function () {\n            return this.privPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechConnectionMessage.prototype, \"requestId\", {\n        get: function () {\n            return this.privRequestId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechConnectionMessage.prototype, \"contentType\", {\n        get: function () {\n            return this.privContentType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpeechConnectionMessage.prototype, \"additionalHeaders\", {\n        get: function () {\n            return this.privAdditionalHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SpeechConnectionMessage.fromConnectionMessage = function (message) {\n        var path = null;\n        var requestId = null;\n        var contentType = null;\n        var requestTimestamp = null;\n        var additionalHeaders = {};\n        if (message.headers) {\n            for (var headerName in message.headers) {\n                if (headerName) {\n                    if (headerName.toLowerCase() === PathHeaderName.toLowerCase()) {\n                        path = message.headers[headerName];\n                    }\n                    else if (headerName.toLowerCase() === RequestIdHeaderName.toLowerCase()) {\n                        requestId = message.headers[headerName];\n                    }\n                    else if (headerName.toLowerCase() === RequestTimestampHeaderName.toLowerCase()) {\n                        requestTimestamp = message.headers[headerName];\n                    }\n                    else if (headerName.toLowerCase() === ContentTypeHeaderName.toLowerCase()) {\n                        contentType = message.headers[headerName];\n                    }\n                    else {\n                        additionalHeaders[headerName] = message.headers[headerName];\n                    }\n                }\n            }\n        }\n        return new SpeechConnectionMessage(message.messageType, path, requestId, contentType, message.body, additionalHeaders, message.id);\n    };\n    return SpeechConnectionMessage;\n}(Exports_1.ConnectionMessage));\nexports.SpeechConnectionMessage = SpeechConnectionMessage;\n\n//# sourceMappingURL=SpeechConnectionMessage.Internal.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Error_1 = require(\"./Error\");\nvar Guid_1 = require(\"./Guid\");\nvar Queue_1 = require(\"./Queue\");\nvar Stream = /** @class */ (function () {\n    function Stream(streamId) {\n        var _this = this;\n        this.privReaderIdCounter = 1;\n        this.privIsEnded = false;\n        this.write = function (buffer2) {\n            _this.throwIfClosed();\n            _this.writeStreamChunk({\n                buffer: buffer2,\n                isEnd: false,\n            });\n        };\n        this.getReader = function () {\n            var readerId = _this.privReaderIdCounter;\n            _this.privReaderIdCounter++;\n            var readerQueue = new Queue_1.Queue();\n            var currentLength = _this.privStreambuffer.length;\n            _this.privReaderQueues[readerId] = readerQueue;\n            for (var i = 0; i < currentLength; i++) {\n                readerQueue.enqueue(_this.privStreambuffer[i]);\n            }\n            return new StreamReader(_this.privId, readerQueue, function () {\n                delete _this.privReaderQueues[readerId];\n            });\n        };\n        this.close = function () {\n            if (!_this.privIsEnded) {\n                _this.writeStreamChunk({\n                    buffer: null,\n                    isEnd: true,\n                });\n                _this.privIsEnded = true;\n            }\n        };\n        this.writeStreamChunk = function (streamChunk) {\n            _this.throwIfClosed();\n            _this.privStreambuffer.push(streamChunk);\n            for (var readerId in _this.privReaderQueues) {\n                if (!_this.privReaderQueues[readerId].isDisposed()) {\n                    try {\n                        _this.privReaderQueues[readerId].enqueue(streamChunk);\n                    }\n                    catch (e) {\n                        // Do nothing\n                    }\n                }\n            }\n        };\n        this.throwIfClosed = function () {\n            if (_this.privIsEnded) {\n                throw new Error_1.InvalidOperationError(\"Stream closed\");\n            }\n        };\n        this.privId = streamId ? streamId : Guid_1.createNoDashGuid();\n        this.privStreambuffer = [];\n        this.privReaderQueues = {};\n    }\n    Object.defineProperty(Stream.prototype, \"isClosed\", {\n        get: function () {\n            return this.privIsEnded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"id\", {\n        get: function () {\n            return this.privId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Stream;\n}());\nexports.Stream = Stream;\n// tslint:disable-next-line:max-classes-per-file\nvar StreamReader = /** @class */ (function () {\n    function StreamReader(streamId, readerQueue, onClose) {\n        var _this = this;\n        this.privIsClosed = false;\n        this.read = function () {\n            if (_this.isClosed) {\n                throw new Error_1.InvalidOperationError(\"StreamReader closed\");\n            }\n            return _this.privReaderQueue\n                .dequeue()\n                .onSuccessContinueWith(function (streamChunk) {\n                if (streamChunk.isEnd) {\n                    _this.privReaderQueue.dispose(\"End of stream reached\");\n                }\n                return streamChunk;\n            });\n        };\n        this.close = function () {\n            if (!_this.privIsClosed) {\n                _this.privIsClosed = true;\n                _this.privReaderQueue.dispose(\"StreamReader closed\");\n                _this.privOnClose();\n            }\n        };\n        this.privReaderQueue = readerQueue;\n        this.privOnClose = onClose;\n        this.privStreamId = streamId;\n    }\n    Object.defineProperty(StreamReader.prototype, \"isClosed\", {\n        get: function () {\n            return this.privIsClosed;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StreamReader.prototype, \"streamId\", {\n        get: function () {\n            return this.privStreamId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return StreamReader;\n}());\nexports.StreamReader = StreamReader;\n\n//# sourceMappingURL=Stream.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common/Exports\");\nvar CRLF = \"\\r\\n\";\nvar WebsocketMessageFormatter = /** @class */ (function () {\n    function WebsocketMessageFormatter() {\n        var _this = this;\n        this.toConnectionMessage = function (message) {\n            var deferral = new Exports_1.Deferred();\n            try {\n                if (message.messageType === Exports_1.MessageType.Text) {\n                    var textMessage = message.textContent;\n                    var headers = {};\n                    var body = null;\n                    if (textMessage) {\n                        var headerBodySplit = textMessage.split(\"\\r\\n\\r\\n\");\n                        if (headerBodySplit && headerBodySplit.length > 0) {\n                            headers = _this.parseHeaders(headerBodySplit[0]);\n                            if (headerBodySplit.length > 1) {\n                                body = headerBodySplit[1];\n                            }\n                        }\n                    }\n                    deferral.resolve(new Exports_1.ConnectionMessage(message.messageType, body, headers, message.id));\n                }\n                else if (message.messageType === Exports_1.MessageType.Binary) {\n                    var binaryMessage = message.binaryContent;\n                    var headers = {};\n                    var body = null;\n                    if (!binaryMessage || binaryMessage.byteLength < 2) {\n                        throw new Error(\"Invalid binary message format. Header length missing.\");\n                    }\n                    var dataView = new DataView(binaryMessage);\n                    var headerLength = dataView.getInt16(0);\n                    if (binaryMessage.byteLength < headerLength + 2) {\n                        throw new Error(\"Invalid binary message format. Header content missing.\");\n                    }\n                    var headersString = \"\";\n                    for (var i = 0; i < headerLength; i++) {\n                        headersString += String.fromCharCode((dataView).getInt8(i + 2));\n                    }\n                    headers = _this.parseHeaders(headersString);\n                    if (binaryMessage.byteLength > headerLength + 2) {\n                        body = binaryMessage.slice(2 + headerLength);\n                    }\n                    deferral.resolve(new Exports_1.ConnectionMessage(message.messageType, body, headers, message.id));\n                }\n            }\n            catch (e) {\n                deferral.reject(\"Error formatting the message. Error: \" + e);\n            }\n            return deferral.promise();\n        };\n        this.fromConnectionMessage = function (message) {\n            var deferral = new Exports_1.Deferred();\n            try {\n                if (message.messageType === Exports_1.MessageType.Text) {\n                    var payload = \"\" + _this.makeHeaders(message) + CRLF + (message.textBody ? message.textBody : \"\");\n                    deferral.resolve(new Exports_1.RawWebsocketMessage(Exports_1.MessageType.Text, payload, message.id));\n                }\n                else if (message.messageType === Exports_1.MessageType.Binary) {\n                    var headersString = _this.makeHeaders(message);\n                    var content = message.binaryBody;\n                    var headerInt8Array = new Int8Array(_this.stringToArrayBuffer(headersString));\n                    var payload = new ArrayBuffer(2 + headerInt8Array.byteLength + (content ? content.byteLength : 0));\n                    var dataView = new DataView(payload);\n                    dataView.setInt16(0, headerInt8Array.length);\n                    for (var i = 0; i < headerInt8Array.byteLength; i++) {\n                        dataView.setInt8(2 + i, headerInt8Array[i]);\n                    }\n                    if (content) {\n                        var bodyInt8Array = new Int8Array(content);\n                        for (var i = 0; i < bodyInt8Array.byteLength; i++) {\n                            dataView.setInt8(2 + headerInt8Array.byteLength + i, bodyInt8Array[i]);\n                        }\n                    }\n                    deferral.resolve(new Exports_1.RawWebsocketMessage(Exports_1.MessageType.Binary, payload, message.id));\n                }\n            }\n            catch (e) {\n                deferral.reject(\"Error formatting the message. \" + e);\n            }\n            return deferral.promise();\n        };\n        this.makeHeaders = function (message) {\n            var headersString = \"\";\n            if (message.headers) {\n                for (var header in message.headers) {\n                    if (header) {\n                        headersString += header + \": \" + message.headers[header] + CRLF;\n                    }\n                }\n            }\n            return headersString;\n        };\n        this.parseHeaders = function (headersString) {\n            var headers = {};\n            if (headersString) {\n                var headerMatches = headersString.match(/[^\\r\\n]+/g);\n                if (headers) {\n                    for (var _i = 0, headerMatches_1 = headerMatches; _i < headerMatches_1.length; _i++) {\n                        var header = headerMatches_1[_i];\n                        if (header) {\n                            var separatorIndex = header.indexOf(\":\");\n                            var headerName = separatorIndex > 0 ? header.substr(0, separatorIndex).trim().toLowerCase() : header;\n                            var headerValue = separatorIndex > 0 && header.length > (separatorIndex + 1) ?\n                                header.substr(separatorIndex + 1).trim() :\n                                \"\";\n                            headers[headerName] = headerValue;\n                        }\n                    }\n                }\n            }\n            return headers;\n        };\n        this.stringToArrayBuffer = function (str) {\n            var buffer = new ArrayBuffer(str.length);\n            var view = new DataView(buffer);\n            for (var i = 0; i < str.length; i++) {\n                view.setUint8(i, str.charCodeAt(i));\n            }\n            return buffer;\n        };\n    }\n    return WebsocketMessageFormatter;\n}());\nexports.WebsocketMessageFormatter = WebsocketMessageFormatter;\n\n//# sourceMappingURL=WebsocketMessageFormatter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AudioStreamFormat_1 = require(\"../../src/sdk/Audio/AudioStreamFormat\");\nvar Exports_1 = require(\"../common/Exports\");\nvar MicAudioSource = /** @class */ (function () {\n    function MicAudioSource(recorder, audioSourceId) {\n        var _this = this;\n        this.privStreams = {};\n        this.turnOn = function () {\n            if (_this.privInitializeDeferral) {\n                return _this.privInitializeDeferral.promise();\n            }\n            _this.privInitializeDeferral = new Exports_1.Deferred();\n            _this.createAudioContext();\n            var nav = window.navigator;\n            var getUserMedia = (nav.getUserMedia ||\n                nav.webkitGetUserMedia ||\n                nav.mozGetUserMedia ||\n                nav.msGetUserMedia);\n            if (!!nav.mediaDevices) {\n                getUserMedia = function (constraints, successCallback, errorCallback) {\n                    nav.mediaDevices\n                        .getUserMedia(constraints)\n                        .then(successCallback)\n                        .catch(errorCallback);\n                };\n            }\n            if (!getUserMedia) {\n                var errorMsg = \"Browser does not support getUserMedia.\";\n                _this.privInitializeDeferral.reject(errorMsg);\n                _this.onEvent(new Exports_1.AudioSourceErrorEvent(errorMsg, \"\")); // mic initialized error - no streamid at this point\n            }\n            else {\n                var next = function () {\n                    _this.onEvent(new Exports_1.AudioSourceInitializingEvent(_this.privId)); // no stream id\n                    getUserMedia({ audio: true, video: false }, function (mediaStream) {\n                        _this.privMediaStream = mediaStream;\n                        _this.onEvent(new Exports_1.AudioSourceReadyEvent(_this.privId));\n                        _this.privInitializeDeferral.resolve(true);\n                    }, function (error) {\n                        var errorMsg = \"Error occurred during microphone initialization: \" + error;\n                        var tmp = _this.privInitializeDeferral;\n                        // HACK: this should be handled through onError callbacks of all promises up the stack.\n                        // Unfortunately, the current implementation does not provide an easy way to reject promises\n                        // without a lot of code replication.\n                        // TODO: fix promise implementation, allow for a graceful reject chaining.\n                        _this.privInitializeDeferral = null;\n                        tmp.reject(errorMsg); // this will bubble up through the whole chain of promises,\n                        // with each new level adding extra \"Unhandled callback error\" prefix to the error message.\n                        // The following line is not guaranteed to be executed.\n                        _this.onEvent(new Exports_1.AudioSourceErrorEvent(_this.privId, errorMsg));\n                    });\n                };\n                if (_this.privContext.state === \"suspended\") {\n                    // NOTE: On iOS, the Web Audio API requires sounds to be triggered from an explicit user action.\n                    // https://github.com/WebAudio/web-audio-api/issues/790\n                    _this.privContext.resume().then(next, function (reason) {\n                        _this.privInitializeDeferral.reject(\"Failed to initialize audio context: \" + reason);\n                    });\n                }\n                else {\n                    next();\n                }\n            }\n            return _this.privInitializeDeferral.promise();\n        };\n        this.id = function () {\n            return _this.privId;\n        };\n        this.attach = function (audioNodeId) {\n            _this.onEvent(new Exports_1.AudioStreamNodeAttachingEvent(_this.privId, audioNodeId));\n            return _this.listen(audioNodeId).onSuccessContinueWith(function (streamReader) {\n                _this.onEvent(new Exports_1.AudioStreamNodeAttachedEvent(_this.privId, audioNodeId));\n                return {\n                    detach: function () {\n                        streamReader.close();\n                        delete _this.privStreams[audioNodeId];\n                        _this.onEvent(new Exports_1.AudioStreamNodeDetachedEvent(_this.privId, audioNodeId));\n                        _this.turnOff();\n                    },\n                    id: function () {\n                        return audioNodeId;\n                    },\n                    read: function () {\n                        return streamReader.read();\n                    },\n                };\n            });\n        };\n        this.detach = function (audioNodeId) {\n            if (audioNodeId && _this.privStreams[audioNodeId]) {\n                _this.privStreams[audioNodeId].close();\n                delete _this.privStreams[audioNodeId];\n                _this.onEvent(new Exports_1.AudioStreamNodeDetachedEvent(_this.privId, audioNodeId));\n            }\n        };\n        this.turnOff = function () {\n            for (var streamId in _this.privStreams) {\n                if (streamId) {\n                    var stream = _this.privStreams[streamId];\n                    if (stream) {\n                        stream.close();\n                    }\n                }\n            }\n            _this.onEvent(new Exports_1.AudioSourceOffEvent(_this.privId)); // no stream now\n            _this.privInitializeDeferral = null;\n            _this.destroyAudioContext();\n            return Exports_1.PromiseHelper.fromResult(true);\n        };\n        this.listen = function (audioNodeId) {\n            return _this.turnOn()\n                .onSuccessContinueWith(function (_) {\n                var stream = new Exports_1.Stream(audioNodeId);\n                _this.privStreams[audioNodeId] = stream;\n                try {\n                    _this.privRecorder.record(_this.privContext, _this.privMediaStream, stream);\n                }\n                catch (error) {\n                    _this.onEvent(new Exports_1.AudioStreamNodeErrorEvent(_this.privId, audioNodeId, error));\n                    throw error;\n                }\n                return stream.getReader();\n            });\n        };\n        this.onEvent = function (event) {\n            _this.privEvents.onEvent(event);\n            Exports_1.Events.instance.onEvent(event);\n        };\n        this.createAudioContext = function () {\n            if (!!_this.privContext) {\n                return;\n            }\n            // https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\n            var AudioContext = (window.AudioContext)\n                || (window.webkitAudioContext)\n                || false;\n            if (!AudioContext) {\n                throw new Error(\"Browser does not support Web Audio API (AudioContext is not available).\");\n            }\n            _this.privContext = new AudioContext();\n        };\n        this.destroyAudioContext = function () {\n            if (!_this.privContext) {\n                return;\n            }\n            _this.privRecorder.releaseMediaResources(_this.privContext);\n            // This pattern brought to you by a bug in the TypeScript compiler where it\n            // confuses the (\"close\" in this.privContext) with this.privContext always being null as the alternate.\n            // https://github.com/Microsoft/TypeScript/issues/11498\n            var hasClose = false;\n            if (\"close\" in _this.privContext) {\n                hasClose = true;\n            }\n            if (hasClose) {\n                _this.privContext.close();\n                _this.privContext = null;\n            }\n            else if (null !== _this.privContext && _this.privContext.state === \"running\") {\n                // Suspend actually takes a callback, but analogous to the\n                // resume method, it'll be only fired if suspend is called\n                // in a direct response to a user action. The later is not always\n                // the case, as TurnOff is also called, when we receive an\n                // end-of-speech message from the service. So, doing a best effort\n                // fire-and-forget here.\n                _this.privContext.suspend();\n            }\n        };\n        this.privId = audioSourceId ? audioSourceId : Exports_1.createNoDashGuid();\n        this.privEvents = new Exports_1.EventSource();\n        this.privRecorder = recorder;\n    }\n    Object.defineProperty(MicAudioSource.prototype, \"format\", {\n        get: function () {\n            return MicAudioSource.AUDIOFORMAT;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MicAudioSource.prototype, \"events\", {\n        get: function () {\n            return this.privEvents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MicAudioSource.AUDIOFORMAT = AudioStreamFormat_1.AudioStreamFormat.getDefaultInputFormat();\n    return MicAudioSource;\n}());\nexports.MicAudioSource = MicAudioSource;\n\n//# sourceMappingURL=MicAudioSource.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common.browser/Exports\");\nvar Exports_2 = require(\"../sdk/Exports\");\nvar Exports_3 = require(\"./Exports\");\nvar TestHooksParamName = \"testhooks\";\nvar ConnectionIdHeader = \"X-ConnectionId\";\nvar IntentConnectionFactory = /** @class */ (function () {\n    function IntentConnectionFactory() {\n        var _this = this;\n        this.create = function (config, authInfo, connectionId) {\n            var endpoint = config.parameters.getProperty(Exports_2.PropertyId.SpeechServiceConnection_Endpoint);\n            if (!endpoint) {\n                var region = config.parameters.getProperty(Exports_2.PropertyId.SpeechServiceConnection_IntentRegion);\n                endpoint = \"wss://speech.platform.bing.com/speech/\" + _this.getSpeechRegionFromIntentRegion(region) + \"/recognition/interactive/cognitiveservices/v1\";\n            }\n            var queryParams = {\n                format: \"simple\",\n                language: config.parameters.getProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage),\n            };\n            var headers = {};\n            headers[authInfo.headerName] = authInfo.token;\n            headers[ConnectionIdHeader] = connectionId;\n            return new Exports_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_3.WebsocketMessageFormatter(), connectionId);\n        };\n    }\n    IntentConnectionFactory.prototype.getSpeechRegionFromIntentRegion = function (intentRegion) {\n        switch (intentRegion) {\n            case \"West US\":\n            case \"US West\":\n            case \"westus\":\n                return \"uswest\";\n            case \"West US 2\":\n            case \"US West 2\":\n            case \"westus2\":\n                return \"uswest2\";\n            case \"South Central US\":\n            case \"US South Central\":\n            case \"southcentralus\":\n                return \"ussouthcentral\";\n            case \"West Central US\":\n            case \"US West Central\":\n            case \"westcentralus\":\n                return \"uswestcentral\";\n            case \"East US\":\n            case \"US East\":\n            case \"eastus\":\n                return \"useast\";\n            case \"East US 2\":\n            case \"US East 2\":\n            case \"eastus2\":\n                return \"useast2\";\n            case \"West Europe\":\n            case \"Europe West\":\n            case \"westeurope\":\n                return \"europewest\";\n            case \"North Europe\":\n            case \"Europe North\":\n            case \"northeurope\":\n                return \"europenorth\";\n            case \"Brazil South\":\n            case \"South Brazil\":\n            case \"southbrazil\":\n                return \"brazilsouth\";\n            case \"Australia East\":\n            case \"East Australia\":\n            case \"eastaustralia\":\n                return \"australiaeast\";\n            case \"Southeast Asia\":\n            case \"Asia Southeast\":\n            case \"southeastasia\":\n                return \"asiasoutheast\";\n            case \"East Asia\":\n            case \"Asia East\":\n            case \"eastasia\":\n                return \"asiaeast\";\n            default:\n                return intentRegion;\n        }\n    };\n    return IntentConnectionFactory;\n}());\nexports.IntentConnectionFactory = IntentConnectionFactory;\n\n//# sourceMappingURL=IntentConnectionFactory.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * An abstract base class that defines callback methods (read() and close()) for\n * custom audio input streams).\n * @class PullAudioInputStreamCallback\n */\nvar PullAudioInputStreamCallback = /** @class */ (function () {\n    function PullAudioInputStreamCallback() {\n    }\n    return PullAudioInputStreamCallback;\n}());\nexports.PullAudioInputStreamCallback = PullAudioInputStreamCallback;\n\n//# sourceMappingURL=PullAudioInputStreamCallback.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"./Exports\");\n/**\n * Intent recognition result event arguments.\n * @class\n */\nvar IntentRecognitionEventArgs = /** @class */ (function (_super) {\n    __extends(IntentRecognitionEventArgs, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param result - The result of the intent recognition.\n     * @param offset - The offset.\n     * @param sessionId - The session id.\n     */\n    function IntentRecognitionEventArgs(result, offset, sessionId) {\n        var _this = _super.call(this, offset, sessionId) || this;\n        _this.privResult = result;\n        return _this;\n    }\n    Object.defineProperty(IntentRecognitionEventArgs.prototype, \"result\", {\n        /**\n         * Represents the intent recognition result.\n         * @member IntentRecognitionEventArgs.prototype.result\n         * @function\n         * @public\n         * @returns {IntentRecognitionResult} Represents the intent recognition result.\n         */\n        get: function () {\n            return this.privResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IntentRecognitionEventArgs;\n}(Exports_1.RecognitionEventArgs));\nexports.IntentRecognitionEventArgs = IntentRecognitionEventArgs;\n\n//# sourceMappingURL=IntentRecognitionEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common/Exports\");\nvar RecognitionEvents_1 = require(\"./RecognitionEvents\");\nvar ServiceTelemetryListener_Internal_1 = require(\"./ServiceTelemetryListener.Internal\");\nvar RequestSession = /** @class */ (function () {\n    function RequestSession(audioSourceId) {\n        var _this = this;\n        this.privIsDisposed = false;\n        this.privDetachables = new Array();\n        this.privIsAudioNodeDetached = false;\n        this.privIsRecognizing = false;\n        this.privIsSpeechEnded = false;\n        this.privTurnStartAudioOffset = 0;\n        this.privLastRecoOffset = 0;\n        this.onAudioSourceAttachCompleted = function (audioNode, isError, error) {\n            _this.privAudioNode = audioNode;\n            if (isError) {\n                _this.onComplete();\n            }\n            else {\n                _this.onEvent(new RecognitionEvents_1.ListeningStartedEvent(_this.privRequestId, _this.privSessionId, _this.privAudioSourceId, _this.privAudioNodeId));\n            }\n        };\n        this.onPreConnectionStart = function (authFetchEventId, connectionId) {\n            _this.privAuthFetchEventId = authFetchEventId;\n            _this.privSessionId = connectionId;\n            _this.onEvent(new RecognitionEvents_1.ConnectingToServiceEvent(_this.privRequestId, _this.privAuthFetchEventId, _this.privSessionId));\n        };\n        this.onAuthCompleted = function (isError, error) {\n            if (isError) {\n                _this.onComplete();\n            }\n        };\n        this.onConnectionEstablishCompleted = function (statusCode, reason) {\n            if (statusCode === 200) {\n                _this.onEvent(new RecognitionEvents_1.RecognitionStartedEvent(_this.requestId, _this.privAudioSourceId, _this.privAudioNodeId, _this.privAuthFetchEventId, _this.privSessionId));\n                if (!!_this.privAudioNode) {\n                    _this.privAudioNode.replay();\n                }\n                _this.privTurnStartAudioOffset = _this.privLastRecoOffset;\n                return;\n            }\n            else if (statusCode === 403) {\n                _this.onComplete();\n            }\n        };\n        this.onServiceTurnEndResponse = function (continuousRecognition) {\n            if (!continuousRecognition || _this.isSpeechEnded) {\n                _this.onComplete();\n            }\n            else {\n                // Start a new request set.\n                _this.privTurnStartAudioOffset = _this.privLastRecoOffset;\n                _this.privRequestId = Exports_1.createNoDashGuid();\n                _this.privAudioNode.replay();\n            }\n        };\n        this.dispose = function (error) {\n            if (!_this.privIsDisposed) {\n                // we should have completed by now. If we did not its an unknown error.\n                _this.privIsDisposed = true;\n                for (var _i = 0, _a = _this.privDetachables; _i < _a.length; _i++) {\n                    var detachable = _a[_i];\n                    detachable.detach();\n                }\n                _this.privServiceTelemetryListener.dispose();\n            }\n        };\n        this.getTelemetry = function () {\n            return _this.privServiceTelemetryListener.getTelemetry();\n        };\n        this.onEvent = function (event) {\n            if (!!_this.privServiceTelemetryListener) {\n                _this.privServiceTelemetryListener.onEvent(event);\n            }\n            Exports_1.Events.instance.onEvent(event);\n        };\n        this.onComplete = function () {\n            if (!!_this.privIsRecognizing) {\n                _this.privIsRecognizing = false;\n                _this.detachAudioNode();\n            }\n        };\n        this.detachAudioNode = function () {\n            if (!_this.privIsAudioNodeDetached) {\n                _this.privIsAudioNodeDetached = true;\n                if (_this.privAudioNode) {\n                    _this.privAudioNode.detach();\n                }\n            }\n        };\n        this.privAudioSourceId = audioSourceId;\n        this.privRequestId = Exports_1.createNoDashGuid();\n        this.privAudioNodeId = Exports_1.createNoDashGuid();\n        this.privRequestCompletionDeferral = new Exports_1.Deferred();\n    }\n    Object.defineProperty(RequestSession.prototype, \"sessionId\", {\n        get: function () {\n            return this.privSessionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RequestSession.prototype, \"requestId\", {\n        get: function () {\n            return this.privRequestId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RequestSession.prototype, \"audioNodeId\", {\n        get: function () {\n            return this.privAudioNodeId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RequestSession.prototype, \"completionPromise\", {\n        get: function () {\n            return this.privRequestCompletionDeferral.promise();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RequestSession.prototype, \"isSpeechEnded\", {\n        get: function () {\n            return this.privIsSpeechEnded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RequestSession.prototype, \"isRecognizing\", {\n        get: function () {\n            return this.privIsRecognizing;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RequestSession.prototype, \"currentTurnAudioOffset\", {\n        get: function () {\n            return this.privTurnStartAudioOffset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RequestSession.prototype.listenForServiceTelemetry = function (eventSource) {\n        if (!!this.privServiceTelemetryListener) {\n            this.privDetachables.push(eventSource.attachListener(this.privServiceTelemetryListener));\n        }\n    };\n    RequestSession.prototype.startNewRecognition = function () {\n        this.privIsRecognizing = true;\n        this.privTurnStartAudioOffset = 0;\n        this.privLastRecoOffset = 0;\n        this.privRequestId = Exports_1.createNoDashGuid();\n        this.privServiceTelemetryListener = new ServiceTelemetryListener_Internal_1.ServiceTelemetryListener(this.privRequestId, this.privAudioSourceId, this.privAudioNodeId);\n        this.onEvent(new RecognitionEvents_1.RecognitionTriggeredEvent(this.requestId, this.privSessionId, this.privAudioSourceId, this.privAudioNodeId));\n    };\n    RequestSession.prototype.onServiceRecognized = function (offset) {\n        this.privLastRecoOffset = offset;\n        this.privAudioNode.shrinkBuffers(offset);\n    };\n    RequestSession.prototype.onStopRecognizing = function () {\n        this.privIsRecognizing = false;\n    };\n    // Should be called with the audioNode for this session has indicated that it is out of speech.\n    RequestSession.prototype.onSpeechEnded = function () {\n        this.privIsSpeechEnded = true;\n    };\n    return RequestSession;\n}());\nexports.RequestSession = RequestSession;\n\n//# sourceMappingURL=RequestSession.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../../common.browser/Exports\");\nvar Exports_2 = require(\"../Exports\");\nvar AudioInputStream_1 = require(\"./AudioInputStream\");\n/**\n * Represents audio input configuration used for specifying what type of input to use (microphone, file, stream).\n * @class AudioConfig\n */\nvar AudioConfig = /** @class */ (function () {\n    function AudioConfig() {\n    }\n    /**\n     * Creates an AudioConfig object representing the default microphone on the system.\n     * @member AudioConfig.fromDefaultMicrophoneInput\n     * @function\n     * @public\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n    AudioConfig.fromDefaultMicrophoneInput = function () {\n        var pcmRecorder = new Exports_1.PcmRecorder();\n        return new AudioConfigImpl(new Exports_1.MicAudioSource(pcmRecorder));\n    };\n    /**\n     * Creates an AudioConfig object representing the specified file.\n     * @member AudioConfig.fromWavFileInput\n     * @function\n     * @public\n     * @param {File} fileName - Specifies the audio input file. Currently, only WAV / PCM with 16-bit\n     *        samples, 16 kHz sample rate, and a single channel (Mono) is supported.\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n    AudioConfig.fromWavFileInput = function (file) {\n        return new AudioConfigImpl(new Exports_1.FileAudioSource(file));\n    };\n    /**\n     * Creates an AudioConfig object representing the specified stream.\n     * @member AudioConfig.fromStreamInput\n     * @function\n     * @public\n     * @param {AudioInputStream | PullAudioInputStreamCallback} audioStream - Specifies the custom audio input\n     *        stream. Currently, only WAV / PCM with 16-bit samples, 16 kHz sample rate, and a single channel\n     *        (Mono) is supported.\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n    AudioConfig.fromStreamInput = function (audioStream) {\n        if (audioStream instanceof Exports_2.PullAudioInputStreamCallback) {\n            return new AudioConfigImpl(new AudioInputStream_1.PullAudioInputStreamImpl(audioStream));\n        }\n        if (audioStream instanceof Exports_2.AudioInputStream) {\n            return new AudioConfigImpl(audioStream);\n        }\n        throw new Error(\"Not Supported Type\");\n    };\n    return AudioConfig;\n}());\nexports.AudioConfig = AudioConfig;\n/**\n * Represents audio input stream used for custom audio input configurations.\n * @private\n * @class AudioConfigImpl\n */\n// tslint:disable-next-line:max-classes-per-file\nvar AudioConfigImpl = /** @class */ (function (_super) {\n    __extends(AudioConfigImpl, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {IAudioSource} source - An audio source.\n     */\n    function AudioConfigImpl(source) {\n        var _this = _super.call(this) || this;\n        _this.privSource = source;\n        return _this;\n    }\n    Object.defineProperty(AudioConfigImpl.prototype, \"format\", {\n        /**\n         * Format information for the audio\n         */\n        get: function () {\n            return this.privSource.format;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @member AudioConfigImpl.prototype.close\n     * @function\n     * @public\n     */\n    AudioConfigImpl.prototype.close = function () {\n        this.privSource.turnOff();\n    };\n    /**\n     * @member AudioConfigImpl.prototype.id\n     * @function\n     * @public\n     */\n    AudioConfigImpl.prototype.id = function () {\n        return this.privSource.id();\n    };\n    /**\n     * @member AudioConfigImpl.prototype.turnOn\n     * @function\n     * @public\n     * @returns {Promise<boolean>} A promise.\n     */\n    AudioConfigImpl.prototype.turnOn = function () {\n        return this.privSource.turnOn();\n    };\n    /**\n     * @member AudioConfigImpl.prototype.attach\n     * @function\n     * @public\n     * @param {string} audioNodeId - The audio node id.\n     * @returns {Promise<IAudioStreamNode>} A promise.\n     */\n    AudioConfigImpl.prototype.attach = function (audioNodeId) {\n        return this.privSource.attach(audioNodeId);\n    };\n    /**\n     * @member AudioConfigImpl.prototype.detach\n     * @function\n     * @public\n     * @param {string} audioNodeId - The audio node id.\n     */\n    AudioConfigImpl.prototype.detach = function (audioNodeId) {\n        return this.detach(audioNodeId);\n    };\n    /**\n     * @member AudioConfigImpl.prototype.turnOff\n     * @function\n     * @public\n     * @returns {Promise<boolean>} A promise.\n     */\n    AudioConfigImpl.prototype.turnOff = function () {\n        return this.privSource.turnOff();\n    };\n    Object.defineProperty(AudioConfigImpl.prototype, \"events\", {\n        /**\n         * @member AudioConfigImpl.prototype.events\n         * @function\n         * @public\n         * @returns {EventSource<AudioSourceEvent>} An event source for audio events.\n         */\n        get: function () {\n            return this.privSource.events;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AudioConfigImpl;\n}(AudioConfig));\nexports.AudioConfigImpl = AudioConfigImpl;\n\n//# sourceMappingURL=AudioConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Guid_1 = require(\"./Guid\");\nvar EventType;\n(function (EventType) {\n    EventType[EventType[\"Debug\"] = 0] = \"Debug\";\n    EventType[EventType[\"Info\"] = 1] = \"Info\";\n    EventType[EventType[\"Warning\"] = 2] = \"Warning\";\n    EventType[EventType[\"Error\"] = 3] = \"Error\";\n})(EventType = exports.EventType || (exports.EventType = {}));\nvar PlatformEvent = /** @class */ (function () {\n    function PlatformEvent(eventName, eventType) {\n        this.privName = eventName;\n        this.privEventId = Guid_1.createNoDashGuid();\n        this.privEventTime = new Date().toISOString();\n        this.privEventType = eventType;\n        this.privMetadata = {};\n    }\n    Object.defineProperty(PlatformEvent.prototype, \"name\", {\n        get: function () {\n            return this.privName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PlatformEvent.prototype, \"eventId\", {\n        get: function () {\n            return this.privEventId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PlatformEvent.prototype, \"eventTime\", {\n        get: function () {\n            return this.privEventTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PlatformEvent.prototype, \"eventType\", {\n        get: function () {\n            return this.privEventType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PlatformEvent.prototype, \"metadata\", {\n        get: function () {\n            return this.privMetadata;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PlatformEvent;\n}());\nexports.PlatformEvent = PlatformEvent;\n\n//# sourceMappingURL=PlatformEvent.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Contracts_1 = require(\"./Contracts\");\n/**\n * Represents a keyword recognition model for recognizing when\n * the user says a keyword to initiate further speech recognition.\n * @class KeywordRecognitionModel\n */\nvar KeywordRecognitionModel = /** @class */ (function () {\n    /**\n     * Create and initializes a new instance.\n     * @constructor\n     */\n    function KeywordRecognitionModel() {\n        this.privDisposed = false;\n    }\n    /**\n     * Creates a keyword recognition model using the specified filename.\n     * @member KeywordRecognitionModel.fromFile\n     * @function\n     * @public\n     * @param {string} fileName - A string that represents file name for the keyword recognition model.\n     *        Note, the file can point to a zip file in which case the model\n     *        will be extracted from the zip.\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\n     */\n    KeywordRecognitionModel.fromFile = function (fileName) {\n        Contracts_1.Contracts.throwIfFileDoesNotExist(fileName, \"fileName\");\n        throw new Error(\"Not yet implemented.\");\n    };\n    /**\n     * Creates a keyword recognition model using the specified filename.\n     * @member KeywordRecognitionModel.fromStream\n     * @function\n     * @public\n     * @param {string} file - A File that represents file for the keyword recognition model.\n     *        Note, the file can point to a zip file in which case the model will be extracted from the zip.\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\n     */\n    KeywordRecognitionModel.fromStream = function (file) {\n        Contracts_1.Contracts.throwIfNull(file, \"file\");\n        throw new Error(\"Not yet implemented.\");\n    };\n    /**\n     * Dispose of associated resources.\n     * @member KeywordRecognitionModel.prototype.close\n     * @function\n     * @public\n     */\n    KeywordRecognitionModel.prototype.close = function () {\n        if (this.privDisposed) {\n            return;\n        }\n        this.privDisposed = true;\n    };\n    return KeywordRecognitionModel;\n}());\nexports.KeywordRecognitionModel = KeywordRecognitionModel;\n\n//# sourceMappingURL=KeywordRecognitionModel.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @class Contracts\n * @private\n */\nvar Contracts = /** @class */ (function () {\n    function Contracts() {\n    }\n    Contracts.throwIfNullOrUndefined = function (param, name) {\n        if (param === undefined || param === null) {\n            throw new Error(\"throwIfNullOrUndefined:\" + name);\n        }\n    };\n    Contracts.throwIfNull = function (param, name) {\n        if (param === null) {\n            throw new Error(\"throwIfNull:\" + name);\n        }\n    };\n    Contracts.throwIfNullOrWhitespace = function (param, name) {\n        Contracts.throwIfNullOrUndefined(param, name);\n        if ((\"\" + param).trim().length < 1) {\n            throw new Error(\"throwIfNullOrWhitespace:\" + name);\n        }\n    };\n    Contracts.throwIfDisposed = function (isDisposed) {\n        if (isDisposed) {\n            throw new Error(\"the object is already disposed\");\n        }\n    };\n    Contracts.throwIfArrayEmptyOrWhitespace = function (array, name) {\n        Contracts.throwIfNullOrUndefined(array, name);\n        if (array.length === 0) {\n            throw new Error(\"throwIfArrayEmptyOrWhitespace:\" + name);\n        }\n        for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {\n            var item = array_1[_i];\n            Contracts.throwIfNullOrWhitespace(item, name);\n        }\n    };\n    Contracts.throwIfFileDoesNotExist = function (param, name) {\n        Contracts.throwIfNullOrWhitespace(param, name);\n        // TODO check for file existence.\n    };\n    return Contracts;\n}());\nexports.Contracts = Contracts;\n\n//# sourceMappingURL=Contracts.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../Exports\");\nvar TranslationStatus_1 = require(\"../TranslationStatus\");\nvar TranslationPhrase = /** @class */ (function () {\n    function TranslationPhrase(json) {\n        this.privTranslationPhrase = JSON.parse(json);\n        this.privTranslationPhrase.RecognitionStatus = Exports_1.RecognitionStatus[this.privTranslationPhrase.RecognitionStatus];\n        if (this.privTranslationPhrase.Translation !== undefined) {\n            this.privTranslationPhrase.Translation.TranslationStatus = TranslationStatus_1.TranslationStatus[this.privTranslationPhrase.Translation.TranslationStatus];\n        }\n    }\n    TranslationPhrase.fromJSON = function (json) {\n        return new TranslationPhrase(json);\n    };\n    Object.defineProperty(TranslationPhrase.prototype, \"RecognitionStatus\", {\n        get: function () {\n            return this.privTranslationPhrase.RecognitionStatus;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TranslationPhrase.prototype, \"Offset\", {\n        get: function () {\n            return this.privTranslationPhrase.Offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TranslationPhrase.prototype, \"Duration\", {\n        get: function () {\n            return this.privTranslationPhrase.Duration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TranslationPhrase.prototype, \"Text\", {\n        get: function () {\n            return this.privTranslationPhrase.Text;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TranslationPhrase.prototype, \"Translation\", {\n        get: function () {\n            return this.privTranslationPhrase.Translation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TranslationPhrase;\n}());\nexports.TranslationPhrase = TranslationPhrase;\n\n//# sourceMappingURL=TranslationPhrase.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"./Exports\");\n/**\n * Define payload of intent recognition canceled result events.\n * @class IntentRecognitionCanceledEventArgs\n */\nvar IntentRecognitionCanceledEventArgs = /** @class */ (function (_super) {\n    __extends(IntentRecognitionCanceledEventArgs, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {CancellationReason} result - The result of the intent recognition.\n     * @param {string} offset - The offset.\n     * @param {IntentRecognitionResult} sessionId - The session id.\n     */\n    function IntentRecognitionCanceledEventArgs(reason, errorDetails, errorCode, result, offset, sessionId) {\n        var _this = _super.call(this, result, offset, sessionId) || this;\n        _this.privReason = reason;\n        _this.privErrorDetails = errorDetails;\n        _this.privErrorCode = errorCode;\n        return _this;\n    }\n    Object.defineProperty(IntentRecognitionCanceledEventArgs.prototype, \"reason\", {\n        /**\n         * The reason the recognition was canceled.\n         * @member IntentRecognitionCanceledEventArgs.prototype.reason\n         * @function\n         * @public\n         * @returns {CancellationReason} Specifies the reason canceled.\n         */\n        get: function () {\n            return this.privReason;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IntentRecognitionCanceledEventArgs.prototype, \"errorCode\", {\n        /**\n         * The error code in case of an unsuccessful recognition.\n         * Added in version 1.1.0.\n         * @return An error code that represents the error reason.\n         */\n        get: function () {\n            return this.privErrorCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IntentRecognitionCanceledEventArgs.prototype, \"errorDetails\", {\n        /**\n         * In case of an unsuccessful recognition, provides details of the occurred error.\n         * @member IntentRecognitionCanceledEventArgs.prototype.errorDetails\n         * @function\n         * @public\n         * @returns {string} A String that represents the error details.\n         */\n        get: function () {\n            return this.privErrorDetails;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IntentRecognitionCanceledEventArgs;\n}(Exports_1.IntentRecognitionEventArgs));\nexports.IntentRecognitionCanceledEventArgs = IntentRecognitionCanceledEventArgs;\n\n//# sourceMappingURL=IntentRecognitionCanceledEventArgs.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar Exports_1 = require(\"../common/Exports\");\nvar ws = require(\"ws\");\nvar WebsocketMessageAdapter = /** @class */ (function () {\n    function WebsocketMessageAdapter(uri, connectionId, messageFormatter) {\n        var _this = this;\n        this.open = function () {\n            if (_this.privConnectionState === Exports_1.ConnectionState.Disconnected) {\n                return Exports_1.PromiseHelper.fromError(\"Cannot open a connection that is in \" + _this.privConnectionState + \" state\");\n            }\n            if (_this.privConnectionEstablishDeferral) {\n                return _this.privConnectionEstablishDeferral.promise();\n            }\n            _this.privConnectionEstablishDeferral = new Exports_1.Deferred();\n            _this.privConnectionState = Exports_1.ConnectionState.Connecting;\n            try {\n                if (typeof WebSocket !== \"undefined\" && !WebsocketMessageAdapter.forceNpmWebSocket) {\n                    _this.privWebsocketClient = new WebSocket(_this.privUri);\n                }\n                else {\n                    _this.privWebsocketClient = new ws(_this.privUri);\n                }\n                _this.privWebsocketClient.binaryType = \"arraybuffer\";\n                _this.privReceivingMessageQueue = new Exports_1.Queue();\n                _this.privDisconnectDeferral = new Exports_1.Deferred();\n                _this.privSendMessageQueue = new Exports_1.Queue();\n                _this.processSendQueue();\n            }\n            catch (error) {\n                _this.privConnectionEstablishDeferral.resolve(new Exports_1.ConnectionOpenResponse(500, error));\n                return _this.privConnectionEstablishDeferral.promise();\n            }\n            _this.onEvent(new Exports_1.ConnectionStartEvent(_this.privConnectionId, _this.privUri));\n            _this.privWebsocketClient.onopen = function (e) {\n                _this.privConnectionState = Exports_1.ConnectionState.Connected;\n                _this.onEvent(new Exports_1.ConnectionEstablishedEvent(_this.privConnectionId));\n                _this.privConnectionEstablishDeferral.resolve(new Exports_1.ConnectionOpenResponse(200, \"\"));\n            };\n            _this.privWebsocketClient.onerror = function (e) {\n                // TODO: Understand what this is error is. Will we still get onClose ?\n                if (_this.privConnectionState !== Exports_1.ConnectionState.Connecting) {\n                    // TODO: Is this required ?\n                    // this.onEvent(new ConnectionErrorEvent(errorMsg, connectionId));\n                }\n            };\n            _this.privWebsocketClient.onclose = function (e) {\n                if (_this.privConnectionState === Exports_1.ConnectionState.Connecting) {\n                    _this.privConnectionState = Exports_1.ConnectionState.Disconnected;\n                    // this.onEvent(new ConnectionEstablishErrorEvent(this.connectionId, e.code, e.reason));\n                    _this.privConnectionEstablishDeferral.resolve(new Exports_1.ConnectionOpenResponse(e.code, e.reason));\n                }\n                else {\n                    _this.onEvent(new Exports_1.ConnectionClosedEvent(_this.privConnectionId, e.code, e.reason));\n                }\n                _this.onClose(e.code, e.reason);\n            };\n            _this.privWebsocketClient.onmessage = function (e) {\n                var networkReceivedTime = new Date().toISOString();\n                if (_this.privConnectionState === Exports_1.ConnectionState.Connected) {\n                    var deferred_1 = new Exports_1.Deferred();\n                    // let id = ++this.idCounter;\n                    _this.privReceivingMessageQueue.enqueueFromPromise(deferred_1.promise());\n                    if (e.data instanceof ArrayBuffer) {\n                        var rawMessage = new Exports_1.RawWebsocketMessage(Exports_1.MessageType.Binary, e.data);\n                        _this.privMessageFormatter\n                            .toConnectionMessage(rawMessage)\n                            .on(function (connectionMessage) {\n                            _this.onEvent(new Exports_1.ConnectionMessageReceivedEvent(_this.privConnectionId, networkReceivedTime, connectionMessage));\n                            deferred_1.resolve(connectionMessage);\n                        }, function (error) {\n                            // TODO: Events for these ?\n                            deferred_1.reject(\"Invalid binary message format. Error: \" + error);\n                        });\n                    }\n                    else {\n                        var rawMessage = new Exports_1.RawWebsocketMessage(Exports_1.MessageType.Text, e.data);\n                        _this.privMessageFormatter\n                            .toConnectionMessage(rawMessage)\n                            .on(function (connectionMessage) {\n                            _this.onEvent(new Exports_1.ConnectionMessageReceivedEvent(_this.privConnectionId, networkReceivedTime, connectionMessage));\n                            deferred_1.resolve(connectionMessage);\n                        }, function (error) {\n                            // TODO: Events for these ?\n                            deferred_1.reject(\"Invalid text message format. Error: \" + error);\n                        });\n                    }\n                }\n            };\n            return _this.privConnectionEstablishDeferral.promise();\n        };\n        this.send = function (message) {\n            if (_this.privConnectionState !== Exports_1.ConnectionState.Connected) {\n                return Exports_1.PromiseHelper.fromError(\"Cannot send on connection that is in \" + _this.privConnectionState + \" state\");\n            }\n            var messageSendStatusDeferral = new Exports_1.Deferred();\n            var messageSendDeferral = new Exports_1.Deferred();\n            _this.privSendMessageQueue.enqueueFromPromise(messageSendDeferral.promise());\n            _this.privMessageFormatter\n                .fromConnectionMessage(message)\n                .on(function (rawMessage) {\n                messageSendDeferral.resolve({\n                    Message: message,\n                    RawWebsocketMessage: rawMessage,\n                    sendStatusDeferral: messageSendStatusDeferral,\n                });\n            }, function (error) {\n                messageSendDeferral.reject(\"Error formatting the message. \" + error);\n            });\n            return messageSendStatusDeferral.promise();\n        };\n        this.read = function () {\n            if (_this.privConnectionState !== Exports_1.ConnectionState.Connected) {\n                return Exports_1.PromiseHelper.fromError(\"Cannot read on connection that is in \" + _this.privConnectionState + \" state\");\n            }\n            return _this.privReceivingMessageQueue.dequeue();\n        };\n        this.close = function (reason) {\n            if (_this.privWebsocketClient) {\n                if (_this.privConnectionState !== Exports_1.ConnectionState.Disconnected) {\n                    _this.privWebsocketClient.close(1000, reason ? reason : \"Normal closure by client\");\n                }\n            }\n            else {\n                var deferral = new Exports_1.Deferred();\n                deferral.resolve(true);\n                return deferral.promise();\n            }\n            return _this.privDisconnectDeferral.promise();\n        };\n        this.sendRawMessage = function (sendItem) {\n            try {\n                // indicates we are draining the queue and it came with no message;\n                if (!sendItem) {\n                    return Exports_1.PromiseHelper.fromResult(true);\n                }\n                _this.onEvent(new Exports_1.ConnectionMessageSentEvent(_this.privConnectionId, new Date().toISOString(), sendItem.Message));\n                _this.privWebsocketClient.send(sendItem.RawWebsocketMessage.payload);\n                return Exports_1.PromiseHelper.fromResult(true);\n            }\n            catch (e) {\n                return Exports_1.PromiseHelper.fromError(\"websocket send error: \" + e);\n            }\n        };\n        this.onClose = function (code, reason) {\n            var closeReason = \"Connection closed. \" + code + \": \" + reason;\n            _this.privConnectionState = Exports_1.ConnectionState.Disconnected;\n            _this.privDisconnectDeferral.resolve(true);\n            _this.privReceivingMessageQueue.dispose(reason);\n            _this.privReceivingMessageQueue.drainAndDispose(function (pendingReceiveItem) {\n                // TODO: Events for these ?\n                // Logger.instance.onEvent(new LoggingEvent(LogType.Warning, null, `Failed to process received message. Reason: ${closeReason}, Message: ${JSON.stringify(pendingReceiveItem)}`));\n            }, closeReason);\n            _this.privSendMessageQueue.drainAndDispose(function (pendingSendItem) {\n                pendingSendItem.sendStatusDeferral.reject(closeReason);\n            }, closeReason);\n        };\n        this.processSendQueue = function () {\n            _this.privSendMessageQueue\n                .dequeue()\n                .on(function (sendItem) {\n                // indicates we are draining the queue and it came with no message;\n                if (!sendItem) {\n                    return;\n                }\n                _this.sendRawMessage(sendItem)\n                    .on(function (result) {\n                    sendItem.sendStatusDeferral.resolve(result);\n                    _this.processSendQueue();\n                }, function (sendError) {\n                    sendItem.sendStatusDeferral.reject(sendError);\n                    _this.processSendQueue();\n                });\n            }, function (error) {\n                // do nothing\n            });\n        };\n        this.onEvent = function (event) {\n            _this.privConnectionEvents.onEvent(event);\n            Exports_1.Events.instance.onEvent(event);\n        };\n        if (!uri) {\n            throw new Exports_1.ArgumentNullError(\"uri\");\n        }\n        if (!messageFormatter) {\n            throw new Exports_1.ArgumentNullError(\"messageFormatter\");\n        }\n        this.privConnectionEvents = new Exports_1.EventSource();\n        this.privConnectionId = connectionId;\n        this.privMessageFormatter = messageFormatter;\n        this.privConnectionState = Exports_1.ConnectionState.None;\n        this.privUri = uri;\n    }\n    Object.defineProperty(WebsocketMessageAdapter.prototype, \"state\", {\n        get: function () {\n            return this.privConnectionState;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WebsocketMessageAdapter.prototype, \"events\", {\n        get: function () {\n            return this.privConnectionEvents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WebsocketMessageAdapter.forceNpmWebSocket = false;\n    return WebsocketMessageAdapter;\n}());\nexports.WebsocketMessageAdapter = WebsocketMessageAdapter;\n\n//# sourceMappingURL=WebsocketMessageAdapter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common/Exports\");\nvar IAuthentication_1 = require(\"./IAuthentication\");\nvar AuthHeader = \"Ocp-Apim-Subscription-Key\";\n/**\n * @class\n */\nvar CognitiveSubscriptionKeyAuthentication = /** @class */ (function () {\n    /**\n     * Creates and initializes an instance of the CognitiveSubscriptionKeyAuthentication class.\n     * @constructor\n     * @param {string} subscriptionKey - The subscription key\n     */\n    function CognitiveSubscriptionKeyAuthentication(subscriptionKey) {\n        var _this = this;\n        /**\n         * Fetches the subscription key.\n         * @member\n         * @function\n         * @public\n         * @param {string} authFetchEventId - The id to fetch.\n         */\n        this.fetch = function (authFetchEventId) {\n            return Exports_1.PromiseHelper.fromResult(_this.privAuthInfo);\n        };\n        /**\n         * Fetches the subscription key.\n         * @member\n         * @function\n         * @public\n         * @param {string} authFetchEventId - The id to fetch.\n         */\n        this.fetchOnExpiry = function (authFetchEventId) {\n            return Exports_1.PromiseHelper.fromResult(_this.privAuthInfo);\n        };\n        if (!subscriptionKey) {\n            throw new Exports_1.ArgumentNullError(\"subscriptionKey\");\n        }\n        this.privAuthInfo = new IAuthentication_1.AuthInfo(AuthHeader, subscriptionKey);\n    }\n    return CognitiveSubscriptionKeyAuthentication;\n}());\nexports.CognitiveSubscriptionKeyAuthentication = CognitiveSubscriptionKeyAuthentication;\n\n//# sourceMappingURL=CognitiveSubscriptionKeyAuthentication.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common/Exports\");\nvar Exports_2 = require(\"../sdk/Exports\");\nvar Exports_3 = require(\"./Exports\");\n// tslint:disable-next-line:max-classes-per-file\nvar TranslationServiceRecognizer = /** @class */ (function (_super) {\n    __extends(TranslationServiceRecognizer, _super);\n    function TranslationServiceRecognizer(authentication, connectionFactory, audioSource, recognizerConfig, translationRecognizer) {\n        var _this = _super.call(this, authentication, connectionFactory, audioSource, recognizerConfig, translationRecognizer) || this;\n        _this.privTranslationRecognizer = translationRecognizer;\n        return _this;\n    }\n    TranslationServiceRecognizer.prototype.processTypeSpecificMessages = function (connectionMessage, successCallback, errorCallBack) {\n        var resultProps = new Exports_2.PropertyCollection();\n        if (connectionMessage.messageType === Exports_1.MessageType.Text) {\n            resultProps.setProperty(Exports_2.PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n        }\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"translation.hypothesis\":\n                var result = this.fireEventForResult(Exports_3.TranslationHypothesis.fromJSON(connectionMessage.textBody), resultProps);\n                if (!!this.privTranslationRecognizer.recognizing) {\n                    try {\n                        this.privTranslationRecognizer.recognizing(this.privTranslationRecognizer, result);\n                        /* tslint:disable:no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                break;\n            case \"translation.phrase\":\n                if (this.privRecognizerConfig.isContinuousRecognition) {\n                    // For continuous recognition telemetry has to be sent for every phrase as per spec.\n                    this.sendTelemetryData();\n                }\n                var translatedPhrase = Exports_3.TranslationPhrase.fromJSON(connectionMessage.textBody);\n                if (translatedPhrase.RecognitionStatus === Exports_3.RecognitionStatus.Success) {\n                    this.privRequestSession.onServiceRecognized(this.privRequestSession.currentTurnAudioOffset + translatedPhrase.Offset + translatedPhrase.Duration);\n                    // OK, the recognition was successful. How'd the translation do?\n                    var result_1 = this.fireEventForResult(translatedPhrase, resultProps);\n                    if (!!this.privTranslationRecognizer.recognized) {\n                        try {\n                            this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, result_1);\n                            /* tslint:disable:no-empty */\n                        }\n                        catch (error) {\n                            // Not going to let errors in the event handler\n                            // trip things up.\n                        }\n                    }\n                    // report result to promise.\n                    if (!!successCallback) {\n                        try {\n                            successCallback(result_1.result);\n                        }\n                        catch (e) {\n                            if (!!errorCallBack) {\n                                errorCallBack(e);\n                            }\n                        }\n                        // Only invoke the call back once.\n                        // and if it's successful don't invoke the\n                        // error after that.\n                        successCallback = undefined;\n                        errorCallBack = undefined;\n                    }\n                    break;\n                }\n                else {\n                    var reason = Exports_3.EnumTranslation.implTranslateRecognitionResult(translatedPhrase.RecognitionStatus);\n                    var result_2 = new Exports_2.TranslationRecognitionResult(undefined, this.privRequestSession.requestId, reason, translatedPhrase.Text, translatedPhrase.Duration, translatedPhrase.Offset, undefined, connectionMessage.textBody, resultProps);\n                    if (reason === Exports_2.ResultReason.Canceled) {\n                        var cancelReason = Exports_3.EnumTranslation.implTranslateCancelResult(translatedPhrase.RecognitionStatus);\n                        var ev = new Exports_2.TranslationRecognitionCanceledEventArgs(this.privRequestSession.sessionId, cancelReason, null, cancelReason === Exports_2.CancellationReason.Error ? Exports_2.CancellationErrorCode.ServiceError : Exports_2.CancellationErrorCode.NoError, result_2);\n                        if (!!this.privTranslationRecognizer.canceled) {\n                            try {\n                                this.privTranslationRecognizer.canceled(this.privTranslationRecognizer, ev);\n                                /* tslint:disable:no-empty */\n                            }\n                            catch (error) {\n                                // Not going to let errors in the event handler\n                                // trip things up.\n                            }\n                        }\n                    }\n                    else {\n                        if (!(this.privRequestSession.isSpeechEnded && reason === Exports_2.ResultReason.NoMatch && translatedPhrase.RecognitionStatus !== Exports_3.RecognitionStatus.InitialSilenceTimeout)) {\n                            var ev = new Exports_2.TranslationRecognitionEventArgs(result_2, 0 /*offset*/, this.privRequestSession.sessionId);\n                            if (!!this.privTranslationRecognizer.recognized) {\n                                try {\n                                    this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, ev);\n                                    /* tslint:disable:no-empty */\n                                }\n                                catch (error) {\n                                    // Not going to let errors in the event handler\n                                    // trip things up.\n                                }\n                            }\n                        }\n                    }\n                    // report result to promise.\n                    if (!!successCallback) {\n                        try {\n                            successCallback(result_2);\n                        }\n                        catch (e) {\n                            if (!!errorCallBack) {\n                                errorCallBack(e);\n                            }\n                        }\n                        // Only invoke the call back once.\n                        // and if it's successful don't invoke the\n                        // error after that.\n                        successCallback = undefined;\n                        errorCallBack = undefined;\n                    }\n                }\n                break;\n            case \"translation.synthesis\":\n                this.sendSynthesisAudio(connectionMessage.binaryBody, this.privRequestSession.sessionId);\n                break;\n            case \"translation.synthesis.end\":\n                var synthEnd = Exports_3.TranslationSynthesisEnd.fromJSON(connectionMessage.textBody);\n                switch (synthEnd.SynthesisStatus) {\n                    case Exports_3.SynthesisStatus.Error:\n                        if (!!this.privTranslationRecognizer.synthesizing) {\n                            var result_3 = new Exports_2.TranslationSynthesisResult(Exports_2.ResultReason.Canceled, undefined);\n                            var retEvent = new Exports_2.TranslationSynthesisEventArgs(result_3, this.privRequestSession.sessionId);\n                            try {\n                                this.privTranslationRecognizer.synthesizing(this.privTranslationRecognizer, retEvent);\n                                /* tslint:disable:no-empty */\n                            }\n                            catch (error) {\n                                // Not going to let errors in the event handler\n                                // trip things up.\n                            }\n                        }\n                        if (!!this.privTranslationRecognizer.canceled) {\n                            // And raise a canceled event to send the rich(er) error message back.\n                            var canceledResult = new Exports_2.TranslationRecognitionCanceledEventArgs(this.privRequestSession.sessionId, Exports_2.CancellationReason.Error, synthEnd.FailureReason, Exports_2.CancellationErrorCode.ServiceError, null);\n                            try {\n                                this.privTranslationRecognizer.canceled(this.privTranslationRecognizer, canceledResult);\n                                /* tslint:disable:no-empty */\n                            }\n                            catch (error) {\n                                // Not going to let errors in the event handler\n                                // trip things up.\n                            }\n                        }\n                        break;\n                    case Exports_3.SynthesisStatus.Success:\n                        this.sendSynthesisAudio(undefined, this.privRequestSession.sessionId);\n                        break;\n                    default:\n                        break;\n                }\n                break;\n            default:\n                break;\n        }\n    };\n    // Cancels recognition.\n    TranslationServiceRecognizer.prototype.cancelRecognition = function (sessionId, requestId, cancellationReason, errorCode, error, cancelRecoCallback) {\n        if (!!this.privTranslationRecognizer.canceled) {\n            var properties = new Exports_2.PropertyCollection();\n            properties.setProperty(Exports_3.CancellationErrorCodePropertyName, Exports_2.CancellationErrorCode[errorCode]);\n            var cancelEvent = new Exports_2.TranslationRecognitionCanceledEventArgs(sessionId, cancellationReason, error, errorCode, undefined);\n            try {\n                this.privTranslationRecognizer.canceled(this.privTranslationRecognizer, cancelEvent);\n                /* tslint:disable:no-empty */\n            }\n            catch (_a) { }\n            if (!!cancelRecoCallback) {\n                var result = new Exports_2.TranslationRecognitionResult(undefined, // Translations\n                requestId, Exports_2.ResultReason.Canceled, undefined, // Text\n                undefined, // Druation\n                undefined, // Offset\n                error, undefined, // Json\n                properties);\n                try {\n                    cancelRecoCallback(result);\n                    /* tslint:disable:no-empty */\n                }\n                catch (_b) { }\n            }\n        }\n    };\n    TranslationServiceRecognizer.prototype.fireEventForResult = function (serviceResult, properties) {\n        var translations;\n        if (undefined !== serviceResult.Translation.Translations) {\n            translations = new Exports_2.Translations();\n            for (var _i = 0, _a = serviceResult.Translation.Translations; _i < _a.length; _i++) {\n                var translation = _a[_i];\n                translations.set(translation.Language, translation.Text);\n            }\n        }\n        var resultReason;\n        if (serviceResult instanceof Exports_3.TranslationPhrase) {\n            if (serviceResult.Translation.TranslationStatus === Exports_1.TranslationStatus.Success) {\n                resultReason = Exports_2.ResultReason.TranslatedSpeech;\n            }\n            else {\n                resultReason = Exports_2.ResultReason.RecognizedSpeech;\n            }\n        }\n        else {\n            resultReason = Exports_2.ResultReason.TranslatingSpeech;\n        }\n        var offset = serviceResult.Offset + this.privRequestSession.currentTurnAudioOffset;\n        var result = new Exports_2.TranslationRecognitionResult(translations, this.privRequestSession.requestId, resultReason, serviceResult.Text, serviceResult.Duration, offset, serviceResult.Translation.FailureReason, JSON.stringify(serviceResult), properties);\n        var ev = new Exports_2.TranslationRecognitionEventArgs(result, offset, this.privRequestSession.sessionId);\n        return ev;\n    };\n    TranslationServiceRecognizer.prototype.sendSynthesisAudio = function (audio, sessionId) {\n        var reason = (undefined === audio) ? Exports_2.ResultReason.SynthesizingAudioCompleted : Exports_2.ResultReason.SynthesizingAudio;\n        var result = new Exports_2.TranslationSynthesisResult(reason, audio);\n        var retEvent = new Exports_2.TranslationSynthesisEventArgs(result, sessionId);\n        if (!!this.privTranslationRecognizer.synthesizing) {\n            try {\n                this.privTranslationRecognizer.synthesizing(this.privTranslationRecognizer, retEvent);\n                /* tslint:disable:no-empty */\n            }\n            catch (error) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    };\n    return TranslationServiceRecognizer;\n}(Exports_3.ServiceRecognizerBase));\nexports.TranslationServiceRecognizer = TranslationServiceRecognizer;\n\n//# sourceMappingURL=TranslationServiceRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PlatformEvent_1 = require(\"./PlatformEvent\");\nvar AudioSourceEvent = /** @class */ (function (_super) {\n    __extends(AudioSourceEvent, _super);\n    function AudioSourceEvent(eventName, audioSourceId, eventType) {\n        if (eventType === void 0) { eventType = PlatformEvent_1.EventType.Info; }\n        var _this = _super.call(this, eventName, eventType) || this;\n        _this.privAudioSourceId = audioSourceId;\n        return _this;\n    }\n    Object.defineProperty(AudioSourceEvent.prototype, \"audioSourceId\", {\n        get: function () {\n            return this.privAudioSourceId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AudioSourceEvent;\n}(PlatformEvent_1.PlatformEvent));\nexports.AudioSourceEvent = AudioSourceEvent;\n// tslint:disable-next-line:max-classes-per-file\nvar AudioSourceInitializingEvent = /** @class */ (function (_super) {\n    __extends(AudioSourceInitializingEvent, _super);\n    function AudioSourceInitializingEvent(audioSourceId) {\n        return _super.call(this, \"AudioSourceInitializingEvent\", audioSourceId) || this;\n    }\n    return AudioSourceInitializingEvent;\n}(AudioSourceEvent));\nexports.AudioSourceInitializingEvent = AudioSourceInitializingEvent;\n// tslint:disable-next-line:max-classes-per-file\nvar AudioSourceReadyEvent = /** @class */ (function (_super) {\n    __extends(AudioSourceReadyEvent, _super);\n    function AudioSourceReadyEvent(audioSourceId) {\n        return _super.call(this, \"AudioSourceReadyEvent\", audioSourceId) || this;\n    }\n    return AudioSourceReadyEvent;\n}(AudioSourceEvent));\nexports.AudioSourceReadyEvent = AudioSourceReadyEvent;\n// tslint:disable-next-line:max-classes-per-file\nvar AudioSourceOffEvent = /** @class */ (function (_super) {\n    __extends(AudioSourceOffEvent, _super);\n    function AudioSourceOffEvent(audioSourceId) {\n        return _super.call(this, \"AudioSourceOffEvent\", audioSourceId) || this;\n    }\n    return AudioSourceOffEvent;\n}(AudioSourceEvent));\nexports.AudioSourceOffEvent = AudioSourceOffEvent;\n// tslint:disable-next-line:max-classes-per-file\nvar AudioSourceErrorEvent = /** @class */ (function (_super) {\n    __extends(AudioSourceErrorEvent, _super);\n    function AudioSourceErrorEvent(audioSourceId, error) {\n        var _this = _super.call(this, \"AudioSourceErrorEvent\", audioSourceId, PlatformEvent_1.EventType.Error) || this;\n        _this.privError = error;\n        return _this;\n    }\n    Object.defineProperty(AudioSourceErrorEvent.prototype, \"error\", {\n        get: function () {\n            return this.privError;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AudioSourceErrorEvent;\n}(AudioSourceEvent));\nexports.AudioSourceErrorEvent = AudioSourceErrorEvent;\n// tslint:disable-next-line:max-classes-per-file\nvar AudioStreamNodeEvent = /** @class */ (function (_super) {\n    __extends(AudioStreamNodeEvent, _super);\n    function AudioStreamNodeEvent(eventName, audioSourceId, audioNodeId) {\n        var _this = _super.call(this, eventName, audioSourceId) || this;\n        _this.privAudioNodeId = audioNodeId;\n        return _this;\n    }\n    Object.defineProperty(AudioStreamNodeEvent.prototype, \"audioNodeId\", {\n        get: function () {\n            return this.privAudioNodeId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AudioStreamNodeEvent;\n}(AudioSourceEvent));\nexports.AudioStreamNodeEvent = AudioStreamNodeEvent;\n// tslint:disable-next-line:max-classes-per-file\nvar AudioStreamNodeAttachingEvent = /** @class */ (function (_super) {\n    __extends(AudioStreamNodeAttachingEvent, _super);\n    function AudioStreamNodeAttachingEvent(audioSourceId, audioNodeId) {\n        return _super.call(this, \"AudioStreamNodeAttachingEvent\", audioSourceId, audioNodeId) || this;\n    }\n    return AudioStreamNodeAttachingEvent;\n}(AudioStreamNodeEvent));\nexports.AudioStreamNodeAttachingEvent = AudioStreamNodeAttachingEvent;\n// tslint:disable-next-line:max-classes-per-file\nvar AudioStreamNodeAttachedEvent = /** @class */ (function (_super) {\n    __extends(AudioStreamNodeAttachedEvent, _super);\n    function AudioStreamNodeAttachedEvent(audioSourceId, audioNodeId) {\n        return _super.call(this, \"AudioStreamNodeAttachedEvent\", audioSourceId, audioNodeId) || this;\n    }\n    return AudioStreamNodeAttachedEvent;\n}(AudioStreamNodeEvent));\nexports.AudioStreamNodeAttachedEvent = AudioStreamNodeAttachedEvent;\n// tslint:disable-next-line:max-classes-per-file\nvar AudioStreamNodeDetachedEvent = /** @class */ (function (_super) {\n    __extends(AudioStreamNodeDetachedEvent, _super);\n    function AudioStreamNodeDetachedEvent(audioSourceId, audioNodeId) {\n        return _super.call(this, \"AudioStreamNodeDetachedEvent\", audioSourceId, audioNodeId) || this;\n    }\n    return AudioStreamNodeDetachedEvent;\n}(AudioStreamNodeEvent));\nexports.AudioStreamNodeDetachedEvent = AudioStreamNodeDetachedEvent;\n// tslint:disable-next-line:max-classes-per-file\nvar AudioStreamNodeErrorEvent = /** @class */ (function (_super) {\n    __extends(AudioStreamNodeErrorEvent, _super);\n    function AudioStreamNodeErrorEvent(audioSourceId, audioNodeId, error) {\n        var _this = _super.call(this, \"AudioStreamNodeErrorEvent\", audioSourceId, audioNodeId) || this;\n        _this.privError = error;\n        return _this;\n    }\n    Object.defineProperty(AudioStreamNodeErrorEvent.prototype, \"error\", {\n        get: function () {\n            return this.privError;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AudioStreamNodeErrorEvent;\n}(AudioStreamNodeEvent));\nexports.AudioStreamNodeErrorEvent = AudioStreamNodeErrorEvent;\n\n//# sourceMappingURL=AudioSourceEvents.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AuthInfo = /** @class */ (function () {\n    function AuthInfo(headerName, token) {\n        this.privHeaderName = headerName;\n        this.privToken = token;\n    }\n    Object.defineProperty(AuthInfo.prototype, \"headerName\", {\n        get: function () {\n            return this.privHeaderName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AuthInfo.prototype, \"token\", {\n        get: function () {\n            return this.privToken;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AuthInfo;\n}());\nexports.AuthInfo = AuthInfo;\n\n//# sourceMappingURL=IAuthentication.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Defines the possible reasons a recognition result might be generated.\n * @class ResultReason\n */\nvar ResultReason;\n(function (ResultReason) {\n    /**\n     * Indicates speech could not be recognized. More details\n     * can be found in the NoMatchDetails object.\n     * @member ResultReason.NoMatch\n     */\n    ResultReason[ResultReason[\"NoMatch\"] = 0] = \"NoMatch\";\n    /**\n     * Indicates that the recognition was canceled. More details\n     * can be found using the CancellationDetails object.\n     * @member ResultReason.Canceled\n     */\n    ResultReason[ResultReason[\"Canceled\"] = 1] = \"Canceled\";\n    /**\n     * Indicates the speech result contains hypothesis text.\n     * @member ResultReason.RecognizedSpeech\n     */\n    ResultReason[ResultReason[\"RecognizingSpeech\"] = 2] = \"RecognizingSpeech\";\n    /**\n     * Indicates the speech result contains final text that has been recognized.\n     * Speech Recognition is now complete for this phrase.\n     * @member ResultReason.RecognizedSpeech\n     */\n    ResultReason[ResultReason[\"RecognizedSpeech\"] = 3] = \"RecognizedSpeech\";\n    /**\n     * Indicates the intent result contains hypothesis text and intent.\n     * @member ResultReason.RecognizingIntent\n     */\n    ResultReason[ResultReason[\"RecognizingIntent\"] = 4] = \"RecognizingIntent\";\n    /**\n     * Indicates the intent result contains final text and intent.\n     * Speech Recognition and Intent determination are now complete for this phrase.\n     * @member ResultReason.RecognizedIntent\n     */\n    ResultReason[ResultReason[\"RecognizedIntent\"] = 5] = \"RecognizedIntent\";\n    /**\n     * Indicates the translation result contains hypothesis text and its translation(s).\n     * @member ResultReason.TranslatingSpeech\n     */\n    ResultReason[ResultReason[\"TranslatingSpeech\"] = 6] = \"TranslatingSpeech\";\n    /**\n     * Indicates the translation result contains final text and corresponding translation(s).\n     * Speech Recognition and Translation are now complete for this phrase.\n     * @member ResultReason.TranslatedSpeech\n     */\n    ResultReason[ResultReason[\"TranslatedSpeech\"] = 7] = \"TranslatedSpeech\";\n    /**\n     * Indicates the synthesized audio result contains a non-zero amount of audio data\n     * @member ResultReason.SynthesizingAudio\n     */\n    ResultReason[ResultReason[\"SynthesizingAudio\"] = 8] = \"SynthesizingAudio\";\n    /**\n     * Indicates the synthesized audio is now complete for this phrase.\n     * @member ResultReason.SynthesizingAudioCompleted\n     */\n    ResultReason[ResultReason[\"SynthesizingAudioCompleted\"] = 9] = \"SynthesizingAudioCompleted\";\n})(ResultReason = exports.ResultReason || (exports.ResultReason = {}));\n\n//# sourceMappingURL=ResultReason.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common/Exports\");\nvar ConsoleLoggingListener = /** @class */ (function () {\n    function ConsoleLoggingListener(logLevelFilter) {\n        if (logLevelFilter === void 0) { logLevelFilter = Exports_1.EventType.Warning; }\n        var _this = this;\n        this.onEvent = function (event) {\n            if (event.eventType >= _this.privLogLevelFilter) {\n                var log = _this.toString(event);\n                switch (event.eventType) {\n                    case Exports_1.EventType.Debug:\n                        // tslint:disable-next-line:no-console\n                        console.debug(log);\n                        break;\n                    case Exports_1.EventType.Info:\n                        // tslint:disable-next-line:no-console\n                        console.info(log);\n                        break;\n                    case Exports_1.EventType.Warning:\n                        // tslint:disable-next-line:no-console\n                        console.warn(log);\n                        break;\n                    case Exports_1.EventType.Error:\n                        // tslint:disable-next-line:no-console\n                        console.error(log);\n                        break;\n                    default:\n                        // tslint:disable-next-line:no-console\n                        console.log(log);\n                        break;\n                }\n            }\n        };\n        this.toString = function (event) {\n            var logFragments = [\n                \"\" + event.EventTime,\n                \"\" + event.Name,\n            ];\n            for (var prop in event) {\n                if (prop && event.hasOwnProperty(prop) &&\n                    prop !== \"eventTime\" && prop !== \"eventType\" &&\n                    prop !== \"eventId\" && prop !== \"name\" &&\n                    prop !== \"constructor\") {\n                    var value = event[prop];\n                    var valueToLog = \"<NULL>\";\n                    if (value !== undefined && value !== null) {\n                        if (typeof (value) === \"number\" || typeof (value) === \"string\") {\n                            valueToLog = value.toString();\n                        }\n                        else {\n                            valueToLog = JSON.stringify(value);\n                        }\n                    }\n                    logFragments.push(prop + \": \" + valueToLog);\n                }\n            }\n            return logFragments.join(\" | \");\n        };\n        this.privLogLevelFilter = logLevelFilter;\n    }\n    return ConsoleLoggingListener;\n}());\nexports.ConsoleLoggingListener = ConsoleLoggingListener;\n\n//# sourceMappingURL=ConsoleLoggingListener.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Defines speech property ids.\n * @class PropertyId\n */\nvar PropertyId;\n(function (PropertyId) {\n    /**\n     * The Cognitive Services Speech Service subscription Key. If you are using an intent recognizer, you need to specify\n     * to specify the LUIS endpoint key for your particular LUIS app. Under normal circumstances, you shouldn't\n     * have to use this property directly.\n     * Instead, use @see SpeechConfig.fromSubscription.\n     * @member PropertyId.SpeechServiceConnection_Key\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Key\"] = 0] = \"SpeechServiceConnection_Key\";\n    /**\n     * The Cognitive Services Speech Service endpoint (url). Under normal circumstances, you shouldn't\n     * have to use this property directly.\n     * Instead, use @see SpeechConfig.fromEndpoint.\n     * NOTE: This endpoint is not the same as the endpoint used to obtain an access token.\n     * @member PropertyId.SpeechServiceConnection_Endpoint\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Endpoint\"] = 1] = \"SpeechServiceConnection_Endpoint\";\n    /**\n     * The Cognitive Services Speech Service region. Under normal circumstances, you shouldn't have to\n     * use this property directly.\n     * Instead, use @see SpeechConfig.fromSubscription, @see SpeechConfig.fromEndpoint, @see SpeechConfig.fromAuthorizationToken.\n     * @member PropertyId.SpeechServiceConnection_Region\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Region\"] = 2] = \"SpeechServiceConnection_Region\";\n    /**\n     * The Cognitive Services Speech Service authorization token (aka access token). Under normal circumstances,\n     * you shouldn't have to use this property directly.\n     * Instead, use @see SpeechConfig.fromAuthorizationToken,\n     * @see SpeechRecognizer.setAuthorizationToken, @see IntentRecognizer.setAuthorizationToken, @see TranslationRecognizer.setAuthorizationToken.\n     * @member PropertyId.SpeechServiceAuthorization_Token\n     */\n    PropertyId[PropertyId[\"SpeechServiceAuthorization_Token\"] = 3] = \"SpeechServiceAuthorization_Token\";\n    /**\n     * The Cognitive Services Speech Service authorization type. Currently unused.\n     * @member PropertyId.SpeechServiceAuthorization_Type\n     */\n    PropertyId[PropertyId[\"SpeechServiceAuthorization_Type\"] = 4] = \"SpeechServiceAuthorization_Type\";\n    /**\n     * The Cognitive Services Speech Service endpoint id. Under normal circumstances, you shouldn't\n     * have to use this property directly.\n     * Instead, use @see SpeechConfig.setEndpointId.\n     * NOTE: The endpoint id is available in the Speech Portal, listed under Endpoint Details.\n     * @member PropertyId.SpeechServiceConnection_EndpointId\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_EndpointId\"] = 5] = \"SpeechServiceConnection_EndpointId\";\n    /**\n     * The list of comma separated languages (BCP-47 format) used as target translation languages. Under normal circumstances,\n     * you shouldn't have to use this property directly.\n     * Instead use @see SpeechTranslationConfig.addTargetLanguage,\n     * @see SpeechTranslationConfig.getTargetLanguages, @see TranslationRecognizer.getTargetLanguages.\n     * @member PropertyId.SpeechServiceConnection_TranslationToLanguages\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_TranslationToLanguages\"] = 6] = \"SpeechServiceConnection_TranslationToLanguages\";\n    /**\n     * The name of the Cognitive Service Text to Speech Service Voice. Under normal circumstances, you shouldn't have to use this\n     * property directly.\n     * Instead, use @see SpeechTranslationConfig.setVoiceName.\n     * NOTE: Valid voice names can be found <a href=\"https://aka.ms/csspeech/voicenames\">here</a>.\n     * @member PropertyId.SpeechServiceConnection_TranslationVoice\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_TranslationVoice\"] = 7] = \"SpeechServiceConnection_TranslationVoice\";\n    /**\n     * Translation features.\n     * @member PropertyId.SpeechServiceConnection_TranslationFeatures\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_TranslationFeatures\"] = 8] = \"SpeechServiceConnection_TranslationFeatures\";\n    /**\n     * The Language Understanding Service Region. Under normal circumstances, you shouldn't have to use this property directly.\n     * Instead, use @see LanguageUnderstandingModel.\n     * @member PropertyId.SpeechServiceConnection_IntentRegion\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_IntentRegion\"] = 9] = \"SpeechServiceConnection_IntentRegion\";\n    /**\n     * The Cognitive Services Speech Service recognition Mode. Can be \"INTERACTIVE\", \"CONVERSATION\", \"DICTATION\".\n     * This property is intended to be read-only. The SDK is using it internally.\n     * @member PropertyId.SpeechServiceConnection_RecoMode\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_RecoMode\"] = 10] = \"SpeechServiceConnection_RecoMode\";\n    /**\n     * The spoken language to be recognized (in BCP-47 format). Under normal circumstances, you shouldn't have to use this property\n     * directly.\n     * Instead, use @see SpeechConfig.setSpeechRecognitionLanguage.\n     * @member PropertyId.SpeechServiceConnection_RecoLanguage\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_RecoLanguage\"] = 11] = \"SpeechServiceConnection_RecoLanguage\";\n    /**\n     * The session id. This id is a universally unique identifier (aka UUID) representing a specific binding of an audio input stream\n     * and the underlying speech recognition instance to which it is bound. Under normal circumstances, you shouldn't have to use this\n     * property directly.\n     * Instead use @see SessionEventArgs.sessionId.\n     * @member PropertyId.Speech_SessionId\n     */\n    PropertyId[PropertyId[\"Speech_SessionId\"] = 12] = \"Speech_SessionId\";\n    /**\n     * The requested Cognitive Services Speech Service response output format (simple or detailed). Under normal circumstances, you shouldn't have\n     * to use this property directly.\n     * Instead use @see SpeechConfig.setOutputFormat.\n     * @member PropertyId.SpeechServiceResponse_RequestDetailedResultTrueFalse\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestDetailedResultTrueFalse\"] = 13] = \"SpeechServiceResponse_RequestDetailedResultTrueFalse\";\n    /**\n     * The requested Cognitive Services Speech Service response output profanity level. Currently unused.\n     * @member PropertyId.SpeechServiceResponse_RequestProfanityFilterTrueFalse\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestProfanityFilterTrueFalse\"] = 14] = \"SpeechServiceResponse_RequestProfanityFilterTrueFalse\";\n    /**\n     * The Cognitive Services Speech Service response output (in JSON format). This property is available on recognition result objects only.\n     * @member PropertyId.SpeechServiceResponse_JsonResult\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_JsonResult\"] = 15] = \"SpeechServiceResponse_JsonResult\";\n    /**\n     * The Cognitive Services Speech Service error details (in JSON format). Under normal circumstances, you shouldn't have to\n     * use this property directly. Instead use @see CancellationDetails.getErrorDetails.\n     * @member PropertyId.SpeechServiceResponse_JsonErrorDetails\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_JsonErrorDetails\"] = 16] = \"SpeechServiceResponse_JsonErrorDetails\";\n    /**\n     * The cancellation reason. Currently unused.\n     * @member PropertyId.CancellationDetails_Reason\n     */\n    PropertyId[PropertyId[\"CancellationDetails_Reason\"] = 17] = \"CancellationDetails_Reason\";\n    /**\n     * The cancellation text. Currently unused.\n     * @member PropertyId.CancellationDetails_ReasonText\n     */\n    PropertyId[PropertyId[\"CancellationDetails_ReasonText\"] = 18] = \"CancellationDetails_ReasonText\";\n    /**\n     * The Cancellation detailed text. Currently unused.\n     * @member PropertyId.CancellationDetails_ReasonDetailedText\n     */\n    PropertyId[PropertyId[\"CancellationDetails_ReasonDetailedText\"] = 19] = \"CancellationDetails_ReasonDetailedText\";\n    /**\n     * The Language Understanding Service response output (in JSON format). Available via @see IntentRecognitionResult.Properties.\n     * @member PropertyId.LanguageUnderstandingServiceResponse_JsonResult\n     */\n    PropertyId[PropertyId[\"LanguageUnderstandingServiceResponse_JsonResult\"] = 20] = \"LanguageUnderstandingServiceResponse_JsonResult\";\n})(PropertyId = exports.PropertyId || (exports.PropertyId = {}));\n\n//# sourceMappingURL=PropertyId.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common/Exports\");\nvar Exports_2 = require(\"../sdk/Exports\");\nvar Exports_3 = require(\"./Exports\");\n// tslint:disable-next-line:max-classes-per-file\nvar IntentServiceRecognizer = /** @class */ (function (_super) {\n    __extends(IntentServiceRecognizer, _super);\n    function IntentServiceRecognizer(authentication, connectionFactory, audioSource, recognizerConfig, recognizer) {\n        var _this = _super.call(this, authentication, connectionFactory, audioSource, recognizerConfig, recognizer) || this;\n        _this.privIntentRecognizer = recognizer;\n        _this.privIntentDataSent = false;\n        return _this;\n    }\n    IntentServiceRecognizer.prototype.setIntents = function (addedIntents, umbrellaIntent) {\n        this.privAddedLmIntents = addedIntents;\n        this.privUmbrellaIntent = umbrellaIntent;\n        this.privIntentDataSent = true;\n    };\n    IntentServiceRecognizer.prototype.processTypeSpecificMessages = function (connectionMessage, successCallback, errorCallBack) {\n        var _this = this;\n        var result;\n        var ev;\n        var resultProps = new Exports_2.PropertyCollection();\n        if (connectionMessage.messageType === Exports_1.MessageType.Text) {\n            resultProps.setProperty(Exports_2.PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n        }\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"speech.hypothesis\":\n                var speechHypothesis = Exports_3.SpeechHypothesis.fromJSON(connectionMessage.textBody);\n                result = new Exports_2.IntentRecognitionResult(undefined, this.privRequestSession.requestId, Exports_2.ResultReason.RecognizingIntent, speechHypothesis.Text, speechHypothesis.Duration, speechHypothesis.Offset + this.privRequestSession.currentTurnAudioOffset, undefined, connectionMessage.textBody, resultProps);\n                ev = new Exports_2.IntentRecognitionEventArgs(result, speechHypothesis.Offset + this.privRequestSession.currentTurnAudioOffset, this.privRequestSession.sessionId);\n                if (!!this.privIntentRecognizer.recognizing) {\n                    try {\n                        this.privIntentRecognizer.recognizing(this.privIntentRecognizer, ev);\n                        /* tslint:disable:no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                break;\n            case \"speech.phrase\":\n                var simple = Exports_3.SimpleSpeechPhrase.fromJSON(connectionMessage.textBody);\n                result = new Exports_2.IntentRecognitionResult(undefined, this.privRequestSession.requestId, Exports_3.EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus), simple.DisplayText, simple.Duration, simple.Offset + this.privRequestSession.currentTurnAudioOffset, undefined, connectionMessage.textBody, resultProps);\n                ev = new Exports_2.IntentRecognitionEventArgs(result, result.offset + this.privRequestSession.currentTurnAudioOffset, this.privRequestSession.sessionId);\n                var sendEvent = function () {\n                    if (_this.privRecognizerConfig.isContinuousRecognition) {\n                        // For continuous recognition telemetry has to be sent for every phrase as per spec.\n                        _this.sendTelemetryData();\n                    }\n                    if (!!_this.privIntentRecognizer.recognized) {\n                        try {\n                            _this.privIntentRecognizer.recognized(_this.privIntentRecognizer, ev);\n                            /* tslint:disable:no-empty */\n                        }\n                        catch (error) {\n                            // Not going to let errors in the event handler\n                            // trip things up.\n                        }\n                    }\n                    // report result to promise.\n                    if (!!successCallback) {\n                        try {\n                            successCallback(result);\n                        }\n                        catch (e) {\n                            if (!!errorCallBack) {\n                                errorCallBack(e);\n                            }\n                        }\n                        // Only invoke the call back once.\n                        // and if it's successful don't invoke the\n                        // error after that.\n                        successCallback = undefined;\n                        errorCallBack = undefined;\n                    }\n                };\n                // If intent data was sent, the terminal result for this recognizer is an intent being found.\n                // If no intent data was sent, the terminal event is speech recognition being successful.\n                if (false === this.privIntentDataSent || Exports_2.ResultReason.NoMatch === ev.result.reason) {\n                    sendEvent();\n                }\n                else {\n                    // Squirrel away the args, when the response event arrives it will build upon them\n                    // and then return\n                    this.privPendingIntentArgs = ev;\n                }\n                break;\n            case \"response\":\n                // Response from LUIS\n                if (this.privRecognizerConfig.isContinuousRecognition) {\n                    // For continuous recognition telemetry has to be sent for every phrase as per spec.\n                    this.sendTelemetryData();\n                }\n                ev = this.privPendingIntentArgs;\n                this.privPendingIntentArgs = undefined;\n                if (undefined === ev) {\n                    if (\"\" === connectionMessage.textBody) {\n                        // This condition happens if there is nothing but silence in the\n                        // audio sent to the service.\n                        return;\n                    }\n                    // Odd... Not sure this can happen\n                    ev = new Exports_2.IntentRecognitionEventArgs(new Exports_2.IntentRecognitionResult(), 0 /*TODO*/, this.privRequestSession.sessionId);\n                }\n                var intentResponse = Exports_3.IntentResponse.fromJSON(connectionMessage.textBody);\n                // If LUIS didn't return anything, send the existing event, else\n                // modify it to show the match.\n                // See if the intent found is in the list of intents asked for.\n                var addedIntent = this.privAddedLmIntents[intentResponse.topScoringIntent.intent];\n                if (this.privUmbrellaIntent !== undefined) {\n                    addedIntent = this.privUmbrellaIntent;\n                }\n                if (null !== intentResponse && addedIntent !== undefined) {\n                    var intentId = addedIntent.intentName === undefined ? intentResponse.topScoringIntent.intent : addedIntent.intentName;\n                    var reason = ev.result.reason;\n                    if (undefined !== intentId) {\n                        reason = Exports_2.ResultReason.RecognizedIntent;\n                    }\n                    // make sure, properties is set.\n                    var properties = (undefined !== ev.result.properties) ?\n                        ev.result.properties : new Exports_2.PropertyCollection();\n                    properties.setProperty(Exports_2.PropertyId.LanguageUnderstandingServiceResponse_JsonResult, connectionMessage.textBody);\n                    ev = new Exports_2.IntentRecognitionEventArgs(new Exports_2.IntentRecognitionResult(intentId, ev.result.resultId, reason, ev.result.text, ev.result.duration, ev.result.offset + this.privRequestSession.currentTurnAudioOffset, ev.result.errorDetails, ev.result.json, properties), ev.offset + this.privRequestSession.currentTurnAudioOffset, ev.sessionId);\n                }\n                if (!!this.privIntentRecognizer.recognized) {\n                    try {\n                        this.privIntentRecognizer.recognized(this.privIntentRecognizer, ev);\n                        /* tslint:disable:no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                // report result to promise.\n                if (!!successCallback) {\n                    try {\n                        successCallback(ev.result);\n                    }\n                    catch (e) {\n                        if (!!errorCallBack) {\n                            errorCallBack(e);\n                        }\n                    }\n                    // Only invoke the call back once.\n                    // and if it's successful don't invoke the\n                    // error after that.\n                    successCallback = undefined;\n                    errorCallBack = undefined;\n                }\n                break;\n            default:\n                break;\n        }\n    };\n    // Cancels recognition.\n    IntentServiceRecognizer.prototype.cancelRecognition = function (sessionId, requestId, cancellationReason, errorCode, error, cancelRecoCallback) {\n        if (!!this.privIntentRecognizer.canceled) {\n            var properties = new Exports_2.PropertyCollection();\n            properties.setProperty(Exports_3.CancellationErrorCodePropertyName, Exports_2.CancellationErrorCode[errorCode]);\n            var cancelEvent = new Exports_2.IntentRecognitionCanceledEventArgs(cancellationReason, error, errorCode, undefined, undefined, sessionId);\n            try {\n                this.privIntentRecognizer.canceled(this.privIntentRecognizer, cancelEvent);\n                /* tslint:disable:no-empty */\n            }\n            catch (_a) { }\n            if (!!cancelRecoCallback) {\n                var result = new Exports_2.IntentRecognitionResult(undefined, // Intent Id\n                requestId, Exports_2.ResultReason.Canceled, undefined, // Text\n                undefined, // Druation\n                undefined, // Offset\n                error, undefined, // Json\n                properties);\n                try {\n                    cancelRecoCallback(result);\n                    /* tslint:disable:no-empty */\n                }\n                catch (_b) { }\n            }\n        }\n    };\n    return IntentServiceRecognizer;\n}(Exports_3.ServiceRecognizerBase));\nexports.IntentServiceRecognizer = IntentServiceRecognizer;\n\n//# sourceMappingURL=IntentServiceRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common.speech/Exports\");\nvar Contracts_1 = require(\"./Contracts\");\nvar Exports_2 = require(\"./Exports\");\n/**\n * Translation recognizer\n * @class TranslationRecognizer\n */\nvar TranslationRecognizer = /** @class */ (function (_super) {\n    __extends(TranslationRecognizer, _super);\n    /**\n     * Initializes an instance of the TranslationRecognizer.\n     * @constructor\n     * @param {SpeechTranslationConfig} speechConfig - Set of properties to configure this recognizer.\n     * @param {AudioConfig} audioConfig - An optional audio config associated with the recognizer\n     */\n    function TranslationRecognizer(speechConfig, audioConfig) {\n        var _this = this;\n        var configImpl = speechConfig;\n        Contracts_1.Contracts.throwIfNull(configImpl, \"speechConfig\");\n        _this = _super.call(this, audioConfig, configImpl.properties, new Exports_1.TranslationConnectionFactory()) || this;\n        _this.privDisposedTranslationRecognizer = false;\n        _this.privProperties = configImpl.properties.clone();\n        if (_this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_TranslationVoice, undefined) !== undefined) {\n            Contracts_1.Contracts.throwIfNullOrWhitespace(_this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_TranslationVoice), Exports_2.PropertyId[Exports_2.PropertyId.SpeechServiceConnection_TranslationVoice]);\n        }\n        Contracts_1.Contracts.throwIfNullOrWhitespace(_this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_TranslationToLanguages), Exports_2.PropertyId[Exports_2.PropertyId.SpeechServiceConnection_TranslationToLanguages]);\n        Contracts_1.Contracts.throwIfNullOrWhitespace(_this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage), Exports_2.PropertyId[Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        return _this;\n    }\n    Object.defineProperty(TranslationRecognizer.prototype, \"speechRecognitionLanguage\", {\n        /**\n         * Gets the language name that was set when the recognizer was created.\n         * @member TranslationRecognizer.prototype.speechRecognitionLanguage\n         * @function\n         * @public\n         * @returns {string} Gets the language name that was set when the recognizer was created.\n         */\n        get: function () {\n            Contracts_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n            return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TranslationRecognizer.prototype, \"targetLanguages\", {\n        /**\n         * Gets target languages for translation that were set when the recognizer was created.\n         * The language is specified in BCP-47 format. The translation will provide translated text for each of language.\n         * @member TranslationRecognizer.prototype.targetLanguages\n         * @function\n         * @public\n         * @returns {string[]} Gets target languages for translation that were set when the recognizer was created.\n         */\n        get: function () {\n            Contracts_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n            return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TranslationRecognizer.prototype, \"voiceName\", {\n        /**\n         * Gets the name of output voice.\n         * @member TranslationRecognizer.prototype.voiceName\n         * @function\n         * @public\n         * @returns {string} the name of output voice.\n         */\n        get: function () {\n            Contracts_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n            return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_TranslationVoice, undefined);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TranslationRecognizer.prototype, \"authorizationToken\", {\n        /**\n         * Gets the authorization token used to communicate with the service.\n         * @member TranslationRecognizer.prototype.authorizationToken\n         * @function\n         * @public\n         * @returns {string} Authorization token.\n         */\n        get: function () {\n            return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token);\n        },\n        /**\n         * Gets/Sets the authorization token used to communicate with the service.\n         * @member TranslationRecognizer.prototype.authorizationToken\n         * @function\n         * @public\n         * @param {string} value - Authorization token.\n         */\n        set: function (value) {\n            this.properties.setProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TranslationRecognizer.prototype, \"properties\", {\n        /**\n         * The collection of properties and their values defined for this TranslationRecognizer.\n         * @member TranslationRecognizer.prototype.properties\n         * @function\n         * @public\n         * @returns {PropertyCollection} The collection of properties and their values defined for this TranslationRecognizer.\n         */\n        get: function () {\n            return this.privProperties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Starts recognition and translation, and stops after the first utterance is recognized.\n     * The task returns the translation text as result.\n     * Note: recognizeOnceAsync returns when the first utterance has been recognized, so it is suitableonly\n     *       for single shot recognition like command or query. For long-running recognition,\n     *       use startContinuousRecognitionAsync() instead.\n     * @member TranslationRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the result when the translation has completed.\n     * @param err - Callback invoked in case of an error.\n     */\n    TranslationRecognizer.prototype.recognizeOnceAsync = function (cb, err) {\n        var _this = this;\n        try {\n            Contracts_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n            this.implRecognizerStop();\n            this.implRecognizerStart(Exports_1.RecognitionMode.Conversation, function (e) {\n                _this.implRecognizerStop();\n                if (!!cb) {\n                    cb(e);\n                }\n            }, function (e) {\n                _this.implRecognizerStop();\n                if (!!err) {\n                    err(e);\n                }\n            });\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    var typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n        }\n    };\n    /**\n     * Starts recognition and translation, until stopContinuousRecognitionAsync() is called.\n     * User must subscribe to events to receive translation results.\n     * @member TranslationRecognizer.prototype.startContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the translation has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    TranslationRecognizer.prototype.startContinuousRecognitionAsync = function (cb, err) {\n        try {\n            Contracts_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n            this.implRecognizerStop();\n            this.implRecognizerStart(Exports_1.RecognitionMode.Conversation, undefined, undefined);\n            // report result to promise.\n            if (!!cb) {\n                try {\n                    cb();\n                }\n                catch (e) {\n                    if (!!err) {\n                        err(e);\n                    }\n                }\n                cb = undefined;\n            }\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    var typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n        }\n    };\n    /**\n     * Stops continuous recognition and translation.\n     * @member TranslationRecognizer.prototype.stopContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the translation has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    TranslationRecognizer.prototype.stopContinuousRecognitionAsync = function (cb, err) {\n        try {\n            Contracts_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n            this.implRecognizerStop();\n            if (!!cb) {\n                try {\n                    cb();\n                }\n                catch (e) {\n                    if (!!err) {\n                        err(e);\n                    }\n                }\n            }\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    var typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n        }\n    };\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member TranslationRecognizer.prototype.close\n     * @function\n     * @public\n     */\n    TranslationRecognizer.prototype.close = function () {\n        Contracts_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n        this.dispose(true);\n    };\n    TranslationRecognizer.prototype.dispose = function (disposing) {\n        if (this.privDisposedTranslationRecognizer) {\n            return;\n        }\n        if (disposing) {\n            this.implRecognizerStop();\n            this.privDisposedTranslationRecognizer = true;\n            _super.prototype.dispose.call(this, disposing);\n        }\n    };\n    TranslationRecognizer.prototype.createRecognizerConfig = function (speechConfig) {\n        return new Exports_1.RecognizerConfig(speechConfig, this.properties);\n    };\n    TranslationRecognizer.prototype.createServiceRecognizer = function (authentication, connectionFactory, audioConfig, recognizerConfig) {\n        var configImpl = audioConfig;\n        return new Exports_1.TranslationServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\n    };\n    return TranslationRecognizer;\n}(Exports_2.Recognizer));\nexports.TranslationRecognizer = TranslationRecognizer;\n\n//# sourceMappingURL=TranslationRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Defines content for session events like SessionStarted/Stopped, SoundStarted/Stopped.\n * @class SessionEventArgs\n */\nvar SessionEventArgs = /** @class */ (function () {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} sessionId - The session id.\n     */\n    function SessionEventArgs(sessionId) {\n        this.privSessionId = sessionId;\n    }\n    Object.defineProperty(SessionEventArgs.prototype, \"sessionId\", {\n        /**\n         * Represents the session identifier.\n         * @member SessionEventArgs.prototype.sessionId\n         * @function\n         * @public\n         * @returns {string} Represents the session identifier.\n         */\n        get: function () {\n            return this.privSessionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SessionEventArgs;\n}());\nexports.SessionEventArgs = SessionEventArgs;\n\n//# sourceMappingURL=SessionEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SpeechDetected = /** @class */ (function () {\n    function SpeechDetected(json) {\n        this.privSpeechStartDetected = JSON.parse(json);\n    }\n    SpeechDetected.fromJSON = function (json) {\n        return new SpeechDetected(json);\n    };\n    Object.defineProperty(SpeechDetected.prototype, \"Offset\", {\n        get: function () {\n            return this.privSpeechStartDetected.Offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SpeechDetected;\n}());\nexports.SpeechDetected = SpeechDetected;\n\n//# sourceMappingURL=SpeechDetected.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../sdk/Exports\");\nvar Exports_2 = require(\"./Exports\");\nvar EnumTranslation = /** @class */ (function () {\n    function EnumTranslation() {\n    }\n    EnumTranslation.implTranslateRecognitionResult = function (recognitionStatus) {\n        var reason = Exports_1.ResultReason.Canceled;\n        switch (recognitionStatus) {\n            case Exports_2.RecognitionStatus.Success:\n                reason = Exports_1.ResultReason.RecognizedSpeech;\n                break;\n            case Exports_2.RecognitionStatus.NoMatch:\n            case Exports_2.RecognitionStatus.InitialSilenceTimeout:\n            case Exports_2.RecognitionStatus.BabbleTimeout:\n            case Exports_2.RecognitionStatus.EndOfDictation:\n                reason = Exports_1.ResultReason.NoMatch;\n                break;\n            case Exports_2.RecognitionStatus.Error:\n            default:\n                reason = Exports_1.ResultReason.Canceled;\n                break;\n        }\n        return reason;\n    };\n    EnumTranslation.implTranslateCancelResult = function (recognitionStatus) {\n        var reason = Exports_1.CancellationReason.EndOfStream;\n        switch (recognitionStatus) {\n            case Exports_2.RecognitionStatus.Success:\n            case Exports_2.RecognitionStatus.EndOfDictation:\n            case Exports_2.RecognitionStatus.NoMatch:\n                reason = Exports_1.CancellationReason.EndOfStream;\n                break;\n            case Exports_2.RecognitionStatus.InitialSilenceTimeout:\n            case Exports_2.RecognitionStatus.BabbleTimeout:\n            case Exports_2.RecognitionStatus.Error:\n            default:\n                reason = Exports_1.CancellationReason.Error;\n                break;\n        }\n        return reason;\n    };\n    return EnumTranslation;\n}());\nexports.EnumTranslation = EnumTranslation;\n\n//# sourceMappingURL=EnumTranslation.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"./Exports\");\n/**\n * Translation Synthesis event arguments\n * @class TranslationSynthesisEventArgs\n */\nvar TranslationSynthesisEventArgs = /** @class */ (function (_super) {\n    __extends(TranslationSynthesisEventArgs, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {TranslationSynthesisResult} result - The translation synthesis result.\n     * @param {string} sessionId - The session id.\n     */\n    function TranslationSynthesisEventArgs(result, sessionId) {\n        var _this = _super.call(this, sessionId) || this;\n        _this.privResult = result;\n        return _this;\n    }\n    Object.defineProperty(TranslationSynthesisEventArgs.prototype, \"result\", {\n        /**\n         * Specifies the translation synthesis result.\n         * @member TranslationSynthesisEventArgs.prototype.result\n         * @function\n         * @public\n         * @returns {TranslationSynthesisResult} Specifies the translation synthesis result.\n         */\n        get: function () {\n            return this.privResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TranslationSynthesisEventArgs;\n}(Exports_1.SessionEventArgs));\nexports.TranslationSynthesisEventArgs = TranslationSynthesisEventArgs;\n\n//# sourceMappingURL=TranslationSynthesisEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"./Exports\");\n/**\n * Intent recognition result.\n * @class\n */\nvar IntentRecognitionResult = /** @class */ (function (_super) {\n    __extends(IntentRecognitionResult, _super);\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param intentId - The intent id.\n     * @param resultId - The result id.\n     * @param reason - The reason.\n     * @param text - The recognized text.\n     * @param duration - The duration.\n     * @param offset - The offset into the stream.\n     * @param errorDetails - Error details, if provided.\n     * @param json - Additional Json, if provided.\n     * @param properties - Additional properties, if provided.\n     */\n    function IntentRecognitionResult(intentId, resultId, reason, text, duration, offset, errorDetails, json, properties) {\n        var _this = _super.call(this, resultId, reason, text, duration, offset, errorDetails, json, properties) || this;\n        _this.privIntentId = intentId;\n        return _this;\n    }\n    Object.defineProperty(IntentRecognitionResult.prototype, \"intentId\", {\n        /**\n         * A String that represents the intent identifier being recognized.\n         * @member IntentRecognitionResult.prototype.intentId\n         * @function\n         * @public\n         * @returns {string} A String that represents the intent identifier being recognized.\n         */\n        get: function () {\n            return this.privIntentId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IntentRecognitionResult;\n}(Exports_1.SpeechRecognitionResult));\nexports.IntentRecognitionResult = IntentRecognitionResult;\n\n//# sourceMappingURL=IntentRecognitionResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Error_1 = require(\"./Error\");\nvar PromiseState;\n(function (PromiseState) {\n    PromiseState[PromiseState[\"None\"] = 0] = \"None\";\n    PromiseState[PromiseState[\"Resolved\"] = 1] = \"Resolved\";\n    PromiseState[PromiseState[\"Rejected\"] = 2] = \"Rejected\";\n})(PromiseState = exports.PromiseState || (exports.PromiseState = {}));\nvar PromiseResult = /** @class */ (function () {\n    function PromiseResult(promiseResultEventSource) {\n        var _this = this;\n        this.throwIfError = function () {\n            if (_this.isError) {\n                throw _this.error;\n            }\n        };\n        promiseResultEventSource.on(function (result) {\n            if (!_this.privIsCompleted) {\n                _this.privIsCompleted = true;\n                _this.privIsError = false;\n                _this.privResult = result;\n            }\n        }, function (error) {\n            if (!_this.privIsCompleted) {\n                _this.privIsCompleted = true;\n                _this.privIsError = true;\n                _this.privError = error;\n            }\n        });\n    }\n    Object.defineProperty(PromiseResult.prototype, \"isCompleted\", {\n        get: function () {\n            return this.privIsCompleted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PromiseResult.prototype, \"isError\", {\n        get: function () {\n            return this.privIsError;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PromiseResult.prototype, \"error\", {\n        get: function () {\n            return this.privError;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PromiseResult.prototype, \"result\", {\n        get: function () {\n            return this.privResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PromiseResult;\n}());\nexports.PromiseResult = PromiseResult;\n// tslint:disable-next-line:max-classes-per-file\nvar PromiseResultEventSource = /** @class */ (function () {\n    function PromiseResultEventSource() {\n        var _this = this;\n        this.setResult = function (result) {\n            _this.privOnSetResult(result);\n        };\n        this.setError = function (error) {\n            _this.privOnSetError(error);\n        };\n        this.on = function (onSetResult, onSetError) {\n            _this.privOnSetResult = onSetResult;\n            _this.privOnSetError = onSetError;\n        };\n    }\n    return PromiseResultEventSource;\n}());\nexports.PromiseResultEventSource = PromiseResultEventSource;\n// tslint:disable-next-line:max-classes-per-file\nvar PromiseHelper = /** @class */ (function () {\n    function PromiseHelper() {\n    }\n    PromiseHelper.whenAll = function (promises) {\n        if (!promises || promises.length === 0) {\n            throw new Error_1.ArgumentNullError(\"promises\");\n        }\n        var deferred = new Deferred();\n        var errors = [];\n        var completedPromises = 0;\n        var checkForCompletion = function () {\n            completedPromises++;\n            if (completedPromises === promises.length) {\n                if (errors.length === 0) {\n                    deferred.resolve(true);\n                }\n                else {\n                    deferred.reject(errors.join(\", \"));\n                }\n            }\n        };\n        for (var _i = 0, promises_1 = promises; _i < promises_1.length; _i++) {\n            var promise = promises_1[_i];\n            promise.on(function (r) {\n                checkForCompletion();\n            }, function (e) {\n                errors.push(e);\n                checkForCompletion();\n            });\n        }\n        return deferred.promise();\n    };\n    PromiseHelper.fromResult = function (result) {\n        var deferred = new Deferred();\n        deferred.resolve(result);\n        return deferred.promise();\n    };\n    PromiseHelper.fromError = function (error) {\n        var deferred = new Deferred();\n        deferred.reject(error);\n        return deferred.promise();\n    };\n    return PromiseHelper;\n}());\nexports.PromiseHelper = PromiseHelper;\n// TODO: replace with ES6 promises\n// tslint:disable-next-line:max-classes-per-file\nvar Promise = /** @class */ (function () {\n    function Promise(sink) {\n        var _this = this;\n        this.result = function () {\n            return _this.privSink.result;\n        };\n        this.continueWith = function (continuationCallback) {\n            if (!continuationCallback) {\n                throw new Error_1.ArgumentNullError(\"continuationCallback\");\n            }\n            var continuationDeferral = new Deferred();\n            _this.privSink.on(function (r) {\n                try {\n                    var continuationResult = continuationCallback(_this.privSink.result);\n                    continuationDeferral.resolve(continuationResult);\n                }\n                catch (e) {\n                    continuationDeferral.reject(e);\n                }\n            }, function (error) {\n                try {\n                    var continuationResult = continuationCallback(_this.privSink.result);\n                    continuationDeferral.resolve(continuationResult);\n                }\n                catch (e) {\n                    continuationDeferral.reject(\"'Error handler for error \" + error + \" threw error \" + e + \"'\");\n                }\n            });\n            return continuationDeferral.promise();\n        };\n        this.onSuccessContinueWith = function (continuationCallback) {\n            if (!continuationCallback) {\n                throw new Error_1.ArgumentNullError(\"continuationCallback\");\n            }\n            var continuationDeferral = new Deferred();\n            _this.privSink.on(function (r) {\n                try {\n                    var continuationResult = continuationCallback(r);\n                    continuationDeferral.resolve(continuationResult);\n                }\n                catch (e) {\n                    continuationDeferral.reject(e);\n                }\n            }, function (error) {\n                continuationDeferral.reject(error);\n            });\n            return continuationDeferral.promise();\n        };\n        this.continueWithPromise = function (continuationCallback) {\n            if (!continuationCallback) {\n                throw new Error_1.ArgumentNullError(\"continuationCallback\");\n            }\n            var continuationDeferral = new Deferred();\n            _this.privSink.on(function (r) {\n                try {\n                    var continuationPromise = continuationCallback(_this.privSink.result);\n                    if (!continuationPromise) {\n                        throw new Error(\"'Continuation callback did not return promise'\");\n                    }\n                    continuationPromise.on(function (continuationResult) {\n                        continuationDeferral.resolve(continuationResult);\n                    }, function (e) {\n                        continuationDeferral.reject(e);\n                    });\n                }\n                catch (e) {\n                    continuationDeferral.reject(e);\n                }\n            }, function (error) {\n                try {\n                    var continuationPromise = continuationCallback(_this.privSink.result);\n                    if (!continuationPromise) {\n                        throw new Error(\"Continuation callback did not return promise\");\n                    }\n                    continuationPromise.on(function (continuationResult) {\n                        continuationDeferral.resolve(continuationResult);\n                    }, function (e) {\n                        continuationDeferral.reject(e);\n                    });\n                }\n                catch (e) {\n                    continuationDeferral.reject(\"'Error handler for error \" + error + \" threw error \" + e + \"'\");\n                }\n            });\n            return continuationDeferral.promise();\n        };\n        this.onSuccessContinueWithPromise = function (continuationCallback) {\n            if (!continuationCallback) {\n                throw new Error_1.ArgumentNullError(\"continuationCallback\");\n            }\n            var continuationDeferral = new Deferred();\n            _this.privSink.on(function (r) {\n                try {\n                    var continuationPromise = continuationCallback(r);\n                    if (!continuationPromise) {\n                        throw new Error(\"Continuation callback did not return promise\");\n                    }\n                    continuationPromise.on(function (continuationResult) {\n                        continuationDeferral.resolve(continuationResult);\n                    }, function (e) {\n                        continuationDeferral.reject(e);\n                    });\n                }\n                catch (e) {\n                    continuationDeferral.reject(e);\n                }\n            }, function (error) {\n                continuationDeferral.reject(error);\n            });\n            return continuationDeferral.promise();\n        };\n        this.on = function (successCallback, errorCallback) {\n            if (!successCallback) {\n                throw new Error_1.ArgumentNullError(\"successCallback\");\n            }\n            if (!errorCallback) {\n                throw new Error_1.ArgumentNullError(\"errorCallback\");\n            }\n            _this.privSink.on(successCallback, errorCallback);\n            return _this;\n        };\n        this.finally = function (callback) {\n            if (!callback) {\n                throw new Error_1.ArgumentNullError(\"callback\");\n            }\n            var callbackWrapper = function (_) {\n                callback();\n            };\n            return _this.on(callbackWrapper, callbackWrapper);\n        };\n        this.privSink = sink;\n    }\n    return Promise;\n}());\nexports.Promise = Promise;\n// tslint:disable-next-line:max-classes-per-file\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        this.state = function () {\n            return _this.privSink.state;\n        };\n        this.promise = function () {\n            return _this.privPromise;\n        };\n        this.resolve = function (result) {\n            _this.privSink.resolve(result);\n            return _this;\n        };\n        this.reject = function (error) {\n            _this.privSink.reject(error);\n            return _this;\n        };\n        this.privSink = new Sink();\n        this.privPromise = new Promise(this.privSink);\n    }\n    return Deferred;\n}());\nexports.Deferred = Deferred;\n// tslint:disable-next-line:max-classes-per-file\nvar Sink = /** @class */ (function () {\n    function Sink() {\n        var _this = this;\n        this.privState = PromiseState.None;\n        this.privPromiseResult = null;\n        this.privPromiseResultEvents = null;\n        this.privSuccessHandlers = [];\n        this.privErrorHandlers = [];\n        this.resolve = function (result) {\n            if (_this.privState !== PromiseState.None) {\n                throw new Error(\"'Cannot resolve a completed promise'\");\n            }\n            _this.privState = PromiseState.Resolved;\n            _this.privPromiseResultEvents.setResult(result);\n            for (var i = 0; i < _this.privSuccessHandlers.length; i++) {\n                _this.executeSuccessCallback(result, _this.privSuccessHandlers[i], _this.privErrorHandlers[i]);\n            }\n            _this.detachHandlers();\n        };\n        this.reject = function (error) {\n            if (_this.privState !== PromiseState.None) {\n                throw new Error(\"'Cannot reject a completed promise'\");\n            }\n            _this.privState = PromiseState.Rejected;\n            _this.privPromiseResultEvents.setError(error);\n            for (var _i = 0, _a = _this.privErrorHandlers; _i < _a.length; _i++) {\n                var errorHandler = _a[_i];\n                _this.executeErrorCallback(error, errorHandler);\n            }\n            _this.detachHandlers();\n        };\n        this.on = function (successCallback, errorCallback) {\n            if (successCallback == null) {\n                successCallback = function (r) { return; };\n            }\n            if (_this.privState === PromiseState.None) {\n                _this.privSuccessHandlers.push(successCallback);\n                _this.privErrorHandlers.push(errorCallback);\n            }\n            else {\n                if (_this.privState === PromiseState.Resolved) {\n                    _this.executeSuccessCallback(_this.privPromiseResult.result, successCallback, errorCallback);\n                }\n                else if (_this.privState === PromiseState.Rejected) {\n                    _this.executeErrorCallback(_this.privPromiseResult.error, errorCallback);\n                }\n                _this.detachHandlers();\n            }\n        };\n        this.executeSuccessCallback = function (result, successCallback, errorCallback) {\n            try {\n                successCallback(result);\n            }\n            catch (e) {\n                _this.executeErrorCallback(\"'Unhandled callback error: \" + e + \"'\", errorCallback);\n            }\n        };\n        this.executeErrorCallback = function (error, errorCallback) {\n            if (errorCallback) {\n                try {\n                    errorCallback(error);\n                }\n                catch (e) {\n                    throw new Error(\"'Unhandled callback error: \" + e + \". InnerError: \" + error + \"'\");\n                }\n            }\n            else {\n                throw new Error(\"'Unhandled error: \" + error + \"'\");\n            }\n        };\n        this.detachHandlers = function () {\n            _this.privErrorHandlers = [];\n            _this.privSuccessHandlers = [];\n        };\n        this.privPromiseResultEvents = new PromiseResultEventSource();\n        this.privPromiseResult = new PromiseResult(this.privPromiseResultEvents);\n    }\n    Object.defineProperty(Sink.prototype, \"state\", {\n        get: function () {\n            return this.privState;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sink.prototype, \"result\", {\n        get: function () {\n            return this.privPromiseResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Sink;\n}());\nexports.Sink = Sink;\n\n//# sourceMappingURL=Promise.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common.speech/Exports\");\nvar Exports_2 = require(\"../common/Exports\");\nvar Contracts_1 = require(\"./Contracts\");\nvar Exports_3 = require(\"./Exports\");\n/**\n * Defines the base class Recognizer which mainly contains common event handlers.\n * @class Recognizer\n */\nvar Recognizer = /** @class */ (function () {\n    /**\n     * Creates and initializes an instance of a Recognizer\n     * @constructor\n     * @param {AudioConfig} audioInput - An optional audio input stream associated with the recognizer\n     */\n    function Recognizer(audioConfig, properties, connectionFactory) {\n        this.audioConfig = (audioConfig !== undefined) ? audioConfig : Exports_3.AudioConfig.fromDefaultMicrophoneInput();\n        this.privDisposed = false;\n        this.privProperties = properties.clone();\n        this.privConnectionFactory = connectionFactory;\n        this.implCommonRecognizerSetup();\n    }\n    /**\n     * Dispose of associated resources.\n     * @member Recognizer.prototype.close\n     * @function\n     * @public\n     */\n    Recognizer.prototype.close = function () {\n        Contracts_1.Contracts.throwIfDisposed(this.privDisposed);\n        this.dispose(true);\n    };\n    Object.defineProperty(Recognizer.prototype, \"internalData\", {\n        /**\n         * @Internal\n         * Internal data member to support fromRecognizer* pattern methods on other classes.\n         * Do not use externally, object returned will change without warning or notive.\n         */\n        get: function () {\n            return this.privReco;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * This method performs cleanup of resources.\n     * The Boolean parameter disposing indicates whether the method is called\n     * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\n     * Derived classes should override this method to dispose resource if needed.\n     * @member Recognizer.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - Flag to request disposal.\n     */\n    Recognizer.prototype.dispose = function (disposing) {\n        if (this.privDisposed) {\n            return;\n        }\n        if (disposing) {\n            if (this.privReco) {\n                this.privReco.audioSource.turnOff();\n                this.privReco.dispose();\n            }\n        }\n        this.privDisposed = true;\n    };\n    Object.defineProperty(Recognizer, \"telemetryEnabled\", {\n        /**\n         * This method returns the current state of the telemetry setting.\n         * @member Recognizer.prototype.telemetryEnabled\n         * @function\n         * @public\n         * @returns true if the telemetry is enabled, false otherwise.\n         */\n        get: function () {\n            return Exports_1.ServiceRecognizerBase.telemetryDataEnabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * This method globally enables or disables telemetry.\n     * @member Recognizer.prototype.enableTelemetry\n     * @function\n     * @public\n     * @param enabled - Global setting for telemetry collection.\n     * If set to true, telemetry information like microphone errors,\n     * recognition errors are collected and sent to Microsoft.\n     * If set to false, no telemetry is sent to Microsoft.\n     */\n    /* tslint:disable:member-ordering */\n    Recognizer.enableTelemetry = function (enabled) {\n        Exports_1.ServiceRecognizerBase.telemetryDataEnabled = enabled;\n    };\n    // Does the generic recognizer setup that is common accross all recognizer types.\n    Recognizer.prototype.implCommonRecognizerSetup = function () {\n        var _this = this;\n        var osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\n        var osName = \"unknown\";\n        var osVersion = \"unknown\";\n        if (typeof navigator !== \"undefined\") {\n            osPlatform = osPlatform + \"/\" + navigator.platform;\n            osName = navigator.userAgent;\n            osVersion = navigator.appVersion;\n        }\n        var recognizerConfig = this.createRecognizerConfig(new Exports_1.SpeechServiceConfig(new Exports_1.Context(new Exports_1.OS(osPlatform, osName, osVersion))));\n        var subscriptionKey = this.privProperties.getProperty(Exports_3.PropertyId.SpeechServiceConnection_Key, undefined);\n        var authentication = (subscriptionKey && subscriptionKey !== \"\") ?\n            new Exports_1.CognitiveSubscriptionKeyAuthentication(subscriptionKey) :\n            new Exports_1.CognitiveTokenAuthentication(function (authFetchEventId) {\n                var authorizationToken = _this.privProperties.getProperty(Exports_3.PropertyId.SpeechServiceAuthorization_Token, undefined);\n                return Exports_2.PromiseHelper.fromResult(authorizationToken);\n            }, function (authFetchEventId) {\n                var authorizationToken = _this.privProperties.getProperty(Exports_3.PropertyId.SpeechServiceAuthorization_Token, undefined);\n                return Exports_2.PromiseHelper.fromResult(authorizationToken);\n            });\n        this.privReco = this.createServiceRecognizer(authentication, this.privConnectionFactory, this.audioConfig, recognizerConfig);\n    };\n    // Start the recognition\n    Recognizer.prototype.implRecognizerStart = function (recognitionMode, successCallback, errorCallback) {\n        this.privReco.recognize(recognitionMode, successCallback, errorCallback).on(\n        /* tslint:disable:no-empty */\n        function (result) { }, function (error) {\n            if (!!errorCallback) {\n                // Internal error with service communication.\n                errorCallback(\"Runtime error: \" + error);\n            }\n        });\n    };\n    Recognizer.prototype.implRecognizerStop = function () {\n        if (this.privReco) {\n            this.privReco.stopRecognizing();\n        }\n    };\n    return Recognizer;\n}());\nexports.Recognizer = Recognizer;\n\n//# sourceMappingURL=Recognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../Exports\");\nvar DetailedSpeechPhrase = /** @class */ (function () {\n    function DetailedSpeechPhrase(json) {\n        this.privDetailedSpeechPhrase = JSON.parse(json);\n        this.privDetailedSpeechPhrase.RecognitionStatus = Exports_1.RecognitionStatus[this.privDetailedSpeechPhrase.RecognitionStatus];\n    }\n    DetailedSpeechPhrase.fromJSON = function (json) {\n        return new DetailedSpeechPhrase(json);\n    };\n    Object.defineProperty(DetailedSpeechPhrase.prototype, \"RecognitionStatus\", {\n        get: function () {\n            return this.privDetailedSpeechPhrase.RecognitionStatus;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DetailedSpeechPhrase.prototype, \"NBest\", {\n        get: function () {\n            return this.privDetailedSpeechPhrase.NBest;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DetailedSpeechPhrase.prototype, \"Duration\", {\n        get: function () {\n            return this.privDetailedSpeechPhrase.Duration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DetailedSpeechPhrase.prototype, \"Offset\", {\n        get: function () {\n            return this.privDetailedSpeechPhrase.Offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DetailedSpeechPhrase;\n}());\nexports.DetailedSpeechPhrase = DetailedSpeechPhrase;\n\n//# sourceMappingURL=DetailedSpeechPhrase.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"./Exports\");\n/**\n * Connection is a proxy class for managing connection to the speech service of the specified Recognizer.\n * By default, a Recognizer autonomously manages connection to service when needed.\n * The Connection class provides additional methods for users to explicitly open or close a connection and\n * to subscribe to connection status changes.\n * The use of Connection is optional, and mainly for scenarios where fine tuning of application\n * behavior based on connection status is needed. Users can optionally call Open() to manually set up a connection\n * in advance before starting recognition on the Recognizer associated with this Connection.\n * If the Recognizer needs to connect or disconnect to service, it will\n * setup or shutdown the connection independently. In this case the Connection will be notified by change of connection\n * status via Connected/Disconnected events.\n * Added in version 1.2.0.\n */\nvar Connection = /** @class */ (function () {\n    function Connection() {\n    }\n    /**\n     * Gets the Connection instance from the specified recognizer.\n     * @param recognizer The recognizer associated with the connection.\n     * @return The Connection instance of the recognizer.\n     */\n    Connection.fromRecognizer = function (recognizer) {\n        var recoBase = recognizer.internalData;\n        var ret = new Connection();\n        ret.privServiceRecognizer = recoBase;\n        ret.privEventListener = ret.privServiceRecognizer.connectionEvents.attach(function (connectionEvent) {\n            if (connectionEvent.name === \"ConnectionEstablishedEvent\") {\n                if (!!ret.connected) {\n                    ret.connected(new Exports_1.ConnectionEventArgs(connectionEvent.connectionId));\n                }\n            }\n            else if (connectionEvent.name === \"ConnectionClosedEvent\") {\n                if (!!ret.disconnected) {\n                    ret.disconnected(new Exports_1.ConnectionEventArgs(connectionEvent.connectionId));\n                }\n            }\n        });\n        return ret;\n    };\n    /**\n     * Starts to set up connection to the service.\n     * Users can optionally call openConnection() to manually set up a connection in advance before starting recognition on the\n     * Recognizer associated with this Connection. After starting recognition, calling Open() will have no effect\n     *\n     * Note: On return, the connection might not be ready yet. Please subscribe to the Connected event to\n     * be notfied when the connection is established.\n     */\n    Connection.prototype.openConnection = function () {\n        this.privServiceRecognizer.connect();\n    };\n    /**\n     * Closes the connection the service.\n     * Users can optionally call closeConnection() to manually shutdown the connection of the associated Recognizer.\n     *\n     * If closeConnection() is called during recognition, recognition will fail and cancel wtih an error.\n     */\n    Connection.prototype.closeConnection = function () {\n        this.privServiceRecognizer.disconnect();\n    };\n    /**\n     * Dispose of associated resources.\n     */\n    Connection.prototype.close = function () {\n        /* tslint:disable:no-empty */\n    };\n    return Connection;\n}());\nexports.Connection = Connection;\n\n//# sourceMappingURL=Connection.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TranslationStatus_1 = require(\"../TranslationStatus\");\nvar TranslationHypothesis = /** @class */ (function () {\n    function TranslationHypothesis(json) {\n        this.privTranslationHypothesis = JSON.parse(json);\n        this.privTranslationHypothesis.Translation.TranslationStatus = TranslationStatus_1.TranslationStatus[this.privTranslationHypothesis.Translation.TranslationStatus];\n    }\n    TranslationHypothesis.fromJSON = function (json) {\n        return new TranslationHypothesis(json);\n    };\n    Object.defineProperty(TranslationHypothesis.prototype, \"Duration\", {\n        get: function () {\n            return this.privTranslationHypothesis.Duration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TranslationHypothesis.prototype, \"Offset\", {\n        get: function () {\n            return this.privTranslationHypothesis.Offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TranslationHypothesis.prototype, \"Text\", {\n        get: function () {\n            return this.privTranslationHypothesis.Text;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TranslationHypothesis.prototype, \"Translation\", {\n        get: function () {\n            return this.privTranslationHypothesis.Translation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TranslationHypothesis;\n}());\nexports.TranslationHypothesis = TranslationHypothesis;\n\n//# sourceMappingURL=TranslationHypothesis.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Define payload of speech recognition canceled result events.\n * @class TranslationRecognitionCanceledEventArgs\n */\nvar TranslationRecognitionCanceledEventArgs = /** @class */ (function () {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} sessionid - The session id.\n     * @param {CancellationReason} cancellationReason - The cancellation reason.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {TranslationRecognitionResult} result - The result.\n     */\n    function TranslationRecognitionCanceledEventArgs(sessionid, cancellationReason, errorDetails, errorCode, result) {\n        this.privCancelReason = cancellationReason;\n        this.privErrorDetails = errorDetails;\n        this.privResult = result;\n        this.privSessionId = sessionid;\n        this.privErrorCode = errorCode;\n    }\n    Object.defineProperty(TranslationRecognitionCanceledEventArgs.prototype, \"result\", {\n        /**\n         * Specifies the recognition result.\n         * @member TranslationRecognitionCanceledEventArgs.prototype.result\n         * @function\n         * @public\n         * @returns {TranslationRecognitionResult} the recognition result.\n         */\n        get: function () {\n            return this.privResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TranslationRecognitionCanceledEventArgs.prototype, \"sessionId\", {\n        /**\n         * Specifies the session identifier.\n         * @member TranslationRecognitionCanceledEventArgs.prototype.sessionId\n         * @function\n         * @public\n         * @returns {string} the session identifier.\n         */\n        get: function () {\n            return this.privSessionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TranslationRecognitionCanceledEventArgs.prototype, \"reason\", {\n        /**\n         * The reason the recognition was canceled.\n         * @member TranslationRecognitionCanceledEventArgs.prototype.reason\n         * @function\n         * @public\n         * @returns {CancellationReason} Specifies the reason canceled.\n         */\n        get: function () {\n            return this.privCancelReason;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TranslationRecognitionCanceledEventArgs.prototype, \"errorCode\", {\n        /**\n         * The error code in case of an unsuccessful recognition.\n         * Added in version 1.1.0.\n         * @return An error code that represents the error reason.\n         */\n        get: function () {\n            return this.privErrorCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TranslationRecognitionCanceledEventArgs.prototype, \"errorDetails\", {\n        /**\n         * In case of an unsuccessful recognition, provides details of the occurred error.\n         * @member TranslationRecognitionCanceledEventArgs.prototype.errorDetails\n         * @function\n         * @public\n         * @returns {string} A String that represents the error details.\n         */\n        get: function () {\n            return this.privErrorDetails;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TranslationRecognitionCanceledEventArgs;\n}());\nexports.TranslationRecognitionCanceledEventArgs = TranslationRecognitionCanceledEventArgs;\n\n//# sourceMappingURL=TranslationRecognitionCanceledEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Guid_1 = require(\"../../../src/common/Guid\");\nvar Exports_1 = require(\"../../common/Exports\");\nvar Exports_2 = require(\"../Exports\");\nvar AudioStreamFormat_1 = require(\"./AudioStreamFormat\");\nvar bufferSize = 4096;\n/**\n * Represents audio input stream used for custom audio input configurations.\n * @class AudioInputStream\n */\nvar AudioInputStream = /** @class */ (function () {\n    /**\n     * Creates and initializes an instance.\n     * @constructor\n     */\n    function AudioInputStream() {\n    }\n    /**\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\n     * @member AudioInputStream.createPushStream\n     * @function\n     * @public\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\n     *        written to the push audio stream's write() method (currently only support 16 kHz 16bit mono PCM).\n     * @returns {PushAudioInputStream} The audio input stream being created.\n     */\n    AudioInputStream.createPushStream = function (format) {\n        return PushAudioInputStream.create(format);\n    };\n    /**\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for read()\n     * and close() methods.\n     * @member AudioInputStream.createPullStream\n     * @function\n     * @public\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object, derived from\n     *        PullAudioInputStreamCallback\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be returned from\n     *        the callback's read() method (currently only support 16 kHz 16bit mono PCM).\n     * @returns {PullAudioInputStream} The audio input stream being created.\n     */\n    AudioInputStream.createPullStream = function (callback, format) {\n        return PullAudioInputStream.create(callback, format);\n        // throw new Error(\"Oops\");\n    };\n    return AudioInputStream;\n}());\nexports.AudioInputStream = AudioInputStream;\n/**\n * Represents memory backed push audio input stream used for custom audio input configurations.\n * @class PushAudioInputStream\n */\n// tslint:disable-next-line:max-classes-per-file\nvar PushAudioInputStream = /** @class */ (function (_super) {\n    __extends(PushAudioInputStream, _super);\n    function PushAudioInputStream() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\n     * @member PushAudioInputStream.create\n     * @function\n     * @public\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be written to the\n     *        push audio stream's write() method (currently only support 16 kHz 16bit mono PCM).\n     * @returns {PushAudioInputStream} The push audio input stream being created.\n     */\n    PushAudioInputStream.create = function (format) {\n        return new PushAudioInputStreamImpl(format);\n    };\n    return PushAudioInputStream;\n}(AudioInputStream));\nexports.PushAudioInputStream = PushAudioInputStream;\n/**\n * Represents memory backed push audio input stream used for custom audio input configurations.\n * @private\n * @class PushAudioInputStreamImpl\n */\n// tslint:disable-next-line:max-classes-per-file\nvar PushAudioInputStreamImpl = /** @class */ (function (_super) {\n    __extends(PushAudioInputStreamImpl, _super);\n    /**\n     * Creates and initalizes an instance with the given values.\n     * @constructor\n     * @param {AudioStreamFormat} format - The audio stream format.\n     */\n    function PushAudioInputStreamImpl(format) {\n        var _this = _super.call(this) || this;\n        _this.privStream = new Exports_1.Stream();\n        _this.onEvent = function (event) {\n            _this.privEvents.onEvent(event);\n            Exports_1.Events.instance.onEvent(event);\n        };\n        if (format === undefined) {\n            _this.privFormat = AudioStreamFormat_1.AudioStreamFormatImpl.getDefaultInputFormat();\n        }\n        else {\n            _this.privFormat = format;\n        }\n        _this.privEvents = new Exports_1.EventSource();\n        _this.privId = Guid_1.createNoDashGuid();\n        return _this;\n    }\n    Object.defineProperty(PushAudioInputStreamImpl.prototype, \"format\", {\n        /**\n         * Format information for the audio\n         */\n        get: function () {\n            return this.privFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes the audio data specified by making an internal copy of the data.\n     * @member PushAudioInputStreamImpl.prototype.write\n     * @function\n     * @public\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\n     */\n    PushAudioInputStreamImpl.prototype.write = function (dataBuffer) {\n        // Break the data up into smaller chunks if needed.\n        var i;\n        for (i = bufferSize - 1; i < dataBuffer.byteLength; i += bufferSize) {\n            this.privStream.write(dataBuffer.slice(i - (bufferSize - 1), i + 1));\n        }\n        if ((i - (bufferSize - 1)) !== dataBuffer.byteLength) {\n            this.privStream.write(dataBuffer.slice(i - (bufferSize - 1), dataBuffer.byteLength));\n        }\n    };\n    /**\n     * Closes the stream.\n     * @member PushAudioInputStreamImpl.prototype.close\n     * @function\n     * @public\n     */\n    PushAudioInputStreamImpl.prototype.close = function () {\n        this.privStream.close();\n    };\n    PushAudioInputStreamImpl.prototype.id = function () {\n        return this.privId;\n    };\n    PushAudioInputStreamImpl.prototype.turnOn = function () {\n        this.onEvent(new Exports_1.AudioSourceInitializingEvent(this.privId)); // no stream id\n        this.onEvent(new Exports_1.AudioSourceReadyEvent(this.privId));\n        return Exports_1.PromiseHelper.fromResult(true);\n    };\n    PushAudioInputStreamImpl.prototype.attach = function (audioNodeId) {\n        var _this = this;\n        this.onEvent(new Exports_1.AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\n        return this.turnOn()\n            .onSuccessContinueWith(function (_) {\n            // For now we support a single parallel reader of the pushed stream.\n            // So we can simiply hand the stream to the recognizer and let it recognize.\n            return _this.privStream.getReader();\n        })\n            .onSuccessContinueWith(function (streamReader) {\n            _this.onEvent(new Exports_1.AudioStreamNodeAttachedEvent(_this.privId, audioNodeId));\n            return {\n                detach: function () {\n                    streamReader.close();\n                    _this.onEvent(new Exports_1.AudioStreamNodeDetachedEvent(_this.privId, audioNodeId));\n                    _this.turnOff();\n                },\n                id: function () {\n                    return audioNodeId;\n                },\n                read: function () {\n                    return streamReader.read();\n                },\n            };\n        });\n    };\n    PushAudioInputStreamImpl.prototype.detach = function (audioNodeId) {\n        this.onEvent(new Exports_1.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n    };\n    PushAudioInputStreamImpl.prototype.turnOff = function () {\n        return Exports_1.PromiseHelper.fromResult(false);\n    };\n    Object.defineProperty(PushAudioInputStreamImpl.prototype, \"events\", {\n        get: function () {\n            return this.privEvents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PushAudioInputStreamImpl;\n}(PushAudioInputStream));\nexports.PushAudioInputStreamImpl = PushAudioInputStreamImpl;\n/*\n * Represents audio input stream used for custom audio input configurations.\n * @class PullAudioInputStream\n */\n// tslint:disable-next-line:max-classes-per-file\nvar PullAudioInputStream = /** @class */ (function (_super) {\n    __extends(PullAudioInputStream, _super);\n    /**\n     * Creates and initializes and instance.\n     * @constructor\n     */\n    function PullAudioInputStream() {\n        return _super.call(this) || this;\n    }\n    /**\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for\n     * read() and close() methods, using the default format (16 kHz 16bit mono PCM).\n     * @member PullAudioInputStream.create\n     * @function\n     * @public\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object,\n     *        derived from PullAudioInputStreamCustomCallback\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\n     *        returned from the callback's read() method (currently only support 16 kHz 16bit mono PCM).\n     * @returns {PullAudioInputStream} The push audio input stream being created.\n     */\n    PullAudioInputStream.create = function (callback, format) {\n        return new PullAudioInputStreamImpl(callback, format);\n    };\n    return PullAudioInputStream;\n}(AudioInputStream));\nexports.PullAudioInputStream = PullAudioInputStream;\n/**\n * Represents audio input stream used for custom audio input configurations.\n * @private\n * @class PullAudioInputStreamImpl\n */\n// tslint:disable-next-line:max-classes-per-file\nvar PullAudioInputStreamImpl = /** @class */ (function (_super) {\n    __extends(PullAudioInputStreamImpl, _super);\n    /**\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for\n     * read() and close() methods, using the default format (16 kHz 16bit mono PCM).\n     * @constructor\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object,\n     *        derived from PullAudioInputStreamCustomCallback\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\n     *        returned from the callback's read() method (currently only support 16 kHz 16bit mono PCM).\n     */\n    function PullAudioInputStreamImpl(callback, format) {\n        var _this = _super.call(this) || this;\n        _this.onEvent = function (event) {\n            _this.privEvents.onEvent(event);\n            Exports_1.Events.instance.onEvent(event);\n        };\n        if (undefined === format) {\n            _this.privFormat = Exports_2.AudioStreamFormat.getDefaultInputFormat();\n        }\n        else {\n            _this.privFormat = format;\n        }\n        _this.privEvents = new Exports_1.EventSource();\n        _this.privId = Guid_1.createNoDashGuid();\n        _this.privCallback = callback;\n        _this.privIsClosed = false;\n        return _this;\n    }\n    Object.defineProperty(PullAudioInputStreamImpl.prototype, \"format\", {\n        /**\n         * Format information for the audio\n         */\n        get: function () {\n            return this.privFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Closes the stream.\n     * @member PullAudioInputStreamImpl.prototype.close\n     * @function\n     * @public\n     */\n    PullAudioInputStreamImpl.prototype.close = function () {\n        this.privIsClosed = true;\n        this.privCallback.close();\n    };\n    PullAudioInputStreamImpl.prototype.id = function () {\n        return this.privId;\n    };\n    PullAudioInputStreamImpl.prototype.turnOn = function () {\n        this.onEvent(new Exports_1.AudioSourceInitializingEvent(this.privId)); // no stream id\n        this.onEvent(new Exports_1.AudioSourceReadyEvent(this.privId));\n        return Exports_1.PromiseHelper.fromResult(true);\n    };\n    PullAudioInputStreamImpl.prototype.attach = function (audioNodeId) {\n        var _this = this;\n        this.onEvent(new Exports_1.AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\n        return this.turnOn()\n            .onSuccessContinueWith(function (result) {\n            _this.onEvent(new Exports_1.AudioStreamNodeAttachedEvent(_this.privId, audioNodeId));\n            return {\n                detach: function () {\n                    _this.privCallback.close();\n                    _this.onEvent(new Exports_1.AudioStreamNodeDetachedEvent(_this.privId, audioNodeId));\n                    _this.turnOff();\n                },\n                id: function () {\n                    return audioNodeId;\n                },\n                read: function () {\n                    var readBuff = new ArrayBuffer(bufferSize);\n                    var pulledBytes = _this.privCallback.read(readBuff);\n                    return Exports_1.PromiseHelper.fromResult({\n                        buffer: readBuff.slice(0, pulledBytes),\n                        isEnd: _this.privIsClosed,\n                    });\n                },\n            };\n        });\n    };\n    PullAudioInputStreamImpl.prototype.detach = function (audioNodeId) {\n        this.onEvent(new Exports_1.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n    };\n    PullAudioInputStreamImpl.prototype.turnOff = function () {\n        return Exports_1.PromiseHelper.fromResult(false);\n    };\n    Object.defineProperty(PullAudioInputStreamImpl.prototype, \"events\", {\n        get: function () {\n            return this.privEvents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PullAudioInputStreamImpl;\n}(PullAudioInputStream));\nexports.PullAudioInputStreamImpl = PullAudioInputStreamImpl;\n\n//# sourceMappingURL=AudioInputStream.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryParameterNames = /** @class */ (function () {\n    function QueryParameterNames() {\n    }\n    Object.defineProperty(QueryParameterNames, \"TestHooksParamName\", {\n        get: function () {\n            return \"testhooks\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryParameterNames, \"ConnectionIdHeader\", {\n        get: function () {\n            return \"X-ConnectionId\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryParameterNames, \"DeploymentIdParamName\", {\n        get: function () {\n            return \"cid\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryParameterNames, \"FormatParamName\", {\n        get: function () {\n            return \"format\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryParameterNames, \"LanguageParamName\", {\n        get: function () {\n            return \"language\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryParameterNames, \"TranslationFromParamName\", {\n        get: function () {\n            return \"from\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryParameterNames, \"TranslationToParamName\", {\n        get: function () {\n            return \"to\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return QueryParameterNames;\n}());\nexports.QueryParameterNames = QueryParameterNames;\n\n//# sourceMappingURL=QueryParameterNames.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./ConsoleLoggingListener\"));\n__export(require(\"./MicAudioSource\"));\n__export(require(\"./FileAudioSource\"));\n__export(require(\"./OpusRecorder\"));\n__export(require(\"./PCMRecorder\"));\n__export(require(\"./WebsocketConnection\"));\n__export(require(\"./WebsocketMessageAdapter\"));\n__export(require(\"./ReplayableAudioNode\"));\n\n//# sourceMappingURL=Exports.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Exports_1 = require(\"../common/Exports\");\nvar WebsocketMessageAdapter_1 = require(\"./WebsocketMessageAdapter\");\nvar WebsocketConnection = /** @class */ (function () {\n    function WebsocketConnection(uri, queryParameters, headers, messageFormatter, connectionId) {\n        var _this = this;\n        this.privIsDisposed = false;\n        this.dispose = function () {\n            _this.privIsDisposed = true;\n            if (_this.privConnectionMessageAdapter) {\n                _this.privConnectionMessageAdapter.close();\n            }\n        };\n        this.isDisposed = function () {\n            return _this.privIsDisposed;\n        };\n        this.state = function () {\n            return _this.privConnectionMessageAdapter.state;\n        };\n        this.open = function () {\n            return _this.privConnectionMessageAdapter.open();\n        };\n        this.send = function (message) {\n            return _this.privConnectionMessageAdapter.send(message);\n        };\n        this.read = function () {\n            return _this.privConnectionMessageAdapter.read();\n        };\n        if (!uri) {\n            throw new Exports_1.ArgumentNullError(\"uri\");\n        }\n        if (!messageFormatter) {\n            throw new Exports_1.ArgumentNullError(\"messageFormatter\");\n        }\n        this.privMessageFormatter = messageFormatter;\n        var queryParams = \"\";\n        var i = 0;\n        if (queryParameters) {\n            for (var paramName in queryParameters) {\n                if (paramName) {\n                    queryParams += ((i === 0) && (uri.indexOf(\"?\") === -1)) ? \"?\" : \"&\";\n                    var val = encodeURIComponent(queryParameters[paramName]);\n                    queryParams += paramName + \"=\" + val;\n                    i++;\n                }\n            }\n        }\n        if (headers) {\n            for (var headerName in headers) {\n                if (headerName) {\n                    queryParams += i === 0 ? \"?\" : \"&\";\n                    var val = encodeURIComponent(headers[headerName]);\n                    queryParams += headerName + \"=\" + val;\n                    i++;\n                }\n            }\n        }\n        this.privUri = uri + queryParams;\n        this.privId = connectionId ? connectionId : Exports_1.createNoDashGuid();\n        this.privConnectionMessageAdapter = new WebsocketMessageAdapter_1.WebsocketMessageAdapter(this.privUri, this.id, this.privMessageFormatter);\n    }\n    Object.defineProperty(WebsocketConnection.prototype, \"id\", {\n        get: function () {\n            return this.privId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WebsocketConnection.prototype, \"events\", {\n        get: function () {\n            return this.privConnectionMessageAdapter.events;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return WebsocketConnection;\n}());\nexports.WebsocketConnection = WebsocketConnection;\n\n//# sourceMappingURL=WebsocketConnection.js.map\n"],"sourceRoot":""}