{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_string-at.js","webpack:///./src/views/CaptionJoin.vue?776a","webpack:///./src/views/CaptionJoin.vue?6255","webpack:///./node_modules/@aspnet/signalr/dist/esm/ILogger.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/Errors.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/HttpClient.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/TextMessageFormat.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/Loggers.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/Utils.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/HandshakeProtocol.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/IHubProtocol.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/HubConnection.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/ITransport.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/AbortController.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/LongPollingTransport.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/ServerSentEventsTransport.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/WebSocketTransport.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/HttpConnection.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/JsonHubProtocol.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/HubConnectionBuilder.js","webpack:///./node_modules/@aspnet/signalr/dist/esm/index.js","webpack:///src/views/CaptionJoin.vue","webpack:///./src/views/CaptionJoin.vue?b2d4","webpack:///./src/views/CaptionJoin.vue?dedd","webpack:///./node_modules/core-js/modules/_strict-method.js","webpack:///./node_modules/core-js/modules/es6.array.sort.js","webpack:///./node_modules/core-js/modules/es6.string.iterator.js","webpack:///./node_modules/core-js/modules/web.dom.iterable.js"],"names":["toInteger","__webpack_require__","defined","module","exports","TO_STRING","that","pos","a","b","s","String","i","l","length","undefined","charCodeAt","charAt","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CaptionJoin_vue_vue_type_style_index_0_id_344cfede_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CaptionJoin_vue_vue_type_style_index_0_id_344cfede_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","LogLevel","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","id","directives","name","rawName","value","expression","on","change","$event","$$selectedVal","Array","prototype","filter","call","target","options","o","selected","map","val","_value","toLanguageCode","multiple","_l","lang","key","domProps","_v","_s","caption","offset","text","staticRenderFns","__extends","extendStatics","Object","setPrototypeOf","__proto__","d","p","hasOwnProperty","__","constructor","create","HttpError","_super","errorMessage","statusCode","_newTarget","_this","trueProto","Error","TimeoutError","HttpClient_extends","__assign","assign","t","arguments","HttpResponse","statusText","content","HttpClient","get","url","send","method","post","delete","HttpClient_DefaultHttpClient","DefaultHttpClient","logger","request","Promise","resolve","reject","xhr","XMLHttpRequest","open","withCredentials","setRequestHeader","headers","keys","forEach","header","responseType","abortSignal","onabort","abort","timeout","onload","status","response","responseText","onerror","log","Warning","ontimeout","TextMessageFormat","write","output","RecordSeparator","parse","input","messages","split","pop","RecordSeparatorCode","fromCharCode","NullLogger","_logLevel","_message","instance","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","push","Arg","isRequired","isIn","values","getDataDetail","data","includeContent","isArrayBuffer","byteLength","formatArrayBuffer","view","Uint8Array","str","num","pad","toString","substr","sendMessage","transportName","httpClient","accessTokenFactory","logMessageContent","_a","token","_b","Trace","createLogger","Utils_ConsoleLogger","Information","Subject","cancelCallback","observers","item","_i","observer","error","err","complete","subscribe","SubjectSubscription","subject","dispose","index","indexOf","splice","catch","ConsoleLogger","minimumLogLevel","logLevel","message","Critical","console","warn","info","ArrayBuffer","MessageType","HandshakeProtocol_HandshakeProtocol","HandshakeProtocol","writeHandshakeRequest","handshakeRequest","JSON","stringify","parseHandshakeResponse","responseMessage","messageData","remainingData","binaryData","separatorIndex","responseLength","buffer","textData","substring","HttpTransportType","TransferFormat","HubConnection_awaiter","HubConnection_generator","DEFAULT_TIMEOUT_IN_MS","HubConnection_HubConnection","HubConnection","connection","protocol","serverTimeoutInMilliseconds","handshakeProtocol","onreceive","processIncomingData","onclose","connectionClosed","callbacks","methods","closedCallbacks","start","version","Debug","receivedHandshakeResponse","transferFormat","cleanupTimeout","configureTimeout","stop","stream","methodName","args","invocationDescriptor","createStreamInvocation","cancelInvocation","createCancelInvocation","invocationId","cancelMessage","writeMessage","invocationEvent","type","Completion","createInvocation","invoke","completionMessage","newMethod","toLowerCase","off","handlers","removeIdx","callback","processHandshakeResponse","parseMessages","messages_1","Invocation","invokeClientMethod","StreamItem","Ping","Close","features","inherentKeepAlive","timeoutHandle","setTimeout","serverTimeout","invocationMessage","m","c","clearTimeout","nonblocking","StreamInvocation","CancelInvocation","AbortController","isAborted","defineProperty","enumerable","configurable","LongPollingTransport_awaiter","LongPollingTransport_generator","SHUTDOWN_TIMEOUT","LongPollingTransport_LongPollingTransport","LongPollingTransport","shutdownTimeout","pollAbort","aborted","connect","pollOptions","closeError","pollUrl","Binary","signal","updateHeaderToken","Date","now","running","poll","e_1","stopped","shutdownTimer","deleteOptions","ServerSentEventsTransport_awaiter","ServerSentEventsTransport_generator","ServerSentEventsTransport_ServerSentEventsTransport","ServerSentEventsTransport","encodeURIComponent","opened","Text","eventSource","EventSource","onmessage","close","onopen","WebSocketTransport_awaiter","WebSocketTransport_generator","WebSocketTransport_WebSocketTransport","WebSocketTransport","replace","webSocket","WebSocket","binaryType","_event","event","wasClean","code","reason","readyState","OPEN","HttpConnection_awaiter","HttpConnection_generator","MAX_REDIRECTS","HttpConnection_HttpConnection","HttpConnection","baseUrl","resolveUrl","connectionState","startPromise","startInternal","transport","stopError","negotiateResponse","redirects","_loop_1","this_1","state_1","e_2","skipNegotiation","WebSockets","constructTransport","accessToken_1","getNegotiationResponse","accessToken","createTransport","stopConnection","changeState","negotiateUrl","e_3","resolveNegotiateUrl","createConnectUrl","connectionId","requestedTransport","requestedTransferFormat","connectUrl","transports","transports_1","endpoint","ex_1","isITransport","availableTransports","resolveTransport","ServerSentEvents","LongPolling","transferFormats","transportMatches","from","to","lastIndexOf","window","document","aTag","createElement","href","actualTransport","JSON_HUB_PROTOCOL_NAME","JsonHubProtocol_JsonHubProtocol","JsonHubProtocol","hubMessages","parsedMessage","isInvocationMessage","isStreamItemMessage","isCompletionMessage","assertNotEmptyString","HubConnectionBuilder_HubConnectionBuilder","HubConnectionBuilder","configureLogging","logging","isLogger","withUrl","transportTypeOrOptions","httpConnectionOptions","withHubProtocol","build","CaptionJoinvue_type_script_lang_js_","mixins","language_list_mixin","props","clientId","captions","computed","toLanguageCodes","toLanguages","sort","updateLanguageSubscription","_updateLanguageSubscription","asyncToGenerator","regeneratorRuntime","mark","_callee","languageCode","wrap","_context","prev","axios_default","concat","constants","apiBaseUrl","userId","_x","watch","handler","immediate","mounted","_mounted","_callee2","captionsMap","onNewCaption","_context2","localCaption","vue_runtime_esm","nextTick","scrollTo","scrollHeight","documentElement","bind","beforeDestroy","_beforeDestroy","_callee3","_context3","promise_default","all","views_CaptionJoinvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","fails","arg","$export","aFunction","toObject","$sort","test","F","comparefn","$at","iterated","_t","point","O","$iterators","getKeys","redefine","global","hide","Iterators","wks","ITERATOR","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","NAME","explicit","Collection","proto"],"mappings":"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","file":"js/chunk-6d34d1d6.edc1db89.js","sourcesContent":["var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CaptionJoin.vue?vue&type=style&index=0&id=344cfede&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CaptionJoin.vue?vue&type=style&index=0&id=344cfede&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"caption-join\"},[_c('div',{attrs:{\"id\":\"language-select\"}},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.toLanguageCode),expression:\"toLanguageCode\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.toLanguageCode=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.toLanguageCodes),function(lang){return _c('option',{key:lang,domProps:{\"value\":lang}},[_vm._v(\"\\n        \"+_vm._s(lang)+\"\\n      \")])}),0)]),_c('div',{staticClass:\"caption\",attrs:{\"id\":\"captions-text\"}},_vm._l((_vm.captions),function(caption){return _c('div',{key:caption.offset},[_vm._v(_vm._s(caption.text))])}),0)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\r\n    /** Log level for low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\r\n    /** Log level for informational diagnostic messages. */\r\n    LogLevel[LogLevel[\"Information\"] = 2] = \"Information\";\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    LogLevel[LogLevel[\"None\"] = 6] = \"None\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=ILogger.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/** Error thrown when an HTTP request fails. */\r\nvar HttpError = /** @class */ (function (_super) {\r\n    __extends(HttpError, _super);\r\n    /** Constructs a new instance of {@link @aspnet/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    function HttpError(errorMessage, statusCode) {\r\n        var _newTarget = this.constructor;\r\n        var _this = this;\r\n        var trueProto = _newTarget.prototype;\r\n        _this = _super.call(this, errorMessage) || this;\r\n        _this.statusCode = statusCode;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        _this.__proto__ = trueProto;\r\n        return _this;\r\n    }\r\n    return HttpError;\r\n}(Error));\r\nexport { HttpError };\r\n/** Error thrown when a timeout elapses. */\r\nvar TimeoutError = /** @class */ (function (_super) {\r\n    __extends(TimeoutError, _super);\r\n    /** Constructs a new instance of {@link @aspnet/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    function TimeoutError(errorMessage) {\r\n        var _newTarget = this.constructor;\r\n        if (errorMessage === void 0) { errorMessage = \"A timeout occurred.\"; }\r\n        var _this = this;\r\n        var trueProto = _newTarget.prototype;\r\n        _this = _super.call(this, errorMessage) || this;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        _this.__proto__ = trueProto;\r\n        return _this;\r\n    }\r\n    return TimeoutError;\r\n}(Error));\r\nexport { TimeoutError };\r\n//# sourceMappingURL=Errors.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\n/** Represents an HTTP response. */\r\nvar HttpResponse = /** @class */ (function () {\r\n    function HttpResponse(statusCode, statusText, content) {\r\n        this.statusCode = statusCode;\r\n        this.statusText = statusText;\r\n        this.content = content;\r\n    }\r\n    return HttpResponse;\r\n}());\r\nexport { HttpResponse };\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nvar HttpClient = /** @class */ (function () {\r\n    function HttpClient() {\r\n    }\r\n    HttpClient.prototype.get = function (url, options) {\r\n        return this.send(__assign({}, options, { method: \"GET\", url: url }));\r\n    };\r\n    HttpClient.prototype.post = function (url, options) {\r\n        return this.send(__assign({}, options, { method: \"POST\", url: url }));\r\n    };\r\n    HttpClient.prototype.delete = function (url, options) {\r\n        return this.send(__assign({}, options, { method: \"DELETE\", url: url }));\r\n    };\r\n    return HttpClient;\r\n}());\r\nexport { HttpClient };\r\n/** Default implementation of {@link @aspnet/signalr.HttpClient}. */\r\nvar DefaultHttpClient = /** @class */ (function (_super) {\r\n    __extends(DefaultHttpClient, _super);\r\n    /** Creates a new instance of the {@link @aspnet/signalr.DefaultHttpClient}, using the provided {@link @aspnet/signalr.ILogger} to log messages. */\r\n    function DefaultHttpClient(logger) {\r\n        var _this = _super.call(this) || this;\r\n        _this.logger = logger;\r\n        return _this;\r\n    }\r\n    /** @inheritDoc */\r\n    DefaultHttpClient.prototype.send = function (request) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open(request.method, request.url, true);\r\n            xhr.withCredentials = true;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n            if (request.headers) {\r\n                Object.keys(request.headers)\r\n                    .forEach(function (header) { return xhr.setRequestHeader(header, request.headers[header]); });\r\n            }\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = function () {\r\n                    xhr.abort();\r\n                };\r\n            }\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n            xhr.onload = function () {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                }\r\n                else {\r\n                    reject(new HttpError(xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n            xhr.onerror = function () {\r\n                _this.logger.log(LogLevel.Warning, \"Error from HTTP request. \" + xhr.status + \": \" + xhr.statusText);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n            xhr.ontimeout = function () {\r\n                _this.logger.log(LogLevel.Warning, \"Timeout from HTTP request.\");\r\n                reject(new TimeoutError());\r\n            };\r\n            xhr.send(request.content || \"\");\r\n        });\r\n    };\r\n    return DefaultHttpClient;\r\n}(HttpClient));\r\nexport { DefaultHttpClient };\r\n//# sourceMappingURL=HttpClient.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// Not exported from index\r\n/** @private */\r\nvar TextMessageFormat = /** @class */ (function () {\r\n    function TextMessageFormat() {\r\n    }\r\n    TextMessageFormat.write = function (output) {\r\n        return \"\" + output + TextMessageFormat.RecordSeparator;\r\n    };\r\n    TextMessageFormat.parse = function (input) {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n        var messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    };\r\n    TextMessageFormat.RecordSeparatorCode = 0x1e;\r\n    TextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n    return TextMessageFormat;\r\n}());\r\nexport { TextMessageFormat };\r\n//# sourceMappingURL=TextMessageFormat.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n/** A logger that does nothing when log messages are sent to it. */\r\nvar NullLogger = /** @class */ (function () {\r\n    function NullLogger() {\r\n    }\r\n    /** @inheritDoc */\r\n    // tslint:disable-next-line\r\n    NullLogger.prototype.log = function (_logLevel, _message) {\r\n    };\r\n    /** The singleton instance of the {@link @aspnet/signalr.NullLogger}. */\r\n    NullLogger.instance = new NullLogger();\r\n    return NullLogger;\r\n}());\r\nexport { NullLogger };\r\n//# sourceMappingURL=Loggers.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\n/** @private */\r\nvar Arg = /** @class */ (function () {\r\n    function Arg() {\r\n    }\r\n    Arg.isRequired = function (val, name) {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(\"The '\" + name + \"' argument is required.\");\r\n        }\r\n    };\r\n    Arg.isIn = function (val, values, name) {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(\"Unknown \" + name + \" value: \" + val + \".\");\r\n        }\r\n    };\r\n    return Arg;\r\n}());\r\nexport { Arg };\r\n/** @private */\r\nexport function getDataDetail(data, includeContent) {\r\n    var length = null;\r\n    if (isArrayBuffer(data)) {\r\n        length = \"Binary data of length \" + data.byteLength;\r\n        if (includeContent) {\r\n            length += \". Content: '\" + formatArrayBuffer(data) + \"'\";\r\n        }\r\n    }\r\n    else if (typeof data === \"string\") {\r\n        length = \"String data of length \" + data.length;\r\n        if (includeContent) {\r\n            length += \". Content: '\" + data + \"'.\";\r\n        }\r\n    }\r\n    return length;\r\n}\r\n/** @private */\r\nexport function formatArrayBuffer(data) {\r\n    var view = new Uint8Array(data);\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    var str = \"\";\r\n    view.forEach(function (num) {\r\n        var pad = num < 16 ? \"0\" : \"\";\r\n        str += \"0x\" + pad + num.toString(16) + \" \";\r\n    });\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n/** @private */\r\nexport function sendMessage(logger, transportName, httpClient, url, accessTokenFactory, content, logMessageContent) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var _a, headers, token, response;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, accessTokenFactory()];\r\n                case 1:\r\n                    token = _b.sent();\r\n                    if (token) {\r\n                        headers = (_a = {},\r\n                            _a[\"Authorization\"] = \"Bearer \" + token,\r\n                            _a);\r\n                    }\r\n                    logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) sending data. \" + getDataDetail(content, logMessageContent) + \".\");\r\n                    return [4 /*yield*/, httpClient.post(url, {\r\n                            content: content,\r\n                            headers: headers,\r\n                        })];\r\n                case 2:\r\n                    response = _b.sent();\r\n                    logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) request complete. Response status: \" + response.statusCode + \".\");\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** @private */\r\nexport function createLogger(logger) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n    if (logger.log) {\r\n        return logger;\r\n    }\r\n    return new ConsoleLogger(logger);\r\n}\r\n/** @private */\r\nvar Subject = /** @class */ (function () {\r\n    function Subject(cancelCallback) {\r\n        this.observers = [];\r\n        this.cancelCallback = cancelCallback;\r\n    }\r\n    Subject.prototype.next = function (item) {\r\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n            var observer = _a[_i];\r\n            observer.next(item);\r\n        }\r\n    };\r\n    Subject.prototype.error = function (err) {\r\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n            var observer = _a[_i];\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    };\r\n    Subject.prototype.complete = function () {\r\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n            var observer = _a[_i];\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    };\r\n    Subject.prototype.subscribe = function (observer) {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    };\r\n    return Subject;\r\n}());\r\nexport { Subject };\r\n/** @private */\r\nvar SubjectSubscription = /** @class */ (function () {\r\n    function SubjectSubscription(subject, observer) {\r\n        this.subject = subject;\r\n        this.observer = observer;\r\n    }\r\n    SubjectSubscription.prototype.dispose = function () {\r\n        var index = this.subject.observers.indexOf(this.observer);\r\n        if (index > -1) {\r\n            this.subject.observers.splice(index, 1);\r\n        }\r\n        if (this.subject.observers.length === 0) {\r\n            this.subject.cancelCallback().catch(function (_) { });\r\n        }\r\n    };\r\n    return SubjectSubscription;\r\n}());\r\nexport { SubjectSubscription };\r\n/** @private */\r\nvar ConsoleLogger = /** @class */ (function () {\r\n    function ConsoleLogger(minimumLogLevel) {\r\n        this.minimumLogLevel = minimumLogLevel;\r\n    }\r\n    ConsoleLogger.prototype.log = function (logLevel, message) {\r\n        if (logLevel >= this.minimumLogLevel) {\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    console.error(LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    console.warn(LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    console.info(LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    console.log(LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    return ConsoleLogger;\r\n}());\r\nexport { ConsoleLogger };\r\n/** @private */\r\nexport function isArrayBuffer(val) {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n//# sourceMappingURL=Utils.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n/** @private */\r\nvar HandshakeProtocol = /** @class */ (function () {\r\n    function HandshakeProtocol() {\r\n    }\r\n    // Handshake request is always JSON\r\n    HandshakeProtocol.prototype.writeHandshakeRequest = function (handshakeRequest) {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    };\r\n    HandshakeProtocol.prototype.parseHandshakeResponse = function (data) {\r\n        var responseMessage;\r\n        var messageData;\r\n        var remainingData;\r\n        if (isArrayBuffer(data)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            var binaryData = new Uint8Array(data);\r\n            var separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            var responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, binaryData.slice(0, responseLength));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        }\r\n        else {\r\n            var textData = data;\r\n            var separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            var responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n        // At this point we should have just the single handshake message\r\n        var messages = TextMessageFormat.parse(messageData);\r\n        responseMessage = JSON.parse(messages[0]);\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    };\r\n    return HandshakeProtocol;\r\n}());\r\nexport { HandshakeProtocol };\r\n//# sourceMappingURL=HandshakeProtocol.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n/** Defines the type of a Hub Message. */\r\nexport var MessageType;\r\n(function (MessageType) {\r\n    /** Indicates the message is an Invocation message and implements the {@link @aspnet/signalr.InvocationMessage} interface. */\r\n    MessageType[MessageType[\"Invocation\"] = 1] = \"Invocation\";\r\n    /** Indicates the message is a StreamItem message and implements the {@link @aspnet/signalr.StreamItemMessage} interface. */\r\n    MessageType[MessageType[\"StreamItem\"] = 2] = \"StreamItem\";\r\n    /** Indicates the message is a Completion message and implements the {@link @aspnet/signalr.CompletionMessage} interface. */\r\n    MessageType[MessageType[\"Completion\"] = 3] = \"Completion\";\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @aspnet/signalr.StreamInvocationMessage} interface. */\r\n    MessageType[MessageType[\"StreamInvocation\"] = 4] = \"StreamInvocation\";\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @aspnet/signalr.CancelInvocationMessage} interface. */\r\n    MessageType[MessageType[\"CancelInvocation\"] = 5] = \"CancelInvocation\";\r\n    /** Indicates the message is a Ping message and implements the {@link @aspnet/signalr.PingMessage} interface. */\r\n    MessageType[MessageType[\"Ping\"] = 6] = \"Ping\";\r\n    /** Indicates the message is a Close message and implements the {@link @aspnet/signalr.CloseMessage} interface. */\r\n    MessageType[MessageType[\"Close\"] = 7] = \"Close\";\r\n})(MessageType || (MessageType = {}));\r\n//# sourceMappingURL=IHubProtocol.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { HandshakeProtocol } from \"./HandshakeProtocol\";\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Arg, Subject } from \"./Utils\";\r\nvar DEFAULT_TIMEOUT_IN_MS = 30 * 1000;\r\n/** Represents a connection to a SignalR Hub. */\r\nvar HubConnection = /** @class */ (function () {\r\n    function HubConnection(connection, logger, protocol) {\r\n        var _this = this;\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;\r\n        this.logger = logger;\r\n        this.protocol = protocol;\r\n        this.connection = connection;\r\n        this.handshakeProtocol = new HandshakeProtocol();\r\n        this.connection.onreceive = function (data) { return _this.processIncomingData(data); };\r\n        this.connection.onclose = function (error) { return _this.connectionClosed(error); };\r\n        this.callbacks = {};\r\n        this.methods = {};\r\n        this.closedCallbacks = [];\r\n        this.id = 0;\r\n    }\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    HubConnection.create = function (connection, logger, protocol) {\r\n        return new HubConnection(connection, logger, protocol);\r\n    };\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    HubConnection.prototype.start = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var handshakeRequest;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        handshakeRequest = {\r\n                            protocol: this.protocol.name,\r\n                            version: this.protocol.version,\r\n                        };\r\n                        this.logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n                        this.receivedHandshakeResponse = false;\r\n                        return [4 /*yield*/, this.connection.start(this.protocol.transferFormat)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        this.logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n                        return [4 /*yield*/, this.connection.send(this.handshakeProtocol.writeHandshakeRequest(handshakeRequest))];\r\n                    case 2:\r\n                        _a.sent();\r\n                        this.logger.log(LogLevel.Information, \"Using HubProtocol '\" + this.protocol.name + \"'.\");\r\n                        // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n                        this.cleanupTimeout();\r\n                        this.configureTimeout();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    HubConnection.prototype.stop = function () {\r\n        this.logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n        this.cleanupTimeout();\r\n        return this.connection.stop();\r\n    };\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    HubConnection.prototype.stream = function (methodName) {\r\n        var _this = this;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var invocationDescriptor = this.createStreamInvocation(methodName, args);\r\n        var subject = new Subject(function () {\r\n            var cancelInvocation = _this.createCancelInvocation(invocationDescriptor.invocationId);\r\n            var cancelMessage = _this.protocol.writeMessage(cancelInvocation);\r\n            delete _this.callbacks[invocationDescriptor.invocationId];\r\n            return _this.connection.send(cancelMessage);\r\n        });\r\n        this.callbacks[invocationDescriptor.invocationId] = function (invocationEvent, error) {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            }\r\n            if (invocationEvent.type === MessageType.Completion) {\r\n                if (invocationEvent.error) {\r\n                    subject.error(new Error(invocationEvent.error));\r\n                }\r\n                else {\r\n                    subject.complete();\r\n                }\r\n            }\r\n            else {\r\n                subject.next((invocationEvent.item));\r\n            }\r\n        };\r\n        var message = this.protocol.writeMessage(invocationDescriptor);\r\n        this.connection.send(message)\r\n            .catch(function (e) {\r\n            subject.error(e);\r\n            delete _this.callbacks[invocationDescriptor.invocationId];\r\n        });\r\n        return subject;\r\n    };\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    HubConnection.prototype.send = function (methodName) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var invocationDescriptor = this.createInvocation(methodName, args, true);\r\n        var message = this.protocol.writeMessage(invocationDescriptor);\r\n        return this.connection.send(message);\r\n    };\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    HubConnection.prototype.invoke = function (methodName) {\r\n        var _this = this;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var invocationDescriptor = this.createInvocation(methodName, args, false);\r\n        var p = new Promise(function (resolve, reject) {\r\n            _this.callbacks[invocationDescriptor.invocationId] = function (invocationEvent, error) {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    var completionMessage = invocationEvent;\r\n                    if (completionMessage.error) {\r\n                        reject(new Error(completionMessage.error));\r\n                    }\r\n                    else {\r\n                        resolve(completionMessage.result);\r\n                    }\r\n                }\r\n                else {\r\n                    reject(new Error(\"Unexpected message type: \" + invocationEvent.type));\r\n                }\r\n            };\r\n            var message = _this.protocol.writeMessage(invocationDescriptor);\r\n            _this.connection.send(message)\r\n                .catch(function (e) {\r\n                reject(e);\r\n                delete _this.callbacks[invocationDescriptor.invocationId];\r\n            });\r\n        });\r\n        return p;\r\n    };\r\n    /** Registers a handler that will be invoked when the hub method with the specified method name is invoked.\r\n     *\r\n     * @param {string} methodName The name of the hub method to define.\r\n     * @param {Function} newMethod The handler that will be raised when the hub method is invoked.\r\n     */\r\n    HubConnection.prototype.on = function (methodName, newMethod) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        if (!this.methods[methodName]) {\r\n            this.methods[methodName] = [];\r\n        }\r\n        // Preventing adding the same handler multiple times.\r\n        if (this.methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n        this.methods[methodName].push(newMethod);\r\n    };\r\n    HubConnection.prototype.off = function (methodName, method) {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        var handlers = this.methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            var removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this.methods[methodName];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            delete this.methods[methodName];\r\n        }\r\n    };\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    HubConnection.prototype.onclose = function (callback) {\r\n        if (callback) {\r\n            this.closedCallbacks.push(callback);\r\n        }\r\n    };\r\n    HubConnection.prototype.processIncomingData = function (data) {\r\n        this.cleanupTimeout();\r\n        if (!this.receivedHandshakeResponse) {\r\n            data = this.processHandshakeResponse(data);\r\n            this.receivedHandshakeResponse = true;\r\n        }\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            var messages = this.protocol.parseMessages(data, this.logger);\r\n            for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {\r\n                var message = messages_1[_i];\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this.invokeClientMethod(message);\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion:\r\n                        var callback = this.callbacks[message.invocationId];\r\n                        if (callback != null) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this.callbacks[message.invocationId];\r\n                            }\r\n                            callback(message);\r\n                        }\r\n                        break;\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close:\r\n                        this.logger.log(LogLevel.Information, \"Close message received from server.\");\r\n                        // We don't want to wait on the stop itself.\r\n                        // tslint:disable-next-line:no-floating-promises\r\n                        this.connection.stop(message.error ? new Error(\"Server returned an error on close: \" + message.error) : null);\r\n                        break;\r\n                    default:\r\n                        this.logger.log(LogLevel.Warning, \"Invalid message type: \" + message.type);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        this.configureTimeout();\r\n    };\r\n    HubConnection.prototype.processHandshakeResponse = function (data) {\r\n        var _a;\r\n        var responseMessage;\r\n        var remainingData;\r\n        try {\r\n            _a = this.handshakeProtocol.parseHandshakeResponse(data), remainingData = _a[0], responseMessage = _a[1];\r\n        }\r\n        catch (e) {\r\n            var message = \"Error parsing handshake response: \" + e;\r\n            this.logger.log(LogLevel.Error, message);\r\n            var error = new Error(message);\r\n            // We don't want to wait on the stop itself.\r\n            // tslint:disable-next-line:no-floating-promises\r\n            this.connection.stop(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            var message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this.logger.log(LogLevel.Error, message);\r\n            // We don't want to wait on the stop itself.\r\n            // tslint:disable-next-line:no-floating-promises\r\n            this.connection.stop(new Error(message));\r\n        }\r\n        else {\r\n            this.logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n        return remainingData;\r\n    };\r\n    HubConnection.prototype.configureTimeout = function () {\r\n        var _this = this;\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this.timeoutHandle = setTimeout(function () { return _this.serverTimeout(); }, this.serverTimeoutInMilliseconds);\r\n        }\r\n    };\r\n    HubConnection.prototype.serverTimeout = function () {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise.\r\n        // tslint:disable-next-line:no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    };\r\n    HubConnection.prototype.invokeClientMethod = function (invocationMessage) {\r\n        var _this = this;\r\n        var methods = this.methods[invocationMessage.target.toLowerCase()];\r\n        if (methods) {\r\n            methods.forEach(function (m) { return m.apply(_this, invocationMessage.arguments); });\r\n            if (invocationMessage.invocationId) {\r\n                // This is not supported in v1. So we return an error to avoid blocking the server waiting for the response.\r\n                var message = \"Server requested a response, which is not supported in this version of the client.\";\r\n                this.logger.log(LogLevel.Error, message);\r\n                // We don't need to wait on this Promise.\r\n                // tslint:disable-next-line:no-floating-promises\r\n                this.connection.stop(new Error(message));\r\n            }\r\n        }\r\n        else {\r\n            this.logger.log(LogLevel.Warning, \"No client method with the name '\" + invocationMessage.target + \"' found.\");\r\n        }\r\n    };\r\n    HubConnection.prototype.connectionClosed = function (error) {\r\n        var _this = this;\r\n        var callbacks = this.callbacks;\r\n        this.callbacks = {};\r\n        Object.keys(callbacks)\r\n            .forEach(function (key) {\r\n            var callback = callbacks[key];\r\n            callback(undefined, error ? error : new Error(\"Invocation canceled due to connection being closed.\"));\r\n        });\r\n        this.cleanupTimeout();\r\n        this.closedCallbacks.forEach(function (c) { return c.apply(_this, [error]); });\r\n    };\r\n    HubConnection.prototype.cleanupTimeout = function () {\r\n        if (this.timeoutHandle) {\r\n            clearTimeout(this.timeoutHandle);\r\n        }\r\n    };\r\n    HubConnection.prototype.createInvocation = function (methodName, args, nonblocking) {\r\n        if (nonblocking) {\r\n            return {\r\n                arguments: args,\r\n                target: methodName,\r\n                type: MessageType.Invocation,\r\n            };\r\n        }\r\n        else {\r\n            var id = this.id;\r\n            this.id++;\r\n            return {\r\n                arguments: args,\r\n                invocationId: id.toString(),\r\n                target: methodName,\r\n                type: MessageType.Invocation,\r\n            };\r\n        }\r\n    };\r\n    HubConnection.prototype.createStreamInvocation = function (methodName, args) {\r\n        var id = this.id;\r\n        this.id++;\r\n        return {\r\n            arguments: args,\r\n            invocationId: id.toString(),\r\n            target: methodName,\r\n            type: MessageType.StreamInvocation,\r\n        };\r\n    };\r\n    HubConnection.prototype.createCancelInvocation = function (id) {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    };\r\n    return HubConnection;\r\n}());\r\nexport { HubConnection };\r\n//# sourceMappingURL=HubConnection.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport var HttpTransportType;\r\n(function (HttpTransportType) {\r\n    /** Specifies no transport preference. */\r\n    HttpTransportType[HttpTransportType[\"None\"] = 0] = \"None\";\r\n    /** Specifies the WebSockets transport. */\r\n    HttpTransportType[HttpTransportType[\"WebSockets\"] = 1] = \"WebSockets\";\r\n    /** Specifies the Server-Sent Events transport. */\r\n    HttpTransportType[HttpTransportType[\"ServerSentEvents\"] = 2] = \"ServerSentEvents\";\r\n    /** Specifies the Long Polling transport. */\r\n    HttpTransportType[HttpTransportType[\"LongPolling\"] = 4] = \"LongPolling\";\r\n})(HttpTransportType || (HttpTransportType = {}));\r\n/** Specifies the transfer format for a connection. */\r\nexport var TransferFormat;\r\n(function (TransferFormat) {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Text\"] = 1] = \"Text\";\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Binary\"] = 2] = \"Binary\";\r\n})(TransferFormat || (TransferFormat = {}));\r\n//# sourceMappingURL=ITransport.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n// Not exported from index.\r\n/** @private */\r\nvar AbortController = /** @class */ (function () {\r\n    function AbortController() {\r\n        this.isAborted = false;\r\n    }\r\n    AbortController.prototype.abort = function () {\r\n        if (!this.isAborted) {\r\n            this.isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(AbortController.prototype, \"signal\", {\r\n        get: function () {\r\n            return this;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AbortController.prototype, \"aborted\", {\r\n        get: function () {\r\n            return this.isAborted;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AbortController;\r\n}());\r\nexport { AbortController };\r\n//# sourceMappingURL=AbortController.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, sendMessage } from \"./Utils\";\r\nvar SHUTDOWN_TIMEOUT = 5 * 1000;\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nvar LongPollingTransport = /** @class */ (function () {\r\n    function LongPollingTransport(httpClient, accessTokenFactory, logger, logMessageContent, shutdownTimeout) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory || (function () { return null; });\r\n        this.logger = logger;\r\n        this.pollAbort = new AbortController();\r\n        this.logMessageContent = logMessageContent;\r\n        this.shutdownTimeout = shutdownTimeout || SHUTDOWN_TIMEOUT;\r\n    }\r\n    Object.defineProperty(LongPollingTransport.prototype, \"pollAborted\", {\r\n        // This is an internal type, not exported from 'index' so this is really just internal.\r\n        get: function () {\r\n            return this.pollAbort.aborted;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LongPollingTransport.prototype.connect = function (url, transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pollOptions, token, closeError, pollUrl, response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        Arg.isRequired(url, \"url\");\r\n                        Arg.isRequired(transferFormat, \"transferFormat\");\r\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n                        this.url = url;\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting\");\r\n                        if (transferFormat === TransferFormat.Binary && (typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n                            // This will work if we fix: https://github.com/aspnet/SignalR/issues/742\r\n                            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n                        }\r\n                        pollOptions = {\r\n                            abortSignal: this.pollAbort.signal,\r\n                            headers: {},\r\n                            timeout: 90000,\r\n                        };\r\n                        if (transferFormat === TransferFormat.Binary) {\r\n                            pollOptions.responseType = \"arraybuffer\";\r\n                        }\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        this.updateHeaderToken(pollOptions, token);\r\n                        pollUrl = url + \"&_=\" + Date.now();\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) polling: \" + pollUrl);\r\n                        return [4 /*yield*/, this.httpClient.get(pollUrl, pollOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        if (response.statusCode !== 200) {\r\n                            this.logger.log(LogLevel.Error, \"(LongPolling transport) Unexpected response code: \" + response.statusCode);\r\n                            // Mark running as false so that the poll immediately ends and runs the close logic\r\n                            closeError = new HttpError(response.statusText, response.statusCode);\r\n                            this.running = false;\r\n                        }\r\n                        else {\r\n                            this.running = true;\r\n                        }\r\n                        // tslint:disable-next-line:no-floating-promises\r\n                        this.poll(this.url, pollOptions, closeError);\r\n                        return [2 /*return*/, Promise.resolve()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.updateHeaderToken = function (request, token) {\r\n        if (token) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            request.headers[\"Authorization\"] = \"Bearer \" + token;\r\n            return;\r\n        }\r\n        // tslint:disable-next-line:no-string-literal\r\n        if (request.headers[\"Authorization\"]) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            delete request.headers[\"Authorization\"];\r\n        }\r\n    };\r\n    LongPollingTransport.prototype.poll = function (url, pollOptions, closeError) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token, pollUrl, response, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, , 8, 9]);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!this.running) return [3 /*break*/, 7];\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 2:\r\n                        token = _a.sent();\r\n                        this.updateHeaderToken(pollOptions, token);\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _a.trys.push([3, 5, , 6]);\r\n                        pollUrl = url + \"&_=\" + Date.now();\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) polling: \" + pollUrl);\r\n                        return [4 /*yield*/, this.httpClient.get(pollUrl, pollOptions)];\r\n                    case 4:\r\n                        response = _a.sent();\r\n                        if (response.statusCode === 204) {\r\n                            this.logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server\");\r\n                            this.running = false;\r\n                        }\r\n                        else if (response.statusCode !== 200) {\r\n                            this.logger.log(LogLevel.Error, \"(LongPolling transport) Unexpected response code: \" + response.statusCode);\r\n                            // Unexpected status code\r\n                            closeError = new HttpError(response.statusText, response.statusCode);\r\n                            this.running = false;\r\n                        }\r\n                        else {\r\n                            // Process the response\r\n                            if (response.content) {\r\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) data received. \" + getDataDetail(response.content, this.logMessageContent));\r\n                                if (this.onreceive) {\r\n                                    this.onreceive(response.content);\r\n                                }\r\n                            }\r\n                            else {\r\n                                // This is another way timeout manifest.\r\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                            }\r\n                        }\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        e_1 = _a.sent();\r\n                        if (!this.running) {\r\n                            // Log but disregard errors that occur after we were stopped by DELETE\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll errored after shutdown: \" + e_1.message);\r\n                        }\r\n                        else {\r\n                            if (e_1 instanceof TimeoutError) {\r\n                                // Ignore timeouts and reissue the poll.\r\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                            }\r\n                            else {\r\n                                // Close the connection with the error as the result.\r\n                                closeError = e_1;\r\n                                this.running = false;\r\n                            }\r\n                        }\r\n                        return [3 /*break*/, 6];\r\n                    case 6: return [3 /*break*/, 1];\r\n                    case 7: return [3 /*break*/, 9];\r\n                    case 8:\r\n                        // Indicate that we've stopped so the shutdown timer doesn't get registered.\r\n                        this.stopped = true;\r\n                        // Clean up the shutdown timer if it was registered\r\n                        if (this.shutdownTimer) {\r\n                            clearTimeout(this.shutdownTimer);\r\n                        }\r\n                        // Fire our onclosed event\r\n                        if (this.onclose) {\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Firing onclose event. Error: \" + (closeError || \"<undefined>\"));\r\n                            this.onclose(closeError);\r\n                        }\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Transport finished.\");\r\n                        return [7 /*endfinally*/];\r\n                    case 9: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.send = function (data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!this.running) {\r\n                    return [2 /*return*/, Promise.reject(new Error(\"Cannot send until the transport is connected\"))];\r\n                }\r\n                return [2 /*return*/, sendMessage(this.logger, \"LongPolling\", this.httpClient, this.url, this.accessTokenFactory, data, this.logMessageContent)];\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.stop = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var deleteOptions, token;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, , 3, 4]);\r\n                        this.running = false;\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) sending DELETE request to \" + this.url + \".\");\r\n                        deleteOptions = {\r\n                            headers: {},\r\n                        };\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        this.updateHeaderToken(deleteOptions, token);\r\n                        return [4 /*yield*/, this.httpClient.delete(this.url, deleteOptions)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request accepted.\");\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        // Abort the poll after the shutdown timeout if the server doesn't stop the poll.\r\n                        if (!this.stopped) {\r\n                            this.shutdownTimer = setTimeout(function () {\r\n                                _this.logger.log(LogLevel.Warning, \"(LongPolling transport) server did not terminate after DELETE request, canceling poll.\");\r\n                                // Abort any outstanding poll\r\n                                _this.pollAbort.abort();\r\n                            }, this.shutdownTimeout);\r\n                        }\r\n                        return [7 /*endfinally*/];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return LongPollingTransport;\r\n}());\r\nexport { LongPollingTransport };\r\n//# sourceMappingURL=LongPollingTransport.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, sendMessage } from \"./Utils\";\r\n/** @private */\r\nvar ServerSentEventsTransport = /** @class */ (function () {\r\n    function ServerSentEventsTransport(httpClient, accessTokenFactory, logger, logMessageContent) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory || (function () { return null; });\r\n        this.logger = logger;\r\n        this.logMessageContent = logMessageContent;\r\n    }\r\n    ServerSentEventsTransport.prototype.connect = function (url, transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        Arg.isRequired(url, \"url\");\r\n                        Arg.isRequired(transferFormat, \"transferFormat\");\r\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n                        if (typeof (EventSource) === \"undefined\") {\r\n                            throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                        }\r\n                        this.logger.log(LogLevel.Trace, \"(SSE transport) Connecting\");\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        if (token) {\r\n                            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + (\"access_token=\" + encodeURIComponent(token));\r\n                        }\r\n                        this.url = url;\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var opened = false;\r\n                                if (transferFormat !== TransferFormat.Text) {\r\n                                    reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                                }\r\n                                var eventSource = new EventSource(url, { withCredentials: true });\r\n                                try {\r\n                                    eventSource.onmessage = function (e) {\r\n                                        if (_this.onreceive) {\r\n                                            try {\r\n                                                _this.logger.log(LogLevel.Trace, \"(SSE transport) data received. \" + getDataDetail(e.data, _this.logMessageContent) + \".\");\r\n                                                _this.onreceive(e.data);\r\n                                            }\r\n                                            catch (error) {\r\n                                                if (_this.onclose) {\r\n                                                    _this.onclose(error);\r\n                                                }\r\n                                                return;\r\n                                            }\r\n                                        }\r\n                                    };\r\n                                    eventSource.onerror = function (e) {\r\n                                        var error = new Error(e.message || \"Error occurred\");\r\n                                        if (opened) {\r\n                                            _this.close(error);\r\n                                        }\r\n                                        else {\r\n                                            reject(error);\r\n                                        }\r\n                                    };\r\n                                    eventSource.onopen = function () {\r\n                                        _this.logger.log(LogLevel.Information, \"SSE connected to \" + _this.url);\r\n                                        _this.eventSource = eventSource;\r\n                                        opened = true;\r\n                                        resolve();\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    return Promise.reject(e);\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ServerSentEventsTransport.prototype.send = function (data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!this.eventSource) {\r\n                    return [2 /*return*/, Promise.reject(new Error(\"Cannot send until the transport is connected\"))];\r\n                }\r\n                return [2 /*return*/, sendMessage(this.logger, \"SSE\", this.httpClient, this.url, this.accessTokenFactory, data, this.logMessageContent)];\r\n            });\r\n        });\r\n    };\r\n    ServerSentEventsTransport.prototype.stop = function () {\r\n        this.close();\r\n        return Promise.resolve();\r\n    };\r\n    ServerSentEventsTransport.prototype.close = function (e) {\r\n        if (this.eventSource) {\r\n            this.eventSource.close();\r\n            this.eventSource = null;\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    };\r\n    return ServerSentEventsTransport;\r\n}());\r\nexport { ServerSentEventsTransport };\r\n//# sourceMappingURL=ServerSentEventsTransport.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail } from \"./Utils\";\r\n/** @private */\r\nvar WebSocketTransport = /** @class */ (function () {\r\n    function WebSocketTransport(accessTokenFactory, logger, logMessageContent) {\r\n        this.logger = logger;\r\n        this.accessTokenFactory = accessTokenFactory || (function () { return null; });\r\n        this.logMessageContent = logMessageContent;\r\n    }\r\n    WebSocketTransport.prototype.connect = function (url, transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        Arg.isRequired(url, \"url\");\r\n                        Arg.isRequired(transferFormat, \"transferFormat\");\r\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n                        if (typeof (WebSocket) === \"undefined\") {\r\n                            throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                        }\r\n                        this.logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting\");\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        if (token) {\r\n                            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + (\"access_token=\" + encodeURIComponent(token));\r\n                        }\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                url = url.replace(/^http/, \"ws\");\r\n                                var webSocket = new WebSocket(url);\r\n                                if (transferFormat === TransferFormat.Binary) {\r\n                                    webSocket.binaryType = \"arraybuffer\";\r\n                                }\r\n                                // tslint:disable-next-line:variable-name\r\n                                webSocket.onopen = function (_event) {\r\n                                    _this.logger.log(LogLevel.Information, \"WebSocket connected to \" + url);\r\n                                    _this.webSocket = webSocket;\r\n                                    resolve();\r\n                                };\r\n                                webSocket.onerror = function (event) {\r\n                                    reject(event.error);\r\n                                };\r\n                                webSocket.onmessage = function (message) {\r\n                                    _this.logger.log(LogLevel.Trace, \"(WebSockets transport) data received. \" + getDataDetail(message.data, _this.logMessageContent) + \".\");\r\n                                    if (_this.onreceive) {\r\n                                        _this.onreceive(message.data);\r\n                                    }\r\n                                };\r\n                                webSocket.onclose = function (event) {\r\n                                    // webSocket will be null if the transport did not start successfully\r\n                                    _this.logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n                                    if (_this.onclose) {\r\n                                        if (event.wasClean === false || event.code !== 1000) {\r\n                                            _this.onclose(new Error(\"Websocket closed with status code: \" + event.code + \" (\" + event.reason + \")\"));\r\n                                        }\r\n                                        else {\r\n                                            _this.onclose();\r\n                                        }\r\n                                    }\r\n                                };\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WebSocketTransport.prototype.send = function (data) {\r\n        if (this.webSocket && this.webSocket.readyState === WebSocket.OPEN) {\r\n            this.logger.log(LogLevel.Trace, \"(WebSockets transport) sending data. \" + getDataDetail(data, this.logMessageContent) + \".\");\r\n            this.webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    };\r\n    WebSocketTransport.prototype.stop = function () {\r\n        if (this.webSocket) {\r\n            this.webSocket.close();\r\n            this.webSocket = null;\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    return WebSocketTransport;\r\n}());\r\nexport { WebSocketTransport };\r\n//# sourceMappingURL=WebSocketTransport.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { DefaultHttpClient } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\nvar MAX_REDIRECTS = 100;\r\n/** @private */\r\nvar HttpConnection = /** @class */ (function () {\r\n    function HttpConnection(url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.features = {};\r\n        Arg.isRequired(url, \"url\");\r\n        this.logger = createLogger(options.logger);\r\n        this.baseUrl = this.resolveUrl(url);\r\n        options = options || {};\r\n        options.accessTokenFactory = options.accessTokenFactory || (function () { return null; });\r\n        options.logMessageContent = options.logMessageContent || false;\r\n        this.httpClient = options.httpClient || new DefaultHttpClient(this.logger);\r\n        this.connectionState = 2 /* Disconnected */;\r\n        this.options = options;\r\n    }\r\n    HttpConnection.prototype.start = function (transferFormat) {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this.logger.log(LogLevel.Debug, \"Starting connection with transfer format '\" + TransferFormat[transferFormat] + \"'.\");\r\n        if (this.connectionState !== 2 /* Disconnected */) {\r\n            return Promise.reject(new Error(\"Cannot start a connection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this.connectionState = 0 /* Connecting */;\r\n        this.startPromise = this.startInternal(transferFormat);\r\n        return this.startPromise;\r\n    };\r\n    HttpConnection.prototype.send = function (data) {\r\n        if (this.connectionState !== 1 /* Connected */) {\r\n            throw new Error(\"Cannot send data if the connection is not in the 'Connected' State.\");\r\n        }\r\n        return this.transport.send(data);\r\n    };\r\n    HttpConnection.prototype.stop = function (error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.connectionState = 2 /* Disconnected */;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.startPromise];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 4:\r\n                        if (!this.transport) return [3 /*break*/, 6];\r\n                        this.stopError = error;\r\n                        return [4 /*yield*/, this.transport.stop()];\r\n                    case 5:\r\n                        _a.sent();\r\n                        this.transport = null;\r\n                        _a.label = 6;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.startInternal = function (transferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, negotiateResponse, redirects, _loop_1, this_1, state_1, e_2;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        url = this.baseUrl;\r\n                        this.accessTokenFactory = this.options.accessTokenFactory;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 12, , 13]);\r\n                        if (!this.options.skipNegotiation) return [3 /*break*/, 5];\r\n                        if (!(this.options.transport === HttpTransportType.WebSockets)) return [3 /*break*/, 3];\r\n                        // No need to add a connection ID in this case\r\n                        this.transport = this.constructTransport(HttpTransportType.WebSockets);\r\n                        // We should just call connect directly in this case.\r\n                        // No fallback or negotiate in this case.\r\n                        return [4 /*yield*/, this.transport.connect(url, transferFormat)];\r\n                    case 2:\r\n                        // We should just call connect directly in this case.\r\n                        // No fallback or negotiate in this case.\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3: throw Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                    case 4: return [3 /*break*/, 11];\r\n                    case 5:\r\n                        negotiateResponse = null;\r\n                        redirects = 0;\r\n                        _loop_1 = function () {\r\n                            var accessToken_1;\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0: return [4 /*yield*/, this_1.getNegotiationResponse(url)];\r\n                                    case 1:\r\n                                        negotiateResponse = _a.sent();\r\n                                        // the user tries to stop the connection when it is being started\r\n                                        if (this_1.connectionState === 2 /* Disconnected */) {\r\n                                            return [2 /*return*/, { value: void 0 }];\r\n                                        }\r\n                                        if (negotiateResponse.url) {\r\n                                            url = negotiateResponse.url;\r\n                                        }\r\n                                        if (negotiateResponse.accessToken) {\r\n                                            accessToken_1 = negotiateResponse.accessToken;\r\n                                            this_1.accessTokenFactory = function () { return accessToken_1; };\r\n                                        }\r\n                                        redirects++;\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        };\r\n                        this_1 = this;\r\n                        _a.label = 6;\r\n                    case 6: return [5 /*yield**/, _loop_1()];\r\n                    case 7:\r\n                        state_1 = _a.sent();\r\n                        if (typeof state_1 === \"object\")\r\n                            return [2 /*return*/, state_1.value];\r\n                        _a.label = 8;\r\n                    case 8:\r\n                        if (negotiateResponse.url && redirects < MAX_REDIRECTS) return [3 /*break*/, 6];\r\n                        _a.label = 9;\r\n                    case 9:\r\n                        if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                            throw Error(\"Negotiate redirection limit exceeded.\");\r\n                        }\r\n                        return [4 /*yield*/, this.createTransport(url, this.options.transport, negotiateResponse, transferFormat)];\r\n                    case 10:\r\n                        _a.sent();\r\n                        _a.label = 11;\r\n                    case 11:\r\n                        if (this.transport instanceof LongPollingTransport) {\r\n                            this.features.inherentKeepAlive = true;\r\n                        }\r\n                        this.transport.onreceive = this.onreceive;\r\n                        this.transport.onclose = function (e) { return _this.stopConnection(e); };\r\n                        // only change the state if we were connecting to not overwrite\r\n                        // the state if the connection is already marked as Disconnected\r\n                        this.changeState(0 /* Connecting */, 1 /* Connected */);\r\n                        return [3 /*break*/, 13];\r\n                    case 12:\r\n                        e_2 = _a.sent();\r\n                        this.logger.log(LogLevel.Error, \"Failed to start the connection: \" + e_2);\r\n                        this.connectionState = 2 /* Disconnected */;\r\n                        this.transport = null;\r\n                        throw e_2;\r\n                    case 13: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.getNegotiationResponse = function (url) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, token, headers, negotiateUrl, response, e_3;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _b.sent();\r\n                        if (token) {\r\n                            headers = (_a = {},\r\n                                _a[\"Authorization\"] = \"Bearer \" + token,\r\n                                _a);\r\n                        }\r\n                        negotiateUrl = this.resolveNegotiateUrl(url);\r\n                        this.logger.log(LogLevel.Debug, \"Sending negotiation request: \" + negotiateUrl);\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        _b.trys.push([2, 4, , 5]);\r\n                        return [4 /*yield*/, this.httpClient.post(negotiateUrl, {\r\n                                content: \"\",\r\n                                headers: headers,\r\n                            })];\r\n                    case 3:\r\n                        response = _b.sent();\r\n                        if (response.statusCode !== 200) {\r\n                            throw Error(\"Unexpected status code returned from negotiate \" + response.statusCode);\r\n                        }\r\n                        return [2 /*return*/, JSON.parse(response.content)];\r\n                    case 4:\r\n                        e_3 = _b.sent();\r\n                        this.logger.log(LogLevel.Error, \"Failed to complete negotiation with the server: \" + e_3);\r\n                        throw e_3;\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.createConnectUrl = function (url, connectionId) {\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + (\"id=\" + connectionId);\r\n    };\r\n    HttpConnection.prototype.createTransport = function (url, requestedTransport, negotiateResponse, requestedTransferFormat) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var connectUrl, transports, _i, transports_1, endpoint, transport, ex_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        connectUrl = this.createConnectUrl(url, negotiateResponse.connectionId);\r\n                        if (!this.isITransport(requestedTransport)) return [3 /*break*/, 2];\r\n                        this.logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n                        this.transport = requestedTransport;\r\n                        return [4 /*yield*/, this.transport.connect(connectUrl, requestedTransferFormat)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        // only change the state if we were connecting to not overwrite\r\n                        // the state if the connection is already marked as Disconnected\r\n                        this.changeState(0 /* Connecting */, 1 /* Connected */);\r\n                        return [2 /*return*/];\r\n                    case 2:\r\n                        transports = negotiateResponse.availableTransports;\r\n                        _i = 0, transports_1 = transports;\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        if (!(_i < transports_1.length)) return [3 /*break*/, 9];\r\n                        endpoint = transports_1[_i];\r\n                        this.connectionState = 0 /* Connecting */;\r\n                        transport = this.resolveTransport(endpoint, requestedTransport, requestedTransferFormat);\r\n                        if (!(typeof transport === \"number\")) return [3 /*break*/, 8];\r\n                        this.transport = this.constructTransport(transport);\r\n                        if (!(negotiateResponse.connectionId === null)) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this.getNegotiationResponse(url)];\r\n                    case 4:\r\n                        negotiateResponse = _a.sent();\r\n                        connectUrl = this.createConnectUrl(url, negotiateResponse.connectionId);\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        _a.trys.push([5, 7, , 8]);\r\n                        return [4 /*yield*/, this.transport.connect(connectUrl, requestedTransferFormat)];\r\n                    case 6:\r\n                        _a.sent();\r\n                        this.changeState(0 /* Connecting */, 1 /* Connected */);\r\n                        return [2 /*return*/];\r\n                    case 7:\r\n                        ex_1 = _a.sent();\r\n                        this.logger.log(LogLevel.Error, \"Failed to start the transport '\" + HttpTransportType[transport] + \"': \" + ex_1);\r\n                        this.connectionState = 2 /* Disconnected */;\r\n                        negotiateResponse.connectionId = null;\r\n                        return [3 /*break*/, 8];\r\n                    case 8:\r\n                        _i++;\r\n                        return [3 /*break*/, 3];\r\n                    case 9: throw new Error(\"Unable to initialize any of the available transports.\");\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.constructTransport = function (transport) {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                return new WebSocketTransport(this.accessTokenFactory, this.logger, this.options.logMessageContent);\r\n            case HttpTransportType.ServerSentEvents:\r\n                return new ServerSentEventsTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent);\r\n            default:\r\n                throw new Error(\"Unknown transport: \" + transport + \".\");\r\n        }\r\n    };\r\n    HttpConnection.prototype.resolveTransport = function (endpoint, requestedTransport, requestedTransferFormat) {\r\n        var transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this.logger.log(LogLevel.Debug, \"Skipping transport '\" + endpoint.transport + \"' because it is not supported by this client.\");\r\n        }\r\n        else {\r\n            var transferFormats = endpoint.transferFormats.map(function (s) { return TransferFormat[s]; });\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && typeof WebSocket === \"undefined\") ||\r\n                        (transport === HttpTransportType.ServerSentEvents && typeof EventSource === \"undefined\")) {\r\n                        this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it is not supported in your environment.'\");\r\n                    }\r\n                    else {\r\n                        this.logger.log(LogLevel.Debug, \"Selecting transport '\" + HttpTransportType[transport] + \"'\");\r\n                        return transport;\r\n                    }\r\n                }\r\n                else {\r\n                    this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it does not support the requested transfer format '\" + TransferFormat[requestedTransferFormat] + \"'.\");\r\n                }\r\n            }\r\n            else {\r\n                this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it was disabled by the client.\");\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    HttpConnection.prototype.isITransport = function (transport) {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    };\r\n    HttpConnection.prototype.changeState = function (from, to) {\r\n        if (this.connectionState === from) {\r\n            this.connectionState = to;\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    HttpConnection.prototype.stopConnection = function (error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                this.transport = null;\r\n                // If we have a stopError, it takes precedence over the error from the transport\r\n                error = this.stopError || error;\r\n                if (error) {\r\n                    this.logger.log(LogLevel.Error, \"Connection disconnected with error '\" + error + \"'.\");\r\n                }\r\n                else {\r\n                    this.logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n                }\r\n                this.connectionState = 2 /* Disconnected */;\r\n                if (this.onclose) {\r\n                    this.onclose(error);\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.resolveUrl = function (url) {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n        if (typeof window === \"undefined\" || !window || !window.document) {\r\n            throw new Error(\"Cannot resolve '\" + url + \"'.\");\r\n        }\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative  path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        var aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n        this.logger.log(LogLevel.Information, \"Normalizing '\" + url + \"' to '\" + aTag.href + \"'.\");\r\n        return aTag.href;\r\n    };\r\n    HttpConnection.prototype.resolveNegotiateUrl = function (url) {\r\n        var index = url.indexOf(\"?\");\r\n        var negotiateUrl = url.substring(0, index === -1 ? url.length : index);\r\n        if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\r\n            negotiateUrl += \"/\";\r\n        }\r\n        negotiateUrl += \"negotiate\";\r\n        negotiateUrl += index === -1 ? \"\" : url.substring(index);\r\n        return negotiateUrl;\r\n    };\r\n    return HttpConnection;\r\n}());\r\nexport { HttpConnection };\r\nfunction transportMatches(requestedTransport, actualTransport) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n//# sourceMappingURL=HttpConnection.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nvar JSON_HUB_PROTOCOL_NAME = \"json\";\r\n/** Implements the JSON Hub Protocol. */\r\nvar JsonHubProtocol = /** @class */ (function () {\r\n    function JsonHubProtocol() {\r\n        /** @inheritDoc */\r\n        this.name = JSON_HUB_PROTOCOL_NAME;\r\n        /** @inheritDoc */\r\n        this.version = 1;\r\n        /** @inheritDoc */\r\n        this.transferFormat = TransferFormat.Text;\r\n    }\r\n    /** Creates an array of {@link @aspnet/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    JsonHubProtocol.prototype.parseMessages = function (input, logger) {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n        if (!input) {\r\n            return [];\r\n        }\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n        // Parse the messages\r\n        var messages = TextMessageFormat.parse(input);\r\n        var hubMessages = [];\r\n        for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {\r\n            var message = messages_1[_i];\r\n            var parsedMessage = JSON.parse(message);\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this.isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this.isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this.isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n        return hubMessages;\r\n    };\r\n    /** Writes the specified {@link @aspnet/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    JsonHubProtocol.prototype.writeMessage = function (message) {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    };\r\n    JsonHubProtocol.prototype.isInvocationMessage = function (message) {\r\n        this.assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n        if (message.invocationId !== undefined) {\r\n            this.assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    };\r\n    JsonHubProtocol.prototype.isStreamItemMessage = function (message) {\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    };\r\n    JsonHubProtocol.prototype.isCompletionMessage = function (message) {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n        if (!message.result && message.error) {\r\n            this.assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    };\r\n    JsonHubProtocol.prototype.assertNotEmptyString = function (value, errorMessage) {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    };\r\n    return JsonHubProtocol;\r\n}());\r\nexport { JsonHubProtocol };\r\n//# sourceMappingURL=JsonHubProtocol.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\n/** A builder for configuring {@link @aspnet/signalr.HubConnection} instances. */\r\nvar HubConnectionBuilder = /** @class */ (function () {\r\n    function HubConnectionBuilder() {\r\n    }\r\n    HubConnectionBuilder.prototype.configureLogging = function (logging) {\r\n        Arg.isRequired(logging, \"logging\");\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        }\r\n        else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n        return this;\r\n    };\r\n    HubConnectionBuilder.prototype.withUrl = function (url, transportTypeOrOptions) {\r\n        Arg.isRequired(url, \"url\");\r\n        this.url = url;\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = transportTypeOrOptions;\r\n        }\r\n        else {\r\n            this.httpConnectionOptions = {\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n        return this;\r\n    };\r\n    /** Configures the {@link @aspnet/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @aspnet/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    HubConnectionBuilder.prototype.withHubProtocol = function (protocol) {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.protocol = protocol;\r\n        return this;\r\n    };\r\n    /** Creates a {@link @aspnet/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @aspnet/signalr.HubConnection}.\r\n     */\r\n    HubConnectionBuilder.prototype.build = function () {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        var httpConnectionOptions = this.httpConnectionOptions || {};\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        var connection = new HttpConnection(this.url, httpConnectionOptions);\r\n        return HubConnection.create(connection, this.logger || NullLogger.instance, this.protocol || new JsonHubProtocol());\r\n    };\r\n    return HubConnectionBuilder;\r\n}());\r\nexport { HubConnectionBuilder };\r\nfunction isLogger(logger) {\r\n    return logger.log !== undefined;\r\n}\r\n//# sourceMappingURL=HubConnectionBuilder.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport var VERSION = \"1.0.27\";\r\nexport { HttpError, TimeoutError } from \"./Errors\";\r\nexport { DefaultHttpClient, HttpClient, HttpResponse } from \"./HttpClient\";\r\nexport { HubConnection } from \"./HubConnection\";\r\nexport { HubConnectionBuilder } from \"./HubConnectionBuilder\";\r\nexport { MessageType } from \"./IHubProtocol\";\r\nexport { LogLevel } from \"./ILogger\";\r\nexport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nexport { NullLogger } from \"./Loggers\";\r\nexport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\n//# sourceMappingURL=index.js.map","<template>\r\n  <div class=\"caption-join\">\r\n    <div id=\"language-select\">\r\n      <select v-model=\"toLanguageCode\">\r\n        <option v-for=\"lang in toLanguageCodes\" :value=\"lang\" :key=\"lang\">\r\n          {{ lang }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n    <div id=\"captions-text\" class=\"caption\">\r\n      <div v-for=\"caption in captions\" :key=\"caption.offset\">{{ caption.text }}</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport constants from '../lib/constants'\r\nimport * as signalR from '@aspnet/signalr'\r\nimport languageListMixin from '../lib/language-list-mixin'\r\n\r\nexport default {\r\n  mixins: [ languageListMixin ],\r\n  props: {\r\n    clientId: String\r\n  },\r\n  data() {\r\n    return {\r\n      code: '',\r\n      captions: [],\r\n      toLanguageCode: 'en'\r\n    }\r\n  },\r\n  computed: {\r\n    toLanguageCodes() {\r\n      return this.toLanguages.map(l => l.substring(0, 2)).sort()\r\n    }\r\n  },\r\n  methods: {\r\n    async updateLanguageSubscription(languageCode) {        \r\n      await axios.post(`${constants.apiBaseUrl}/api/selectlanguage`, {\r\n        languageCode,\r\n        userId: this.clientId\r\n      })\r\n    }\r\n  },\r\n  watch: {\r\n    toLanguageCode: {\r\n      handler() {\r\n        return this.updateLanguageSubscription(this.toLanguageCode)\r\n      },\r\n      immediate: true\r\n    }\r\n  },\r\n  async mounted() {\r\n    this.connection = new signalR.HubConnectionBuilder()\r\n      .withUrl(`${constants.apiBaseUrl}/api/${this.clientId}`)\r\n      .build()\r\n\r\n    this.connection.on('newCaption', onNewCaption.bind(this))\r\n\r\n    await this.connection.start()\r\n    console.log('connection started')\r\n\r\n    const captionsMap = {}\r\n    function onNewCaption(caption) {\r\n      let localCaption = captionsMap[caption.offset]\r\n      if (!localCaption) {\r\n        localCaption = captionsMap[caption.offset] = {\r\n          offset: caption.offset,\r\n          text: ''\r\n        }\r\n        this.captions.push(localCaption)\r\n      }\r\n      localCaption.text = caption.text\r\n\r\n      Vue.nextTick(function() {\r\n        window.scrollTo(0, document.body.scrollHeight || document.documentElement.scrollHeight)\r\n      })\r\n    }\r\n  },\r\n  async beforeDestroy() {\r\n    if (this.connection) {\r\n      await Promise.all([\r\n        this.connection.stop(),\r\n        this.updateLanguageSubscription(null)\r\n      ])\r\n      console.log('connection stopped')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#language-select {\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  padding-top: 10px;\r\n  padding-bottom: 6px;\r\n  background-color: white;\r\n}\r\n\r\n#captions-text {\r\n  padding-top: 80px;\r\n  padding-bottom: 60px\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CaptionJoin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CaptionJoin.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CaptionJoin.vue?vue&type=template&id=344cfede&scoped=true&\"\nimport script from \"./CaptionJoin.vue?vue&type=script&lang=js&\"\nexport * from \"./CaptionJoin.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CaptionJoin.vue?vue&type=style&index=0&id=344cfede&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"344cfede\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n"],"sourceRoot":""}